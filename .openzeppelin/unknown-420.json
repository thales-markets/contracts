{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x72ca0765d4bE0529377d656c9645600606214610",
    "txHash": "0x3626b1a4d9775ada6f24b0352e4c8cb08e26e91758f18c0a98c901a3f74f0a71",
    "deployTransaction": {
      "hash": "0x3626b1a4d9775ada6f24b0352e4c8cb08e26e91758f18c0a98c901a3f74f0a71",
      "type": 0,
      "accessList": null,
      "blockHash": "0xea20cd2e2d65554f6e36ca4b13c78e0287a1529c78163438a471788f5c9ac766",
      "blockNumber": 938015,
      "transactionIndex": 0,
      "confirmations": 1,
      "from": "0x9841484A4a6C0B61C4EEa71376D76453fd05eC9C",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x2710"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 1,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x95b8c46018965db87317723e1a0fa00d4fe5fbff036a533b31933580f7e11e80",
      "s": "0x0ce5e1b9ec00ee5cb36ebb4b58ffd02c824afdc3c2faf161ab39789c65a24add",
      "v": 876,
      "creates": "0x72ca0765d4bE0529377d656c9645600606214610",
      "chainId": 420
    }
  },
  "proxies": [
    {
      "address": "0x8FE726b27e89Cd484981B2D27160186920Af2d17",
      "txHash": "0x6e20d51dc68bfb7afd7c3094c45d2275449878f3129988ca89fec5778ae53671",
      "kind": "transparent"
    },
    {
      "address": "0x1Ac7eBfa70AB18bf0a8C36e51ecD6C969E88B1d1",
      "txHash": "0x32bfb885c3a04cba8e67923a4f4256a4a8498eb5b4026648ce56e61a173c0219",
      "kind": "transparent"
    },
    {
      "address": "0xdB6EB989127D0c33bC630d7b5B53f87ceCED3ce1",
      "txHash": "0x2cf048e7b460845cf9134a31e2ba58a6df11fcc155a44996b4cee38cff1bf390",
      "kind": "transparent"
    },
    {
      "address": "0xae56177e405929c95E5d4b04C0C87E428cB6432B",
      "txHash": "0x62c074a67dcc35d18c44ccda5b531609037c3e365c6c68a06445c4efa7f5b701",
      "kind": "transparent"
    },
    {
      "address": "0xB72f87AA15E8FE50Ed364eB4A94486A578fc1556",
      "txHash": "0xc11f28bcaa5eb5a9e12c963b059fc4d79c73680ee27424bd166ac6b96805522b",
      "kind": "transparent"
    },
    {
      "address": "0x5915Bf86aD35330Acf103544aD205774a970a4E0",
      "txHash": "0x55a17c36acd3b9b0edb5650bb3d32e75adf0e221a3824275f66f46e48ecdaac2",
      "kind": "transparent"
    },
    {
      "address": "0x70C4C06586D4BA694F7481f5C43D6197C63890d1",
      "txHash": "0x0e1a67964ace9b34cbd5e7663a4288b6100c78d79b10a1f61a9826b515d0cb95",
      "kind": "transparent"
    },
    {
      "address": "0xB2947FC03d8Ee002726F4e28C42D513f7B6D6788",
      "txHash": "0x1066d948de493ca1278685753a2b239d405fe9edcdd038816537a20a67431fe7",
      "kind": "transparent"
    },
    {
      "address": "0x7465c5d60d3d095443CF9991Da03304A30D42Eae",
      "txHash": "0x9b6d7342acdfe29cbb7fb3e5c0959f77c6949f6c414ab1397146c2485528b612",
      "kind": "transparent"
    },
    {
      "address": "0x7A13403eBd6ee7a45abA2cEe663eF038A66F0A82",
      "txHash": "0x859062cd65644f13c04fde9511686c2f6dd8d05d63385ef3c2c4427d06eecd5f",
      "kind": "transparent"
    },
    {
      "address": "0x6a282c7E0656c3E1DAbB2fe0972e8Ea2BD109Fb3",
      "txHash": "0xc612815292bd37fcea1f76899e20a6699dcdcfe26e3cc6ee14a448b06042a70d",
      "kind": "transparent"
    },
    {
      "address": "0x8D47b12ce25E2dc6866e8aAC0DbD823Da09fADd6",
      "txHash": "0xf27f58e7255bc30391d991b0149c88cd64694fb153202efe020456bbcdb11632",
      "kind": "transparent"
    },
    {
      "address": "0x9cd5168C4ab2595ddb4Fec9B7bB64B39823cd850",
      "txHash": "0x8056af7ce8982600c383af010e62ce3c4f79fc42fc0c1538bf978028decadb2b",
      "kind": "transparent"
    },
    {
      "address": "0xcE9c1aAb41b18b24355138776186484B260B9cf0",
      "txHash": "0x9ce18945e2138afb126dc723080b7a70622a73ea77d4ed3a6818fe18a758045b",
      "kind": "transparent"
    },
    {
      "address": "0x618D7aeab71f1C5E2264982c0C35DCbE62600ad9",
      "txHash": "0xf9156005ee6519744e7b78527174e1daeac405e34f8390ddb5bccb27d9657afe",
      "kind": "transparent"
    },
    {
      "address": "0x0ec9D8Dac2178b041f85f60E3cF13CfaA3d23e0e",
      "txHash": "0x5a506c13133a70baf349fbca55b482f2a0c47aabe5697138fd13a8104c12ff8f",
      "kind": "transparent"
    },
    {
      "address": "0x21017be9B948Cbf3F1374322875A56719BEdb899",
      "txHash": "0x72ffc028f14672df0a746d7dfb569682763a578582a797cf83d256ef4d618cff",
      "kind": "transparent"
    },
    {
      "address": "0x40dEE0d7914FED2749E6b2dBb028Ac67aD453BE0",
      "txHash": "0xb510eecb85836907d67ad4df7de2de3c2aa3480c8b567f50da4abbef7294147b",
      "kind": "transparent"
    },
    {
      "address": "0x86991efb34B0Cf55af38E9dACE3f82CD8B70188F",
      "txHash": "0xb876751cee4ca44f1924cc60147cedc7cfff885d885e58f28f40d01cd86029fe",
      "kind": "transparent"
    },
    {
      "address": "0x6F511EC517496D9612e597A2295efD77a0d68E9E",
      "txHash": "0x1c0d49f7c9e83e7c54285e172fc4c3158513c630c0424db16eed8a5b1e7a39e2",
      "kind": "transparent"
    },
    {
      "address": "0xBCAF04856530D833F146E21224a5BB5b1786C02F",
      "txHash": "0xce98ead2b9ec7c3b1d102f9436f51d3fe6e418e332f83fd0208875daa8e11944",
      "kind": "transparent"
    },
    {
      "address": "0x504413511D4Ff4Df4113aDa5DA55Ef237cf3D849",
      "txHash": "0xb32eca838d28eff2094673913285afff980e01e1ff1147a0c6991e087c117fd2",
      "kind": "transparent"
    },
    {
      "address": "0x6042b190a1D39Bb5fD93dfeFF3C29977FF088FaF",
      "txHash": "0x1ec89a6f406c1cc9595113d02b162ddba7fc07a0b5bbba85d10a6bbc297f6eae",
      "kind": "transparent"
    },
    {
      "address": "0x04391Bc4AaD93b7FA355175f89735EF46BBb0dFD",
      "txHash": "0x25ca1f5bece049bb5cb783debb6c0580b9eac1d678393a64031a075611c2b9f8",
      "kind": "transparent"
    },
    {
      "address": "0xEa192960b7E2cc99dA6e6C192173694f6318BE4f",
      "txHash": "0xe3de66d32dea275c7cfa1c09d75c9be4ec0c54ac07de0aa736afcc0fde55e7e3",
      "kind": "transparent"
    },
    {
      "address": "0x89DcdEFF0C44C63c23deAa6b62D4Db5CE00DeDB1",
      "txHash": "0x6ec8264a8a1477a13c6d73921205119cc7a2b0ed0dc1a35532735019bf8ce905",
      "kind": "transparent"
    },
    {
      "address": "0x5CbAB3086478987A6C7A5e19012F5BA2bfc3df1b",
      "txHash": "0xcf311088be4f7167ea39b5a2f65a95ddd6cd7ef3c3b6092974779092cbd3269e",
      "kind": "transparent"
    },
    {
      "address": "0xA2Ee3a52D06dBAa21eADC395c046aC3707e156EE",
      "txHash": "0x481302812551dc0f07093c8fd69aee740840afd60204467d3de9b242b9975c81",
      "kind": "transparent"
    },
    {
      "address": "0xa5a69865A41e712adb5c69FF195f4480DB987fc6",
      "txHash": "0x36f309927cafd4eb12f0c3116b57de8fcc2970845a16362fac84f134a25e41f6",
      "kind": "transparent"
    },
    {
      "address": "0xBd4a0B1e47F8fEB977A6eE77519783eD543F7cA8",
      "txHash": "0x29cec5780c74874277429f47f238682f41b77c5a9346d25a70df876a3a77950c",
      "kind": "transparent"
    },
    {
      "address": "0xA72707bD22a40C728772A420546173FBe4BD5afB",
      "txHash": "0x9aa2a9ec253a5eea32a460d484349e45f859df58640a91ae1ae50bf8ded09824",
      "kind": "transparent"
    },
    {
      "address": "0xFC52E5115334f95D026F15D7BC98C2487cCB3588",
      "txHash": "0xd51f64c64e2ded3f86240100d06c9f51ecc623bef08e03805609a867aca6318e",
      "kind": "transparent"
    },
    {
      "address": "0xE7fc1dED638f00E7E20B6d5F024B0F33A7502609",
      "txHash": "0x85dea8f85e0aada3616f581e8e69adf1c111e88a49f926cc09140cfad91b4f75",
      "kind": "transparent"
    },
    {
      "address": "0x28D25990f7Dec7c606551c28A7A82B9D116dcb67",
      "txHash": "0x36e3999f0b1854b81fe35027ebdee908b200c56651bd901195cc52cbce9255b3",
      "kind": "transparent"
    },
    {
      "address": "0xE9bd38dB165F83B138d7F3F5cf033ea743FCA264",
      "txHash": "0x939367e2302b8a8752cbd5ad7ebe89321413fc8b85be5f5bae355085fdeae50b",
      "kind": "transparent"
    },
    {
      "address": "0x4013c5eeb3F48A50531315e07037fbEA6D16DE8F",
      "txHash": "0xeadb36aeb22d4b417c044526972c46070404d07575c16063c78936b1b95e2c4d",
      "kind": "transparent"
    },
    {
      "address": "0x28aC7A6DeF3D937129ac7245354E11ce89194FbB",
      "txHash": "0x541509077014cea81f88806d2a228902d9fb95736dedefe1633f8e79c575faa4",
      "kind": "transparent"
    },
    {
      "address": "0x3051d3a7e619C161B64dCe0B287688012655bA56",
      "txHash": "0x79bf4e13d49cdb7f35f738ebbb3587c9fead60b2bd7cc56b4a5101717fe6e78b",
      "kind": "transparent"
    },
    {
      "address": "0x00d23CE013094F7100b681426C046023d1C02858",
      "txHash": "0xce766ac0e763e89f78f891a89f8c3632f30f608ab323a1cf2c402bba752ca3bd",
      "kind": "transparent"
    },
    {
      "address": "0x202209397e2A26dc3243bD4bF46480C1f6661032",
      "txHash": "0xa33c50a9e806e00c063c50d9b691e4bbd508ac62ef5e22230a3c74ccf966adb4",
      "kind": "transparent"
    },
    {
      "address": "0x1E294CfE85260225EBcbFD25370204d14403E5A2",
      "txHash": "0xbdbabad1a44d4b2d9e2251b08c9c69941c50bae456f561bd6176fc7665dd3cb7",
      "kind": "transparent"
    },
    {
      "address": "0xf944e7a916Ec68896BDd2C8338069270318A6907",
      "txHash": "0x6079046ad794d40e8729805fa20acc6460e34ef5fa6858f35f4cd8f61455866d",
      "kind": "transparent"
    },
    {
      "address": "0x21C7684d27113E06e8B4Fe0114b0c74DEDFCC328",
      "txHash": "0xbd4097d5671b1500f8f739c931af1f8c6e098a86027d00ef373300acd8ca5461",
      "kind": "transparent"
    },
    {
      "address": "0x5A17bB0394dD25f21fd11aC6202561B04f126065",
      "txHash": "0x908cb174baf76017e8684bed4f6abb40a67e21f16676dea5b6903d45fd6f4525",
      "kind": "transparent"
    },
    {
      "address": "0x1dBc8eF4c551feb01C693e2c064aA66900D0f103",
      "txHash": "0x09fb9fcd3458d0a78e6db09ab91ad9c284182bd87a91b98ab43589268c5ddc93",
      "kind": "transparent"
    },
    {
      "address": "0xdd0879AB819287637f33A29d1ee91d5a76c890Af",
      "txHash": "0x12226d41bda43238239bf28ab8dab9fa54b2119b72173b69deca76f1779dfacc",
      "kind": "transparent"
    },
    {
      "address": "0x05C191f8Df6bFb72EFfc865550cF23982cafD753",
      "txHash": "0xba2d080d45999674e85e8f463dd1a5367722699c0d54959722e75236de143b48",
      "kind": "transparent"
    },
    {
      "address": "0x07d762943f2501C630cCDb82e3BD81DB4Ee45256",
      "txHash": "0xc2e4c203d60f108f0fc40ce6636ac40e588a75576836b523a4422009615562be",
      "kind": "transparent"
    },
    {
      "address": "0xB0b68F811Eb18E63aD942A7EcAE038715d4026c6",
      "txHash": "0xc141bebeba2b48e9082fc7124264f7282fa4fd665bfc43ebc45504bdd0868248",
      "kind": "transparent"
    },
    {
      "address": "0x08e6054D7bbE39Df4737B830F3F9f50a2B56b7df",
      "txHash": "0x1ce5e2566b51ca3058cd6b1b06fd90ad9d10ce4fbe96f841c4bcb642e973bd6e",
      "kind": "transparent"
    },
    {
      "address": "0x1218A1DF0Fc5934d44Ea52B298e91Fe6C9Bcee1b",
      "txHash": "0x340f3d1a55230fbb0b57d2043bf844254af18f3213e581950c4b592954f3a368",
      "kind": "transparent"
    },
    {
      "address": "0xAca69fa38a08EeF5b03a576387b85a5BFe8BbC19",
      "txHash": "0x9c1b737b98e17337b6bdae4e7ee132c2068c5854cfe01801772f26bb4bda44c8",
      "kind": "transparent"
    },
    {
      "address": "0x87005978e76C7356D1e0a8118DC82eaF52D49FB1",
      "txHash": "0x4a2862ddc5c3becd3ada7d48f90a7fc350a3aa8ef1bd89714b37218ed80e53f9",
      "kind": "transparent"
    },
    {
      "address": "0x54822552F51cd15c09bF360958A8e417989a925b",
      "txHash": "0xc667053f888ff4629093c1e89e1d0d0c44070699263ea5beb9d8c9a7c13dfea3",
      "kind": "transparent"
    },
    {
      "address": "0xDe86e35C47d9889c755b62480820AB3276A05d1d",
      "txHash": "0x92192acb56715b38e984fba0cc726e88c87d42d78bc160e1471366acca104422",
      "kind": "transparent"
    },
    {
      "address": "0x265F42a1F5dBEef66C514764766588a549610499",
      "txHash": "0xe1b51ee8c23be13de2e99987914c1a36231993a73ccf8af563eeaf4e01ef6ea6",
      "kind": "transparent"
    },
    {
      "address": "0xA5D52005df7C457B014A54b3cF9812c861Ea9dF9",
      "txHash": "0xbe2f9da6ca6056c0b9a17be6e332f2bf615bea31cc061aeb8f6d67644b63807c",
      "kind": "transparent"
    },
    {
      "address": "0xb25A2e739D9f10E346c5de5a46520Bf23df769E9",
      "txHash": "0x042111f50e29ea942e7ea7641742f964e810626c5710392b2e31a218ab1019c1",
      "kind": "transparent"
    },
    {
      "address": "0xE2c8EC9F0aF39530f00F13214ce9BA933034E59f",
      "txHash": "0x101ebb8f686f8a559d503d03b681f3f3e3e8d2dcefa639a3ba7d3f619833e551",
      "kind": "transparent"
    }
  ],
  "impls": {
    "817b56d816f8ec17c650fb8d98cbc1cc4006348e290e56bc2f16173085b9393a": {
      "address": "0xc5a5C42992dECbae36851359345FE25997F5C42d",
      "txHash": "0x8b056b1b427c61e8683353d95c9a2cac63a864dd7feabcbce02577f405d31b49",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:5"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:6"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:17"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:18"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyPausable.sol:9"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyPausable.sol:10"
          },
          {
            "contract": "ProxyThalesExchanger",
            "label": "ThalesToken",
            "type": "t_contract(IERC20)14713",
            "src": "contracts/exchange_L1_L2/ProxyThalesExchanger.sol:17"
          },
          {
            "contract": "ProxyThalesExchanger",
            "label": "OpThalesToken",
            "type": "t_contract(IERC20)14713",
            "src": "contracts/exchange_L1_L2/ProxyThalesExchanger.sol:18"
          },
          {
            "contract": "ProxyThalesExchanger",
            "label": "L1Bridge",
            "type": "t_contract(iOVM_L1ERC20Bridge)2276",
            "src": "contracts/exchange_L1_L2/ProxyThalesExchanger.sol:19"
          },
          {
            "contract": "ProxyThalesExchanger",
            "label": "l2TokenAddress",
            "type": "t_address",
            "src": "contracts/exchange_L1_L2/ProxyThalesExchanger.sol:21"
          }
        ],
        "types": {
          "t_contract(IERC20)14713": {
            "label": "contract IERC20"
          },
          "t_contract(iOVM_L1ERC20Bridge)2276": {
            "label": "contract iOVM_L1ERC20Bridge"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "42321d17c1f36d3f300ecd0cb4b0c816eaa9e6cf5e422c6eed30249cf5af1e77": {
      "address": "0xece0eEFFF3003d23e366C917104C6CF5Cdb404F1",
      "txHash": "0xfb10872cd7daf962dec82cfecaec8016702fb6a742fe6b75d2e5f785165352e5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "GamesQueue",
            "label": "gamesCreateQueue",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "contracts\\SportMarkets\\Rundown\\GamesQueue.sol:16"
          },
          {
            "contract": "GamesQueue",
            "label": "existingGamesInCreatedQueue",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\GamesQueue.sol:17"
          },
          {
            "contract": "GamesQueue",
            "label": "firstCreated",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Rundown\\GamesQueue.sol:18"
          },
          {
            "contract": "GamesQueue",
            "label": "lastCreated",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Rundown\\GamesQueue.sol:19"
          },
          {
            "contract": "GamesQueue",
            "label": "gameStartPerGameId",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SportMarkets\\Rundown\\GamesQueue.sol:20"
          },
          {
            "contract": "GamesQueue",
            "label": "unproccessedGames",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts\\SportMarkets\\Rundown\\GamesQueue.sol:23"
          },
          {
            "contract": "GamesQueue",
            "label": "unproccessedGamesIndex",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SportMarkets\\Rundown\\GamesQueue.sol:24"
          },
          {
            "contract": "GamesQueue",
            "label": "gamesResolvedQueue",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "contracts\\SportMarkets\\Rundown\\GamesQueue.sol:25"
          },
          {
            "contract": "GamesQueue",
            "label": "existingGamesInResolvedQueue",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\GamesQueue.sol:26"
          },
          {
            "contract": "GamesQueue",
            "label": "firstResolved",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Rundown\\GamesQueue.sol:27"
          },
          {
            "contract": "GamesQueue",
            "label": "lastResolved",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Rundown\\GamesQueue.sol:28"
          },
          {
            "contract": "GamesQueue",
            "label": "consumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Rundown\\GamesQueue.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "25eb04548f9e8c55e1cea804faaf0e67570f0aa1bd0e09c4a69d07fa534b82e7": {
      "address": "0x85b827d133FEDC36B844b20f4a198dA583B25BAA",
      "txHash": "0x51bcaebeb60fc29691aba88763a55d2c80d9e627f3d020b76cdac4af54bc7c0e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:55"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:56"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:59"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:60"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:61"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)899_storage)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:64"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)908_storage)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:65"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)917_storage)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:66"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:67"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:68"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:69"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:72"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:73"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:74"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:75"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)4430",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:78"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:79"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:80"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:81"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:82"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)854",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:85"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:86"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:87"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:88"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:89"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:90"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:92"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)899_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)899_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)908_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)908_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)917_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)917_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)4430": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)854": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          }
        }
      }
    },
    "792ad127af49c276251c3427a9319da9fef183c4df907635fb8e0723798dc901": {
      "address": "0x73043369F8EFdd6E0fcB09c1201eE787583a7425",
      "txHash": "0x5d4b9f05b3f5d2b9ac319bdf57b5d2b24829cd337352f13701921f52975fed39",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "expiryDuration",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:29"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "marketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:31"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "customMarketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:32"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:34"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)70034_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:36"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)70034_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:37"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_migratingManager",
            "type": "t_contract(SportPositionalMarketManager)51240",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:39"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sUSD",
            "type": "t_contract(IERC20)3430",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:41"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:43"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sportPositionalMarketFactory",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:44"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:45"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)70034_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(SportPositionalMarketManager)51240": {
            "label": "contract SportPositionalMarketManager"
          },
          "t_contract(IERC20)3430": {
            "label": "contract IERC20"
          }
        }
      }
    },
    "f20fdde498fa35de1c6461ec96a6b6ddf3f5cd7fc47f690b0625e114c1cac491": {
      "address": "0x1751dDCE8D8B917223e05D8bD015dfb81bF1fcf2",
      "txHash": "0x110618c17096312782e778475db931c6024039a2b9f0a110f614d5d26ee3a902",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "SportPositionalMarketFactory",
            "label": "positionalMarketManager",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketFactory.sol:16"
          },
          {
            "contract": "SportPositionalMarketFactory",
            "label": "positionalMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketFactory.sol:18"
          },
          {
            "contract": "SportPositionalMarketFactory",
            "label": "positionMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketFactory.sol:19"
          },
          {
            "contract": "SportPositionalMarketFactory",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketFactory.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ec299b886aac53e5f460a6223c7d94d5dcb36bca1ec8f9de7502fa154ca25199": {
      "address": "0xc62E56E756a3D14ffF838e820F38d845a16D49dE",
      "txHash": "0x5e03a92e152eb3b610b78ff3aea0235dca6e8a5971263016e8edbe7d7d350643",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:18"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9e7883b9aef01457186a4dc703f55c8b1c7149464567c76b8f136b446e98e0a0": {
      "address": "0x68E0a872b193F338E4BE930EdA74D57Bd0089a37",
      "txHash": "0x6b235be8d487bc8a577a83c57da119de7a35d5e9585ea488bbc7ad1e891b24ce",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6720",
            "src": "contracts/SportMarkets/SportsAMM.sol:44"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:47"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:51"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:54"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:57"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:61"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:70"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:73"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:76"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:79"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)65708",
            "src": "contracts/SportMarkets/SportsAMM.sol:82"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:85"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:88"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)64166",
            "src": "contracts/SportMarkets/SportsAMM.sol:91"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:94"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:97"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:100"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportsAMM.sol:103"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:106"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:109"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:112"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)6720": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)65708": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)64166": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5157709a4a48f818994cc9ff2ffbf0b4afe1afad52d4c220a1b0bbd2b93d24d5": {
      "address": "0x943fb0D6CDeB373D4384f617887EB557855B815d",
      "txHash": "0x80f7cbf22785fcc491e706980d36231fdee9c78f3a1be2f6df2681c3261ef51f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "Referrals",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/AMM/Referrals.sol:21"
          },
          {
            "contract": "Referrals",
            "label": "referrals",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/AMM/Referrals.sol:22"
          },
          {
            "contract": "Referrals",
            "label": "referralStarted",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/AMM/Referrals.sol:23"
          },
          {
            "contract": "Referrals",
            "label": "tradedBefore",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/AMM/Referrals.sol:25"
          },
          {
            "contract": "Referrals",
            "label": "sportReferrals",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/AMM/Referrals.sol:27"
          },
          {
            "contract": "Referrals",
            "label": "sportReferralStarted",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/AMM/Referrals.sol:28"
          },
          {
            "contract": "Referrals",
            "label": "sportTradedBefore",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/AMM/Referrals.sol:29"
          },
          {
            "contract": "Referrals",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/AMM/Referrals.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "60401ae028acfe428da2edc12300d9e2df06eb2e6e38313620d4b211717956c3": {
      "address": "0xfe0796f85Ea9348748ec01D60285113D12c39819",
      "txHash": "0x34ad4a91398d0513b5a33340b0bede1f9dbc29ab6955eec1af2700133c66e08e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:55"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:56"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:59"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:60"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:61"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)899_storage)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:64"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)908_storage)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:65"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)917_storage)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:66"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:67"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:68"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:69"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:72"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:73"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:74"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:75"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)4367",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:78"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:79"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:80"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:81"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:82"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)854",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:85"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:86"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:87"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:88"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:89"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:90"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:92"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)899_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)899_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)908_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)908_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)917_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)917_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)4367": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)854": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          }
        }
      }
    },
    "44026f9efd5911e22efdf9ba98f92f97391b57b9425a0f652f5f57f800a91fa9": {
      "address": "0x5263e8A60D27B288018Dcb940c002700e123f808",
      "txHash": "0xf0080e8655b4236b70fb670ca2b94a16fb4460931ccfd2cf7c6dbee69cac4181",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:55"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:56"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:59"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:60"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:61"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)899_storage)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:64"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)908_storage)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:65"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)917_storage)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:66"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:67"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:68"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:69"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:72"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:73"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:74"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:75"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)4365",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:78"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:79"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:80"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:81"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:82"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)854",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:85"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:86"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:87"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:88"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:89"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:90"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:92"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)899_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)899_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)908_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)908_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)917_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)917_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)4365": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)854": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          }
        }
      }
    },
    "c910294f03b71770268dcd45864e9c8d5011cc75fbd0c3e71295705f47f5e39c": {
      "address": "0x9E0B492F029F969affBFd78cA17302c2da2604E6",
      "txHash": "0xebbb497fc7b1705c78a9c387a5d19c8a129e23ae0abd2820cb3d200b971bd78e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:55"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:56"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:59"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:60"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:61"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)899_storage)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:64"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)908_storage)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:65"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)917_storage)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:66"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:67"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:68"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:69"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:72"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:73"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:74"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:75"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)4382",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:78"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:79"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:80"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:81"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:82"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)854",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:85"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:86"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:87"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:88"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:89"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:90"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\TherundownConsumer.sol:92"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)899_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)899_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)908_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)908_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)917_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)917_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)4382": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)854": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          }
        }
      }
    },
    "4df16265436e6f67a16b1c2573edac6c4a7bb42dbda553249539a6343cad2e3d": {
      "address": "0x50B532AdAF5378F59dBD619dFD03E4d4ab3586bC",
      "txHash": "0x7d917f5568d452ba2fe848dbb474581b829fe7c48dabdfc5239a49139f5e155f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "expiryDuration",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:29"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "marketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:31"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "customMarketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:32"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:34"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)5042_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:36"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)5042_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:37"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_migratingManager",
            "type": "t_contract(SportPositionalMarketManager)4338",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:39"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sUSD",
            "type": "t_contract(IERC20)157",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:41"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:43"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sportPositionalMarketFactory",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:44"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:45"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:46"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)5042_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(SportPositionalMarketManager)4338": {
            "label": "contract SportPositionalMarketManager"
          },
          "t_contract(IERC20)157": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "7b07b81dbfb8143e7914d105eb758d93a3b176d3db0c793551a8145d8f46e8d7": {
      "address": "0x3Adf14e387F7e2aF14B54Ea8C2F4Bb41bb79b0E9",
      "txHash": "0xd3c6c135755d544b062ff0e64aaea3a9de147911d83c63802b06693d426924b5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "expiryDuration",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:29"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "marketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:31"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "customMarketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:32"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:34"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)70106_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:36"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)70106_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:37"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_migratingManager",
            "type": "t_contract(SportPositionalMarketManager)51312",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:39"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sUSD",
            "type": "t_contract(IERC20)3430",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:41"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:43"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sportPositionalMarketFactory",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:44"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:45"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:46"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)70106_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(SportPositionalMarketManager)51312": {
            "label": "contract SportPositionalMarketManager"
          },
          "t_contract(IERC20)3430": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "8fbabec4960bf1685d059f376115eae5a95021a462a57d4a2c74b49780a212a4": {
      "address": "0x575D88fdcd1e5Ac9a7424BA100F385736cE021D4",
      "txHash": "0x34e13c8be964bc6e0297f430a81440135547c355429adc590afb5e405ec665ca",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesQueue",
            "label": "gamesCreateQueue",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:16"
          },
          {
            "contract": "GamesQueue",
            "label": "existingGamesInCreatedQueue",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:17"
          },
          {
            "contract": "GamesQueue",
            "label": "firstCreated",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:18"
          },
          {
            "contract": "GamesQueue",
            "label": "lastCreated",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:19"
          },
          {
            "contract": "GamesQueue",
            "label": "gameStartPerGameId",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:20"
          },
          {
            "contract": "GamesQueue",
            "label": "unproccessedGames",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:23"
          },
          {
            "contract": "GamesQueue",
            "label": "unproccessedGamesIndex",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:24"
          },
          {
            "contract": "GamesQueue",
            "label": "gamesResolvedQueue",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:25"
          },
          {
            "contract": "GamesQueue",
            "label": "existingGamesInResolvedQueue",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:26"
          },
          {
            "contract": "GamesQueue",
            "label": "firstResolved",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:27"
          },
          {
            "contract": "GamesQueue",
            "label": "lastResolved",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:28"
          },
          {
            "contract": "GamesQueue",
            "label": "consumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:30"
          },
          {
            "contract": "GamesQueue",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:31"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "6e107ca9a313433a37f91b54f198c97e9473f8f2e2e62a5c3ff88c6158b43278": {
      "address": "0xba8192e78D3F4438134D4A311BAbf7adee253f30",
      "txHash": "0xf41ae32fc3dee1e87f4d3642db54f7527c8bd323a1b5cdbfcf36b867de34153f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "expiryDuration",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:29"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "marketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:31"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "customMarketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:32"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:34"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)5116_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:36"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)5116_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:37"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_migratingManager",
            "type": "t_contract(SportPositionalMarketManager)4382",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:39"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sUSD",
            "type": "t_contract(IERC20)157",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:41"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:43"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sportPositionalMarketFactory",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:44"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:45"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:46"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)5116_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(SportPositionalMarketManager)4382": {
            "label": "contract SportPositionalMarketManager"
          },
          "t_contract(IERC20)157": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "6b4e5738b997fe970fa285d15ac7316f6c59f7709f801675672146246a0807d3": {
      "address": "0x99D3cF3A00Dcb3DfeDAd5eb89257792c8c897306",
      "txHash": "0x250e985b6f26da85250e355de23dd30cd1e5b88f0b7508c664a90eb1c324fc51",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:55"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:56"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:59"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:60"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:61"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)952_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:64"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)961_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:65"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)970_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:66"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:67"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:68"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:69"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:72"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:73"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:74"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:75"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)4503",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:78"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:79"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:80"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:81"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:82"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)907",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:85"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:86"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:87"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:88"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:89"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:90"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)952_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)952_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)961_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)961_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)970_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)970_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)4503": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)907": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          }
        }
      }
    },
    "7d445a69d603170aac4b9169810802171953f2bf0583891839cdccbcb2a6ec09": {
      "address": "0x6c6F9068c8FE47b159F0f9A1a02C8428C71D2C09",
      "txHash": "0xeec0989fc7d7d61de26a853de15cf464b6cdd157a05ef40b94888b4d1d464f28",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:55"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:56"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:59"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:60"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:61"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)952_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:64"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)961_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:65"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)970_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:66"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:67"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:68"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:69"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:72"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:73"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:74"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:75"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)4550",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:78"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:79"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:80"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:81"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:82"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)907",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:85"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:86"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:87"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:88"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:89"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:90"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOnADate",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:94"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)952_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)952_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)961_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)961_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)970_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)970_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)4550": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)907": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          }
        }
      }
    },
    "bbdac26cc5d651721b682b376d9f28254ad78c33ea871f298df1eaee0b98fbbf": {
      "address": "0xcF38026e35cC6803cF368d0E0005D39d8A420938",
      "txHash": "0x1784619016d0ef50443996799a69ef1889808a214b746d83f0ca38797144b4eb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:55"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:56"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:59"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:60"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:61"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)47095_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:64"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)47104_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:65"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)47113_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:66"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:67"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:68"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:69"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:72"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:73"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:74"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:75"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)68486",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:78"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:79"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:80"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:81"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:82"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)47050",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:85"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:86"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:87"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:88"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:89"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:90"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOnADate",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:94"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)47095_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)47095_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)47104_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)47104_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)47113_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)47113_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)68486": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)47050": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          }
        }
      }
    },
    "c034d4836bcd4295c52c740dc4ca330dc1b269663ad157a56d9f242108ba65d6": {
      "address": "0xD9ceC0F5b2B43C74DFA4A87117968808b95d9018",
      "txHash": "0x4d1fa3a580672c3bd6d3ad7e1cf0ce01d6aea74d015dad2b4423ee6d7df0cd17",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:56"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:57"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:60"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:61"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:62"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)952_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:65"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)963_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:66"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)972_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:67"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:68"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:69"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:70"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:73"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:74"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:75"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:76"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)4523",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:79"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:80"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:81"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:82"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:83"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)907",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:86"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:87"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:88"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:89"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:90"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:94"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOnADate",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:95"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)952_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)952_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)963_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)963_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)972_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)972_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)4523": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)907": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          }
        }
      }
    },
    "24b1c72502fdd5bb8e5793c1ac671b4b566a14dbb22fe73f740dc4b3a353d753": {
      "address": "0x58b76Ca235E8cC0432A9026e92209d7E8B8214a9",
      "txHash": "0xa7a7d4ba517bc5b97dbbebc52a8ed5108f3268a905016d39e4527aff85bb770a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "PriceFeed",
            "label": "aggregators",
            "type": "t_mapping(t_bytes32,t_contract(AggregatorV2V3Interface)141)",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:23"
          },
          {
            "contract": "PriceFeed",
            "label": "currencyKeyDecimals",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:25"
          },
          {
            "contract": "PriceFeed",
            "label": "aggregatorKeys",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:27"
          },
          {
            "contract": "PriceFeed",
            "label": "currencyKeys",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:30"
          },
          {
            "contract": "PriceFeed",
            "label": "pools",
            "type": "t_mapping(t_bytes32,t_contract(IUniswapV3Pool)12126)",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:31"
          },
          {
            "contract": "PriceFeed",
            "label": "twapInterval",
            "type": "t_int56",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:33"
          },
          {
            "contract": "PriceFeed",
            "label": "_ETH",
            "type": "t_address",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:40"
          },
          {
            "contract": "PriceFeed",
            "label": "_wETH",
            "type": "t_address",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:41"
          },
          {
            "contract": "PriceFeed",
            "label": "useLastTickForTWAP",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:43"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_contract(AggregatorV2V3Interface)141)": {
            "label": "mapping(bytes32 => contract AggregatorV2V3Interface)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(AggregatorV2V3Interface)141": {
            "label": "contract AggregatorV2V3Interface"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_contract(IUniswapV3Pool)12126)": {
            "label": "mapping(bytes32 => contract IUniswapV3Pool)"
          },
          "t_contract(IUniswapV3Pool)12126": {
            "label": "contract IUniswapV3Pool"
          },
          "t_int56": {
            "label": "int56"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d4abce7b48fc12964c00a1a569d7fe8753126e26d074f8baa6dc6195f78d6e8f": {
      "address": "0x77d5Fc6bB956Def527AB2774852b1f01c07B3D1C",
      "txHash": "0xdf9ae69494d287bf429496ac5869739a424a0e1e18159eaafbeb80e60883bb0a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "durations",
            "type": "t_struct(Durations)22135_storage",
            "src": "contracts/Positions/PositionalMarketManager.sol:45"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "capitalRequirement",
            "type": "t_uint256",
            "src": "contracts/Positions/PositionalMarketManager.sol:46"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/Positions/PositionalMarketManager.sol:48"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "customMarketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/Positions/PositionalMarketManager.sol:49"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "onlyWhitelistedAddressesCanCreateMarkets",
            "type": "t_bool",
            "src": "contracts/Positions/PositionalMarketManager.sol:51"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Positions/PositionalMarketManager.sol:52"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts/Positions/PositionalMarketManager.sol:54"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)70507_storage",
            "src": "contracts/Positions/PositionalMarketManager.sol:56"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)70507_storage",
            "src": "contracts/Positions/PositionalMarketManager.sol:57"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "_migratingManager",
            "type": "t_contract(PositionalMarketManager)23518",
            "src": "contracts/Positions/PositionalMarketManager.sol:59"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)64968",
            "src": "contracts/Positions/PositionalMarketManager.sol:61"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "sUSD",
            "type": "t_contract(IERC20)4879",
            "src": "contracts/Positions/PositionalMarketManager.sol:62"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "positionalMarketFactory",
            "type": "t_address",
            "src": "contracts/Positions/PositionalMarketManager.sol:64"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts/Positions/PositionalMarketManager.sol:66"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "timeframeBuffer",
            "type": "t_uint256",
            "src": "contracts/Positions/PositionalMarketManager.sol:68"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "priceBuffer",
            "type": "t_uint256",
            "src": "contracts/Positions/PositionalMarketManager.sol:69"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketsPerOracleKey",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_array(t_address)dyn_storage))",
            "src": "contracts/Positions/PositionalMarketManager.sol:71"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketsStrikePrice",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Positions/PositionalMarketManager.sol:72"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "onlyAMMMintingAndBurning",
            "type": "t_bool",
            "src": "contracts/Positions/PositionalMarketManager.sol:74"
          }
        ],
        "types": {
          "t_struct(Durations)22135_storage": {
            "label": "struct PositionalMarketManager.Durations",
            "members": [
              {
                "label": "expiryDuration",
                "type": "t_uint256"
              },
              {
                "label": "maxTimeToMaturity",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(AddressSet)70507_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(PositionalMarketManager)23518": {
            "label": "contract PositionalMarketManager"
          },
          "t_contract(IPriceFeed)64968": {
            "label": "contract IPriceFeed"
          },
          "t_contract(IERC20)4879": {
            "label": "contract IERC20"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_array(t_address)dyn_storage))": {
            "label": "mapping(bytes32 => mapping(uint256 => address[]))"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          }
        }
      }
    },
    "21aba925da87e570c420640add6bc5eb32ecd94bda1c3a6902d139d2f4718ae2": {
      "address": "0xe5fEA4518abCf18ABEf8889c8265eC6978545401",
      "txHash": "0xfa8e267f237493a0c849b626c1d6de75b2cb581e7e4be65aaf67705bd869086f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "PositionalMarketFactory",
            "label": "positionalMarketManager",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketFactory.sol:20"
          },
          {
            "contract": "PositionalMarketFactory",
            "label": "positionalMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketFactory.sol:22"
          },
          {
            "contract": "PositionalMarketFactory",
            "label": "positionMastercopy",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketFactory.sol:23"
          },
          {
            "contract": "PositionalMarketFactory",
            "label": "limitOrderProvider",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketFactory.sol:25"
          },
          {
            "contract": "PositionalMarketFactory",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketFactory.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ad364f94a8e68c5a8115e45382535ae2fb484390bda1a38744a9fe188dc630db": {
      "address": "0x5cE95b8bD157f14b56871C8D69264d9b72f537e7",
      "txHash": "0x2efbc91f62d0c6b47439de105298a9caa9fb8aae4203721226187887ffa38daa",
      "layout": {
        "storage": [
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:63"
          },
          {
            "contract": "ThalesAMM",
            "label": "deciMath",
            "type": "t_contract(DeciMath)6221",
            "src": "contracts\\AMM\\ThalesAMM.sol:29"
          },
          {
            "contract": "ThalesAMM",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)17053",
            "src": "contracts\\AMM\\ThalesAMM.sol:34"
          },
          {
            "contract": "ThalesAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20)19668",
            "src": "contracts\\AMM\\ThalesAMM.sol:35"
          },
          {
            "contract": "ThalesAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:36"
          },
          {
            "contract": "ThalesAMM",
            "label": "capPerMarket",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:38"
          },
          {
            "contract": "ThalesAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:39"
          },
          {
            "contract": "ThalesAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:40"
          },
          {
            "contract": "ThalesAMM",
            "label": "impliedVolatilityPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:42"
          },
          {
            "contract": "ThalesAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:44"
          },
          {
            "contract": "ThalesAMM",
            "label": "spentOnMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:51"
          },
          {
            "contract": "ThalesAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:53"
          },
          {
            "contract": "ThalesAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:54"
          },
          {
            "contract": "ThalesAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)17185",
            "src": "contracts\\AMM\\ThalesAMM.sol:56"
          },
          {
            "contract": "ThalesAMM",
            "label": "minSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:58"
          },
          {
            "contract": "ThalesAMM",
            "label": "maxSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:59"
          },
          {
            "contract": "ThalesAMM",
            "label": "_capPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:61"
          },
          {
            "contract": "ThalesAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\ThalesAMM.sol:63"
          },
          {
            "contract": "ThalesAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:65"
          },
          {
            "contract": "ThalesAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:66"
          },
          {
            "contract": "ThalesAMM",
            "label": "previousManager",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:68"
          },
          {
            "contract": "ThalesAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)16635",
            "src": "contracts\\AMM\\ThalesAMM.sol:70"
          },
          {
            "contract": "ThalesAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:72"
          },
          {
            "contract": "ThalesAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:73"
          },
          {
            "contract": "ThalesAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:74"
          },
          {
            "contract": "ThalesAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\AMM\\ThalesAMM.sol:78"
          },
          {
            "contract": "ThalesAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:80"
          }
        ],
        "types": {
          "t_contract(DeciMath)6221": {
            "label": "contract DeciMath"
          },
          "t_contract(IPriceFeed)17053": {
            "label": "contract IPriceFeed"
          },
          "t_contract(IERC20)19668": {
            "label": "contract IERC20"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)17185": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ICurveSUSD)16635": {
            "label": "contract ICurveSUSD"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c3f9e962e286e6089550f29c35c5fcb2a314890966b512e8b5dff2e75edcdc24": {
      "address": "0xd873c1534e8709601Be4F9C2b63B0074B81c2E0c",
      "txHash": "0xe8935760ce7b2f4451f9c594dad5600bcd53d06557e24b720bdbf1758c24200c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "expiryDuration",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:29"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "marketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:31"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "customMarketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:32"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:34"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)73444_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:36"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)73444_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:37"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_migratingManager",
            "type": "t_contract(SportPositionalMarketManager)54504",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:39"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sUSD",
            "type": "t_contract(IERC20)3430",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:41"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:43"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sportPositionalMarketFactory",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:44"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:45"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:46"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:47"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)73444_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(SportPositionalMarketManager)54504": {
            "label": "contract SportPositionalMarketManager"
          },
          "t_contract(IERC20)3430": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "c8f84263ec185b5d046197f78649aa37788eb36a61076b3d5983199d742fd347": {
      "address": "0x9Ee26dcb9A3F1104B37A5dCc8573c8b144c7ce42",
      "txHash": "0xa0eaed3b11d4ce189959461faef0b356d51797563f13724ae380c38c40fb1367",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "thalesAmm",
            "type": "t_contract(IThalesAMM)68722",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:39"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "rangedAmmFee",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:41"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "createdRangedMarkets",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:43"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)73466_storage",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:44"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "rangedMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:46"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "rangedPositionMastercopy",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:47"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6720",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:49"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "spentOnMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:51"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "capPerMarket",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:54"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "minSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:56"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "maxSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:57"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:59"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:60"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "minimalDifBetweenStrikes",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:62"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)68599",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:64"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "maximalDifBetweenStrikes",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:66"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:68"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:69"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)67043",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:71"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:73"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:74"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:75"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:77"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:78"
          }
        ],
        "types": {
          "t_contract(IThalesAMM)68722": {
            "label": "contract IThalesAMM"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_struct(AddressSet)73466_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IERC20Upgradeable)6720": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)68599": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)67043": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b3fb6ef37e5b2b631b8137744c0e4ceb391e235dcb294b8ae6b9e92fff626f95": {
      "address": "0x38C1bB9fd1a80a56894b9b9195F8401c11087a5f",
      "txHash": "0xcebe817e77cd166a424e3835063dde7286b394c0d5f85a8489bcb74857cfb1f8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)10068",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:38"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)9996",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:39"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)1142",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)10138",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)9243",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:44"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:52"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:55"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:60"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)10227_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:63"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:64"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)10068": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)9996": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)1142": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)10138": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)9243": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)10227_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "28407ada019791ea411e0343f95eba7dbd710b306200517ed488435a3ecea227": {
      "address": "0x657a0A6C74262Ce7630E470778538487D092fEe2",
      "txHash": "0x4446e7ca55167fc853d04d955f8c8e5289f2937cfb0a0b0554c006e0694eeb67",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:57"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:58"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:61"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:62"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:63"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)953_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:66"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)964_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:67"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)973_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:68"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:69"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:70"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:71"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:74"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:75"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:76"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:77"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)4207",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:80"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:81"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:82"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:83"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:84"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)907",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:87"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:88"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:89"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:90"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:94"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:95"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOnADate",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:96"
          },
          {
            "contract": "TherundownConsumer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)4292",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:98"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)953_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)953_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)964_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)964_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)973_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)973_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)4207": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)907": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          },
          "t_contract(ITherundownConsumerVerifier)4292": {
            "label": "contract ITherundownConsumerVerifier"
          }
        }
      }
    },
    "7199d250d2013114f8074eaabfc94a8729132d1758f32a9a60d0e0ad302e53bb": {
      "address": "0xD490062745f83c8005a3518D7CdE98022eF9F647",
      "txHash": "0x842d3ae08ed910f6dbb8866b963e1071535dd6b03ebe32dcefd2bfb5f437e84a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)73051",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:38"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)72979",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:39"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6720",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)73121",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)71436",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:44"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:52"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:55"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:60"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)77988_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:63"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:64"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)73051": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)72979": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)6720": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)73121": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)71436": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)77988_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "598a98ea09ab04ad81e7c3b4685b608fa751ce83c91e413c0d974dafc9d198cd": {
      "address": "0xfba4777e4931E149d6680fE04b4Bf5112669EDb4",
      "txHash": "0x16d6f5c8e3b0cfac0c9507bacd2cbc95389e624370336cc2a384cab74d0c5ec5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)69850",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:24"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "invalidName",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:25"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "supportedMarketType",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:26"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultOddThreshold",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:27"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "oddThresholdForSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:28"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)69850": {
            "label": "contract ITherundownConsumer"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "1ea52849d46befa695bac035228c27630e85dbf9096f2c8e54fd66380403bab6": {
      "address": "0xEb34fce24A2771348f499106ef656f8F17b85F79",
      "txHash": "0x6981e5f5e895f08b0df0bc460a449e3d53dbb80cdfbc98d65cf995bb413ff698",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6720",
            "src": "contracts/SportMarkets/SportsAMM.sol:45"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:48"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:52"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:55"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:58"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:62"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:71"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:74"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:77"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:80"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)73358",
            "src": "contracts/SportMarkets/SportsAMM.sol:83"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:86"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:89"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)71673",
            "src": "contracts/SportMarkets/SportsAMM.sol:92"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:95"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:98"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:101"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportsAMM.sol:104"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:107"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:110"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:113"
          },
          {
            "contract": "SportsAMM",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:116"
          },
          {
            "contract": "SportsAMM",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:119"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)6720": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)73358": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)71673": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1c2aa1aeed0f4e137b33727211e8a289269d8eee9a58f35c18c1aed41d4ff7e8": {
      "address": "0xcF03E91d7CFCE7722915F2576fC1d4457E86f8A3",
      "txHash": "0x27744030a34b361dacca7b3eebf5fcbe1cec69afd2dc2b075ec313cc0fdd661e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ParlayMarketData",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)77988_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:15"
          },
          {
            "contract": "ParlayMarketData",
            "label": "_parlaysInGamePosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)77988_storage))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:21"
          },
          {
            "contract": "ParlayMarketData",
            "label": "gamePositionParlay",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:22"
          },
          {
            "contract": "ParlayMarketData",
            "label": "numOfparlaysInGamePosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:23"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayDetails",
            "type": "t_mapping(t_address,t_struct(ParlayDetails)48089_storage)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:24"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayMarketsAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:26"
          }
        ],
        "types": {
          "t_struct(AddressSet)77988_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)77988_storage))": {
            "label": "mapping(address => mapping(uint256 => struct AddressSetLib.AddressSet))"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)77988_storage)": {
            "label": "mapping(uint256 => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))": {
            "label": "mapping(address => mapping(uint256 => mapping(uint256 => address)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint256 => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(ParlayDetails)48089_storage)": {
            "label": "mapping(address => struct ParlayMarketData.ParlayDetails)"
          },
          "t_struct(ParlayDetails)48089_storage": {
            "label": "struct ParlayMarketData.ParlayDetails",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "sUSDPaid",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b72b6bc59a34b82dbefcf5958f7dd12e2a97ae79a45bc437321fc7feebd6432b": {
      "address": "0xef0dF2B73A1EEdC19Fa41783dCD43a87612cdF81",
      "txHash": "0x9fa9b49983d33c026976a723b9f06a73690c42bf4de14ca126e88b73662c0f2d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)10268",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:39"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)10196",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)1142",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)10338",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)9443",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:62"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)10427_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:66"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)10268": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)10196": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)1142": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)10338": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)9443": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)10427_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "3ef4b1c9f00d364e2b6e1653bbb0413fcb676d889a281605f0c50072aad9981d": {
      "address": "0xB688e5c3fD8c2989be20904086c81E5D1Efe2DBD",
      "txHash": "0xf8d6eee998ccad88c30c0426f92e0793a998ad0dd82c0b9f1f353ef96b2536ec",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)74393",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:39"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)74321",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6720",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)74463",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)72778",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)10265",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:39"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)10193",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)1142",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)10335",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)9440",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:62"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)10424_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:66"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)10265": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)10193": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)1142": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)10335": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)9440": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)10424_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "b2519b4ef15a3d57f3501014dad1e8c5c9306aaeb894d5024cb1eb20675b9c53": {
      "address": "0xaEd0595b4Bd01D36bBE815FF83a70C0Ec5E07a94",
      "txHash": "0x326bcbc31aa94ad70806fb59e5b277d9d06e6718eeb55f86b54c356cced24cc5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:57"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:58"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:61"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:62"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:63"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)953_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:66"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)964_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:67"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)973_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:68"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:69"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:70"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:71"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:74"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:75"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:76"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:77"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)4214",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:80"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:81"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:82"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:83"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:84"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)907",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:87"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:88"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:89"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:90"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:94"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:95"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOnADate",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:96"
          },
          {
            "contract": "TherundownConsumer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)4299",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:98"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)953_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)953_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)964_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)964_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)973_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)973_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)4214": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)907": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          },
          "t_contract(ITherundownConsumerVerifier)4299": {
            "label": "contract ITherundownConsumerVerifier"
          }
        }
      }
    },
    "7ea0063e8661c54790bb6b3716bcf7ccbf84a2a40128b747ff84e295a551fbe5": {
      "address": "0x77C8605bE825BC1A7AE58449092b1f2C7034b4aF",
      "txHash": "0xce6b95e9d3cd142a831cdb6ee60e36a7d34a4f61abeab99542c9b79b9400f2cd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)74414",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:39"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)74342",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6720",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)74484",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)72799",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:62"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)79468_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:66"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)74414": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)74342": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)6720": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)74484": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)72799": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)79468_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "dec1f2b8ae69319683b4ac52face474680363ec8c7ad29187a55c3e81c59d4d6": {
      "address": "0xF9e07A53765aC94d3d0aFfAA58F61551dDcC6bF5",
      "txHash": "0xf8de7cf48053fa0afdbc92b23815f33dcd3d9e8d19ddf109e7e175cbde865f7d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "Referrals",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/AMM/Referrals.sol:21"
          },
          {
            "contract": "Referrals",
            "label": "referrals",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/AMM/Referrals.sol:22"
          },
          {
            "contract": "Referrals",
            "label": "referralStarted",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/AMM/Referrals.sol:23"
          },
          {
            "contract": "Referrals",
            "label": "tradedBefore",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/AMM/Referrals.sol:25"
          },
          {
            "contract": "Referrals",
            "label": "sportReferrals",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/AMM/Referrals.sol:27"
          },
          {
            "contract": "Referrals",
            "label": "sportReferralStarted",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/AMM/Referrals.sol:28"
          },
          {
            "contract": "Referrals",
            "label": "sportTradedBefore",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/AMM/Referrals.sol:29"
          },
          {
            "contract": "Referrals",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/AMM/Referrals.sol:30"
          },
          {
            "contract": "Referrals",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts/AMM/Referrals.sol:31"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "dc66b54a731ffa6dd67afa14201b5435162519c84481f17489f4cfff6036bd8b": {
      "address": "0x4a2Cdf88AeE68df88c90F6377bb556d686e3099C",
      "txHash": "0x63985b190e0d6af04f4375349f0081c029fc8632c8b1caba916a99cc43368825",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)73188",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:24"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "invalidName",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:25"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "supportedMarketType",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:26"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultOddsThreshold",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:27"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "oddsThresholdForSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:28"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)73188": {
            "label": "contract ITherundownConsumer"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "7bf110ff3d2b0bf033ece5174be43aad2c79f13cfe34756fe91a3943a3d05ce2": {
      "address": "0x14953ab06bA217Bc5DE7b7ADB48C88D7c0095f5e",
      "txHash": "0x0ef51d61d20ba2960b9fd634e075ad1422b0dec55c33a1a101aa972a23a85a84",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)73245",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:39"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)73173",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6720",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)73315",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)71630",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:62"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)78182_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:66"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)73245": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)73173": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)6720": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)73315": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)71630": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)78182_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "55c1f6411c45c7ceef86745bf4ef39a14dbbe1c030fc83c76c3c0b59ed7ed71b": {
      "address": "0x52bFc849fD185Dd427A59Fb34225E7E1027fa82d",
      "txHash": "0x5a0ef4984552250bb71b88f8ce7c1e180d5b1698c623ddab20b0ade23b3aba59",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)10268",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:39"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)10196",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)1142",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)10338",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)9443",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:62"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)10427_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:66"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)10268": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)10196": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)1142": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)10338": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)9443": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)10427_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "eb83fcaa3bfa95ae01981ff36f34da3867017c625e208ed6d0eb64131da0152c": {
      "address": "0x99c437a2a96027E69291CF8cb55BCB77a230C6C3",
      "txHash": "0x21abdb3c0f9c1df8eec06ae322cb2b999f86f3ab319fef0ea96410bc05b76216",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)73288",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:39"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)73216",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6720",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)73358",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)71673",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:62"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)78225_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:66"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)73288": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)73216": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)6720": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)73358": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)71673": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)78225_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "a2d41508c94da24a106fc5bada1481956ad032decc90a181a50a79b5ae2303eb": {
      "address": "0x0f20D1C0224BA31eF276eF181589a38B1D9F617C",
      "txHash": "0xb38b1f0a2fbed8c8e53c8eac0ec1d28c8b2ce441a3e7d9bd9adf40a9cfffd2c3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:57"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:58"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:61"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:62"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:63"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)953_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:66"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)964_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:67"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)973_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:68"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:69"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:70"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:71"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:74"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:75"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:76"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:77"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)4237",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:80"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:81"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:82"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:83"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:84"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)907",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:87"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:88"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:89"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:90"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:94"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:95"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOnADate",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:96"
          },
          {
            "contract": "TherundownConsumer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)4322",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:98"
          },
          {
            "contract": "TherundownConsumer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)973_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:99"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)953_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)953_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)964_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)964_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)973_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)973_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)4237": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)907": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          },
          "t_contract(ITherundownConsumerVerifier)4322": {
            "label": "contract ITherundownConsumerVerifier"
          }
        }
      }
    },
    "84029142f6bb0d8be9bfab321c9c380901fb0b05c5741b1d248673d6822402b5": {
      "address": "0x9c27B789D645bf7bB02e71590df627b3DE8249fA",
      "txHash": "0xc069936379d5f93be126ba8fce5b6712c1ec0afd13fae630dcde91d17e51fd1a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)390",
            "src": "contracts/SportMarkets/SportsAMM.sol:45"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:48"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:52"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:55"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:58"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:62"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:71"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:74"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:77"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:80"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)5664",
            "src": "contracts/SportMarkets/SportsAMM.sol:83"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:86"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:89"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)4934",
            "src": "contracts/SportMarkets/SportsAMM.sol:92"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:95"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:98"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:101"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportsAMM.sol:104"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:107"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:110"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:113"
          },
          {
            "contract": "SportsAMM",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:116"
          },
          {
            "contract": "SportsAMM",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:119"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:122"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)390": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)5664": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)4934": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "66dd8ff2672b1ab1f61126a64f2e33910ea9d1534974020106cb1044d2e19cb5": {
      "address": "0x1224e1585e5027E56527F1685411e55AC411c9e4",
      "txHash": "0x32516dea1f06874b76c1dd8726513501032409d6cf89d56aa9b1668f38b8ff0a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "expiryDuration",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:31"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "marketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:33"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "customMarketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:34"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:36"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)75021_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:38"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)75021_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:39"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_migratingManager",
            "type": "t_contract(SportPositionalMarketManager)55865",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:41"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sUSD",
            "type": "t_contract(IERC20)3430",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:43"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:45"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sportPositionalMarketFactory",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:46"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:47"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:48"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:49"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "cancelTimeout",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:50"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedCancelAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:51"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)75021_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(SportPositionalMarketManager)55865": {
            "label": "contract SportPositionalMarketManager"
          },
          "t_contract(IERC20)3430": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "7405afe57c5e3316585348cd8c9f0b25a27b53d66b02983cbbd086c8e430a562": {
      "address": "0x9b960789E6C56192D70a0167bDc7027fFC7F2E58",
      "txHash": "0x0324596d1c5b7fb406d4e06c08ba444b4602dd75b3b4eadceef39c8eb55131c6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:57"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:58"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:61"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:62"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:63"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)47676_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:66"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)47687_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:67"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)47696_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:68"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:69"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:70"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:71"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:74"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:75"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:76"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:77"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)69744",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:80"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:81"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:82"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:83"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:84"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)47630",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:87"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:88"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:89"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:90"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:94"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:95"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOnADate",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:96"
          },
          {
            "contract": "TherundownConsumer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)70467",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:98"
          },
          {
            "contract": "TherundownConsumer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)47696_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:99"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)47676_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)47676_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)47687_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)47687_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)47696_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)47696_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)69744": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)47630": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          },
          "t_contract(ITherundownConsumerVerifier)70467": {
            "label": "contract ITherundownConsumerVerifier"
          }
        }
      }
    },
    "ba5002e458e1e0b64eca753b1666d1ca2f249a35b81d1e13937126e90801a6f0": {
      "address": "0x096382EDb686e37dD02483b5144e3bE3a19ce44B",
      "txHash": "0x08869b57db775ac22bed2b1dec27445d3a7ae1c6a6275cef231eeb7187e32dc3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesQueue",
            "label": "gamesCreateQueue",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:16"
          },
          {
            "contract": "GamesQueue",
            "label": "existingGamesInCreatedQueue",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:17"
          },
          {
            "contract": "GamesQueue",
            "label": "firstCreated",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:18"
          },
          {
            "contract": "GamesQueue",
            "label": "lastCreated",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:19"
          },
          {
            "contract": "GamesQueue",
            "label": "gameStartPerGameId",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:20"
          },
          {
            "contract": "GamesQueue",
            "label": "unproccessedGames",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:23"
          },
          {
            "contract": "GamesQueue",
            "label": "unproccessedGamesIndex",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:24"
          },
          {
            "contract": "GamesQueue",
            "label": "gamesResolvedQueue",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:25"
          },
          {
            "contract": "GamesQueue",
            "label": "existingGamesInResolvedQueue",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:26"
          },
          {
            "contract": "GamesQueue",
            "label": "firstResolved",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:27"
          },
          {
            "contract": "GamesQueue",
            "label": "lastResolved",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:28"
          },
          {
            "contract": "GamesQueue",
            "label": "consumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:30"
          },
          {
            "contract": "GamesQueue",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:31"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "6f87b43c09731cefaebe0bf7f47151dfeaa64f5fcdd8412167e34971fbe5952c": {
      "address": "0x076F54beAfD3d219160Dd36b4e76a2fAD4b51055",
      "txHash": "0xd31c50e13a10d2313c5655f9b3003eac9471d3e4845ed89de6ceb43cf03b3080",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "BaseSportVault",
            "label": "sportsAMM",
            "type": "t_contract(ISportsAMM)3063",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:36"
          },
          {
            "contract": "BaseSportVault",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)390",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:37"
          },
          {
            "contract": "BaseSportVault",
            "label": "vaultStarted",
            "type": "t_bool",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:39"
          },
          {
            "contract": "BaseSportVault",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:41"
          },
          {
            "contract": "BaseSportVault",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:42"
          },
          {
            "contract": "BaseSportVault",
            "label": "roundStartTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:43"
          },
          {
            "contract": "BaseSportVault",
            "label": "roundEndTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:44"
          },
          {
            "contract": "BaseSportVault",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:46"
          },
          {
            "contract": "BaseSportVault",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:47"
          },
          {
            "contract": "BaseSportVault",
            "label": "claimedPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:48"
          },
          {
            "contract": "BaseSportVault",
            "label": "withdrawalQueue",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)932_storage)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:49"
          },
          {
            "contract": "BaseSportVault",
            "label": "depositReceipts",
            "type": "t_mapping(t_address,t_struct(DepositReceipt)937_storage)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:50"
          },
          {
            "contract": "BaseSportVault",
            "label": "withdrawalQueueAmount",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:51"
          },
          {
            "contract": "BaseSportVault",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:53"
          },
          {
            "contract": "BaseSportVault",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:55"
          },
          {
            "contract": "BaseSportVault",
            "label": "tradingMarketPositionPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_enum(Position)3014))",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:56"
          },
          {
            "contract": "BaseSportVault",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:57"
          },
          {
            "contract": "BaseSportVault",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:59"
          },
          {
            "contract": "BaseSportVault",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:60"
          },
          {
            "contract": "BaseSportVault",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:62"
          },
          {
            "contract": "BaseSportVault",
            "label": "utilizationRate",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:63"
          },
          {
            "contract": "BaseSportVault",
            "label": "capPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:65"
          },
          {
            "contract": "SportVault",
            "label": "allocationLimitsPerMarketPerRound",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:16"
          },
          {
            "contract": "SportVault",
            "label": "allocationSpentPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:18"
          },
          {
            "contract": "SportVault",
            "label": "priceLowerLimit",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:20"
          },
          {
            "contract": "SportVault",
            "label": "priceUpperLimit",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:21"
          },
          {
            "contract": "SportVault",
            "label": "skewImpactLimit",
            "type": "t_int256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:22"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(ISportsAMM)3063": {
            "label": "contract ISportsAMM"
          },
          "t_contract(IERC20Upgradeable)390": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)932_storage)": {
            "label": "mapping(address => struct BaseSportVault.WithdrawalRequest)"
          },
          "t_struct(WithdrawalRequest)932_storage": {
            "label": "struct BaseSportVault.WithdrawalRequest",
            "members": [
              {
                "label": "round",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "requested",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(DepositReceipt)937_storage)": {
            "label": "mapping(address => struct BaseSportVault.DepositReceipt)"
          },
          "t_struct(DepositReceipt)937_storage": {
            "label": "struct BaseSportVault.DepositReceipt",
            "members": [
              {
                "label": "round",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_enum(Position)3014))": {
            "label": "mapping(uint256 => mapping(address => enum ISportsAMM.Position))"
          },
          "t_mapping(t_address,t_enum(Position)3014)": {
            "label": "mapping(address => enum ISportsAMM.Position)"
          },
          "t_enum(Position)3014": {
            "label": "enum ISportsAMM.Position",
            "members": [
              "Home",
              "Away",
              "Draw"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bc70b384be651e4db82429a9b682cf070606b72de934d6e98826dbc31b373b70": {
      "address": "0xE90e99726548Aa888564D169B2c9686785a04c01",
      "txHash": "0x97b2a6959a30a791d9bf78865a81271cf9f87bbb5fad330acf1c23556bd90580",
      "layout": {
        "storage": [
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\ProxyPausable.sol:11"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:63"
          },
          {
            "contract": "ThalesAMM",
            "label": "deciMath",
            "type": "t_contract(DeciMath)5913",
            "src": "contracts\\AMM\\ThalesAMM.sol:49"
          },
          {
            "contract": "ThalesAMM",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)10091",
            "src": "contracts\\AMM\\ThalesAMM.sol:54"
          },
          {
            "contract": "ThalesAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20)11171",
            "src": "contracts\\AMM\\ThalesAMM.sol:55"
          },
          {
            "contract": "ThalesAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:56"
          },
          {
            "contract": "ThalesAMM",
            "label": "capPerMarket",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:58"
          },
          {
            "contract": "ThalesAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:59"
          },
          {
            "contract": "ThalesAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:60"
          },
          {
            "contract": "ThalesAMM",
            "label": "impliedVolatilityPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:62"
          },
          {
            "contract": "ThalesAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:64"
          },
          {
            "contract": "ThalesAMM",
            "label": "spentOnMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:71"
          },
          {
            "contract": "ThalesAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:73"
          },
          {
            "contract": "ThalesAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:74"
          },
          {
            "contract": "ThalesAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)10185",
            "src": "contracts\\AMM\\ThalesAMM.sol:76"
          },
          {
            "contract": "ThalesAMM",
            "label": "minSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:78"
          },
          {
            "contract": "ThalesAMM",
            "label": "maxSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:79"
          },
          {
            "contract": "ThalesAMM",
            "label": "_capPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:81"
          },
          {
            "contract": "ThalesAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\ThalesAMM.sol:83"
          },
          {
            "contract": "ThalesAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:85"
          },
          {
            "contract": "ThalesAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:86"
          },
          {
            "contract": "ThalesAMM",
            "label": "previousManager",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:88"
          },
          {
            "contract": "ThalesAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)9774",
            "src": "contracts\\AMM\\ThalesAMM.sol:90"
          },
          {
            "contract": "ThalesAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:92"
          },
          {
            "contract": "ThalesAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:93"
          },
          {
            "contract": "ThalesAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:94"
          },
          {
            "contract": "ThalesAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\AMM\\ThalesAMM.sol:98"
          },
          {
            "contract": "ThalesAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:100"
          }
        ],
        "types": {
          "t_contract(DeciMath)5913": {
            "label": "contract DeciMath"
          },
          "t_contract(IPriceFeed)10091": {
            "label": "contract IPriceFeed"
          },
          "t_contract(IERC20)11171": {
            "label": "contract IERC20"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)10185": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ICurveSUSD)9774": {
            "label": "contract ICurveSUSD"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1fcaebc2efc8defe40ba8e1d3bddc8d3212db7d7bbe93a62a491270376a5479e": {
      "address": "0xE167fe2b784Ec29708639C98c4740850CDF68F54",
      "txHash": "0x976e3af3e288fd9cc1dcb060ddbe5c3d5e60401c5f00ac0fd9054b34e029a25c",
      "layout": {
        "storage": [
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:63"
          },
          {
            "contract": "ThalesAMM",
            "label": "deciMath",
            "type": "t_contract(DeciMath)6221",
            "src": "contracts\\AMM\\ThalesAMM.sol:49"
          },
          {
            "contract": "ThalesAMM",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)17216",
            "src": "contracts\\AMM\\ThalesAMM.sol:54"
          },
          {
            "contract": "ThalesAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20)20293",
            "src": "contracts\\AMM\\ThalesAMM.sol:55"
          },
          {
            "contract": "ThalesAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:56"
          },
          {
            "contract": "ThalesAMM",
            "label": "capPerMarket",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:58"
          },
          {
            "contract": "ThalesAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:59"
          },
          {
            "contract": "ThalesAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:60"
          },
          {
            "contract": "ThalesAMM",
            "label": "impliedVolatilityPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:62"
          },
          {
            "contract": "ThalesAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:64"
          },
          {
            "contract": "ThalesAMM",
            "label": "spentOnMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:71"
          },
          {
            "contract": "ThalesAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:73"
          },
          {
            "contract": "ThalesAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:74"
          },
          {
            "contract": "ThalesAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)17348",
            "src": "contracts\\AMM\\ThalesAMM.sol:76"
          },
          {
            "contract": "ThalesAMM",
            "label": "minSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:78"
          },
          {
            "contract": "ThalesAMM",
            "label": "maxSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:79"
          },
          {
            "contract": "ThalesAMM",
            "label": "_capPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:81"
          },
          {
            "contract": "ThalesAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\ThalesAMM.sol:83"
          },
          {
            "contract": "ThalesAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:85"
          },
          {
            "contract": "ThalesAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:86"
          },
          {
            "contract": "ThalesAMM",
            "label": "previousManager",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:88"
          },
          {
            "contract": "ThalesAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)16798",
            "src": "contracts\\AMM\\ThalesAMM.sol:90"
          },
          {
            "contract": "ThalesAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:92"
          },
          {
            "contract": "ThalesAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:93"
          },
          {
            "contract": "ThalesAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:94"
          },
          {
            "contract": "ThalesAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\AMM\\ThalesAMM.sol:98"
          },
          {
            "contract": "ThalesAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:100"
          }
        ],
        "types": {
          "t_contract(DeciMath)6221": {
            "label": "contract DeciMath"
          },
          "t_contract(IPriceFeed)17216": {
            "label": "contract IPriceFeed"
          },
          "t_contract(IERC20)20293": {
            "label": "contract IERC20"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)17348": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ICurveSUSD)16798": {
            "label": "contract ICurveSUSD"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4b793e6c93730d01b7e6b206797c32bd7fa08082853cf414be6d96d0506f1331": {
      "address": "0xbCAA9b682a7d9829ba652e2324a5BE4D63908BeF",
      "txHash": "0xfbeb329a612b44a4af137919f351332ebb73bfe866de1e067aa68b0dd9a7bcd1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)390",
            "src": "contracts/SportMarkets/SportsAMM.sol:37"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:40"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:44"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:47"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:50"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:54"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:63"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:66"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:69"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:72"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)6097",
            "src": "contracts/SportMarkets/SportsAMM.sol:75"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:78"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:81"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)5324",
            "src": "contracts/SportMarkets/SportsAMM.sol:84"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:87"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:90"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:93"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportsAMM.sol:96"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:99"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:102"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:105"
          },
          {
            "contract": "SportsAMM",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:108"
          },
          {
            "contract": "SportsAMM",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:111"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:114"
          },
          {
            "contract": "SportsAMM",
            "label": "sportAmmUtils",
            "type": "t_contract(SportsAMMUtils)5208",
            "src": "contracts/SportMarkets/SportsAMM.sol:116"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)390": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)6097": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)5324": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(SportsAMMUtils)5208": {
            "label": "contract SportsAMMUtils"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "21074f0194c1909789411d74725f228e32cdabcb3365754528a0bd8a67e0617a": {
      "address": "0x077201d18e27b517cE6d8E417E4200fF32BC14C7",
      "txHash": "0x9caa10bcd6e65b01dc689fc2caf0e3382fa0e6e8d5c5260937f3de7c26dd3e2d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6720",
            "src": "contracts/SportMarkets/SportsAMM.sol:37"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:40"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:44"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:47"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:50"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:54"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:63"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:66"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:69"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:72"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)74041",
            "src": "contracts/SportMarkets/SportsAMM.sol:75"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:78"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:81"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)72332",
            "src": "contracts/SportMarkets/SportsAMM.sol:84"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:87"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:90"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:93"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportsAMM.sol:96"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:99"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:102"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:105"
          },
          {
            "contract": "SportsAMM",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:108"
          },
          {
            "contract": "SportsAMM",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:111"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:114"
          },
          {
            "contract": "SportsAMM",
            "label": "sportAmmUtils",
            "type": "t_contract(SportsAMMUtils)63068",
            "src": "contracts/SportMarkets/SportsAMM.sol:116"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:119"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)6720": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)74041": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)72332": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(SportsAMMUtils)63068": {
            "label": "contract SportsAMMUtils"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a543804c67b7a1b5d3f4a952d4647f28420a009343c5f535a486cadfdb988c4f": {
      "address": "0xBA02F114d06463fb20834625F17ff53a16aE5104",
      "txHash": "0xda4f1d74592b1e091c8c3a9533779537b85198731895ded9bdba1e97357d1ebf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)10772",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)10700",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)1142",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)10842",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)9923",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:44"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:52"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:55"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:60"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:62"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:63"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)10942_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)6131",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:68"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)10772": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)10700": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)1142": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)10842": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)9923": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)10942_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)6131": {
            "label": "contract ParlayVerifier"
          }
        }
      }
    },
    "ca49e0eac33a439e1452c72ce2b9f7b9cb1456c91070a770d808a8a1bd56d223": {
      "address": "0x3eD7fba8d640B2ED4E0a57607185FaB0f228515C",
      "txHash": "0x6f91d9d6e7e775791db3c36f9cdf54d69a8bfaec55bf155db10445f22734eab3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ParlayMarketData",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)79887_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:15"
          },
          {
            "contract": "ParlayMarketData",
            "label": "_parlaysInGamePosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)79887_storage))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:21"
          },
          {
            "contract": "ParlayMarketData",
            "label": "gameAddressPositionParlay",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:23"
          },
          {
            "contract": "ParlayMarketData",
            "label": "numOfParlaysInGamePosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:24"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayDetails",
            "type": "t_mapping(t_address,t_struct(ParlayDetails)46446_storage)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:26"
          },
          {
            "contract": "ParlayMarketData",
            "label": "userParlays",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:27"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayOwner",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:28"
          },
          {
            "contract": "ParlayMarketData",
            "label": "userNumOfParlays",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:29"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayMarketsAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:30"
          }
        ],
        "types": {
          "t_struct(AddressSet)79887_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)79887_storage))": {
            "label": "mapping(address => mapping(uint256 => struct AddressSetLib.AddressSet))"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)79887_storage)": {
            "label": "mapping(uint256 => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))": {
            "label": "mapping(address => mapping(uint256 => mapping(uint256 => address)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint256 => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(ParlayDetails)46446_storage)": {
            "label": "mapping(address => struct ParlayMarketData.ParlayDetails)"
          },
          "t_struct(ParlayDetails)46446_storage": {
            "label": "struct ParlayMarketData.ParlayDetails",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "sUSDPaid",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "21bec7c36fba542dc8f50b7d0f73e4c2f420e90ae9b3454c101dfd446590c5d0": {
      "address": "0xE26374c7aFe71a2a6AB4A61080772547C43B87E6",
      "txHash": "0x701720d69b9751b6a0bd94288388c3f8dcbfa0ce6b359ce0858b28a36b6f98c2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "expiryDuration",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:31"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "marketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:33"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "customMarketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:34"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:36"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)5429_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:38"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)5429_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:39"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_migratingManager",
            "type": "t_contract(SportPositionalMarketManager)4576",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:41"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sUSD",
            "type": "t_contract(IERC20)157",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:43"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:45"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sportPositionalMarketFactory",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:46"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:47"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:48"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:49"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "cancelTimeout",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:50"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedCancelAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:51"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)5429_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(SportPositionalMarketManager)4576": {
            "label": "contract SportPositionalMarketManager"
          },
          "t_contract(IERC20)157": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "d52946b6e44a4e59ea9d9bdc0cedbc6d2b9a110dd72e49e69fe9cad5de959e28": {
      "address": "0xf584fF99F97B5ABB1872af1AA7924Fedf3e1b53d",
      "txHash": "0x03a34a1869a2ff74bbb3de7f42ac2dcb3fe141cf50aa42082d575189b634b78a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)10781",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)10709",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)1142",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)10851",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)9932",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:44"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:52"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:55"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:60"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:62"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:63"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)10951_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)6140",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:68"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)10781": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)10709": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)1142": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)10851": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)9932": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)10951_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)6140": {
            "label": "contract ParlayVerifier"
          }
        }
      }
    },
    "bf2f81a03f22d644a2f204be53e9772fd2fa8cf52d56506de384282c4d1bd521": {
      "address": "0x9c5Ec16eF741f7Dd853a1D94c95CbEaD172E0952",
      "txHash": "0xa9afb1877d47ac31e2cdb464dd8a8c676abfc6cdb21d1092d74c25e3e3591e5a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)10792",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)10720",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)1142",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)10862",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)9943",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:44"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:52"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:55"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:60"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:62"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:63"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)10962_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)6151",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:69"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)10792": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)10720": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)1142": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)10862": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)9943": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)10962_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)6151": {
            "label": "contract ParlayVerifier"
          }
        }
      }
    },
    "94a711f7a30d296b4b1650f2d9820c01dae50bd011fbddc35a3a31452e9b0fb8": {
      "address": "0xDbD7F3F71E3002CEeC38751EDb97D76c404C4B26",
      "txHash": "0xa6d212b3043e14ed6e72f7667032fce242089a690968baf524eaca3afb5622f3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)74077",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)73998",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6720",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)74147",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:44"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)72431",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:52"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:55"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:60"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:63"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)79165_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)49897",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:69"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:70"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)74077": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)73998": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)6720": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)74147": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)72431": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)79165_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)49897": {
            "label": "contract ParlayVerifier"
          }
        }
      }
    },
    "4081549c35e3a2409b07ef2cd6efe8bad3499661e183e492fd992c512337e236": {
      "address": "0x006655336B0094930DFcAB6951ae554bCc5411ae",
      "txHash": "0x3ef9fa575271c6bbacb7d0e80362f9f76bb2c14c61ef47f20f2db72e50ecaa9d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)10848",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)10769",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)1142",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)10918",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:44"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)9992",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:52"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:55"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:60"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:63"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)11018_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)6200",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:69"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:70"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)10848": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)10769": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)1142": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)10918": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)9992": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)11018_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)6200": {
            "label": "contract ParlayVerifier"
          }
        }
      }
    },
    "1f03e0600af17f214bdb62acd8e4e0750836216fb2eedbdc7acedca15b923116": {
      "address": "0x7eB62d13F19b5c1A87409676f672bD2399409527",
      "txHash": "0x69fb139de3ae783c41d9b12d43498c962db53dad9602a8c9a93ed8b396d08c03",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)11552",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)11473",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)1142",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)11622",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:44"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)10670",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:52"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:55"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:60"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:63"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)11722_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)6878",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:69"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:70"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:72"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:73"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)11552": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)11473": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)1142": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)11622": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)10670": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)11722_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)6878": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          }
        }
      }
    },
    "bb556832312d5f5eecf08d533f4d12e13e81918dbf96f25c4acc01e86a063563": {
      "address": "0x369AeEBC7d8bbe78c359E42e4B3342813BAA68e3",
      "txHash": "0xa9ea0c90c6c0fd8d9a572aec9da144f7dbe298d46fb2b0a3eb7d09ef8fa57104",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)11536",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)11457",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)1142",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)11606",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:44"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)10654",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:52"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:55"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:60"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:63"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)11706_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)6862",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:69"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:70"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:72"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:73"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)11536": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)11457": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)1142": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)11606": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)10654": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)11706_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)6862": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          }
        }
      }
    },
    "c5afe4a536b721249c7db2c3a9cf23b96960a9f852c1c28159c58684f38e4701": {
      "address": "0x9AE008Db9e24A3907E485C356375ac41718D4745",
      "txHash": "0xe1c0a450b19887df56eb75ab7260229b72c1e652db385dd35f8e94096341095f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6720",
            "src": "contracts/SportMarkets/SportsAMM.sol:37"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:40"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:44"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:47"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:50"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:54"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:63"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:66"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:69"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:72"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)74857",
            "src": "contracts/SportMarkets/SportsAMM.sol:75"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:78"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:81"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)73115",
            "src": "contracts/SportMarkets/SportsAMM.sol:84"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:87"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:90"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:93"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportsAMM.sol:96"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:99"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:102"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:105"
          },
          {
            "contract": "SportsAMM",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:108"
          },
          {
            "contract": "SportsAMM",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:111"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:114"
          },
          {
            "contract": "SportsAMM",
            "label": "sportAmmUtils",
            "type": "t_contract(SportsAMMUtils)63851",
            "src": "contracts/SportMarkets/SportsAMM.sol:116"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:119"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)6720": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)74857": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)73115": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(SportsAMMUtils)63851": {
            "label": "contract SportsAMMUtils"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "14afffe3f7b523cc7917940789f2467a2345594c8059e8f2eb18661d9ac619e1": {
      "address": "0x271f1783ea8FA1a047bd6cf244ba6Ff7eA11Fe64",
      "txHash": "0x8e75c03b70c9cdd7b08237e2063b597c82c9bfa4439a1502707e9e03115b5dad",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)74791",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)74712",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6720",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)74861",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:44"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)73119",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:52"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:55"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:60"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:63"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)79879_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)50581",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:69"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:70"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:72"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:73"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)74791": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)74712": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)6720": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)74861": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)73119": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)79879_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)50581": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          }
        }
      }
    },
    "41fd6f42ce14f2a87c48f74c882868131e89a07f37c0256bbe2608c1d480fb82": {
      "address": "0xec47195d39851b5b9aD71aE35D5683a79dc635f4",
      "txHash": "0x1c108f4a95a9a52f5cca96670139240b4293fd70a4f12ad46b9c49080b7dc59f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6720",
            "src": "contracts/SportMarkets/SportsAMM.sol:37"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:40"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:44"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:47"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:50"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:54"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:63"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:66"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:69"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:72"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)74865",
            "src": "contracts/SportMarkets/SportsAMM.sol:75"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:78"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:81"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)73123",
            "src": "contracts/SportMarkets/SportsAMM.sol:84"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:87"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:90"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:93"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportsAMM.sol:96"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:99"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:102"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:105"
          },
          {
            "contract": "SportsAMM",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:108"
          },
          {
            "contract": "SportsAMM",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:111"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:114"
          },
          {
            "contract": "SportsAMM",
            "label": "sportAmmUtils",
            "type": "t_contract(SportsAMMUtils)63859",
            "src": "contracts/SportMarkets/SportsAMM.sol:116"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:119"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)6720": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)74865": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)73123": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(SportsAMMUtils)63859": {
            "label": "contract SportsAMMUtils"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d7cd7fb3b9ab6c1e29f301f6ef13edf2653094f7eac279686aafb0adb04d45a8": {
      "address": "0xc6a7a3f049B07CCb260edd1460CA5a6ac9f966a9",
      "txHash": "0x7d57156bd21d3359f83dc3113d7c1f63b0f53f3a3d5d92073ad92a4bcf71d526",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyPausable.sol:12"
          },
          {
            "contract": "EscrowThales",
            "label": "vestingToken",
            "type": "t_contract(IERC20)20033",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:22"
          },
          {
            "contract": "EscrowThales",
            "label": "iStakingThales",
            "type": "t_contract(IStakingThales)17072",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:23"
          },
          {
            "contract": "EscrowThales",
            "label": "airdropContract",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:24"
          },
          {
            "contract": "EscrowThales",
            "label": "totalEscrowedRewards",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:27"
          },
          {
            "contract": "EscrowThales",
            "label": "totalEscrowBalanceNotIncludedInStaking",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:28"
          },
          {
            "contract": "EscrowThales",
            "label": "currentVestingPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:29"
          },
          {
            "contract": "EscrowThales",
            "label": "_totalVested",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:31"
          },
          {
            "contract": "EscrowThales",
            "label": "vestingEntries",
            "type": "t_mapping(t_address,t_array(t_struct(VestingEntry)9891_storage)10_storage)",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:38"
          },
          {
            "contract": "EscrowThales",
            "label": "totalAccountEscrowedAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:39"
          },
          {
            "contract": "EscrowThales",
            "label": "lastPeriodAddedReward",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:41"
          },
          {
            "contract": "EscrowThales",
            "label": "testMode",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:43"
          },
          {
            "contract": "EscrowThales",
            "label": "ThalesStakingRewardsPool",
            "type": "t_contract(IThalesStakingRewardsPool)17190",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:44"
          }
        ],
        "types": {
          "t_contract(IERC20)20033": {
            "label": "contract IERC20"
          },
          "t_contract(IStakingThales)17072": {
            "label": "contract IStakingThales"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_struct(VestingEntry)9891_storage)10_storage)": {
            "label": "mapping(address => struct EscrowThales.VestingEntry[10])"
          },
          "t_array(t_struct(VestingEntry)9891_storage)10_storage": {
            "label": "struct EscrowThales.VestingEntry[10]"
          },
          "t_struct(VestingEntry)9891_storage": {
            "label": "struct EscrowThales.VestingEntry",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "vesting_period",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IThalesStakingRewardsPool)17190": {
            "label": "contract IThalesStakingRewardsPool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3f782e82d012d725a86d47e8d8b92b70bf5fbde7e3e2b033534ac182fa8448c4": {
      "address": "0x5fa7092d1500D8b9C092a4698c265232611248Ee",
      "txHash": "0x38d440222a55cc373cdac227080fbae6f028f894671c12ac654afe0d8dee2ab6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyPausable.sol:12"
          },
          {
            "contract": "StakingThales",
            "label": "iEscrowThales",
            "type": "t_contract(IEscrowThales)16615",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:30"
          },
          {
            "contract": "StakingThales",
            "label": "stakingToken",
            "type": "t_contract(IERC20)20033",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:31"
          },
          {
            "contract": "StakingThales",
            "label": "feeToken",
            "type": "t_contract(IERC20)20033",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:32"
          },
          {
            "contract": "StakingThales",
            "label": "SNXRewards",
            "type": "t_contract(ISNXRewards)17002",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:33"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRoyale",
            "type": "t_contract(IThalesRoyale)17180",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:34"
          },
          {
            "contract": "StakingThales",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)16940",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:35"
          },
          {
            "contract": "StakingThales",
            "label": "periodsOfStaking",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:37"
          },
          {
            "contract": "StakingThales",
            "label": "lastPeriodTimeStamp",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:38"
          },
          {
            "contract": "StakingThales",
            "label": "durationPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:39"
          },
          {
            "contract": "StakingThales",
            "label": "unstakeDurationPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:40"
          },
          {
            "contract": "StakingThales",
            "label": "startTimeStamp",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:41"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodRewards",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:42"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodFees",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:43"
          },
          {
            "contract": "StakingThales",
            "label": "distributeFeesEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:44"
          },
          {
            "contract": "StakingThales",
            "label": "fixedPeriodReward",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:45"
          },
          {
            "contract": "StakingThales",
            "label": "periodExtraReward",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:46"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXRewardsInPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:47"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXFeesInPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:48"
          },
          {
            "contract": "StakingThales",
            "label": "claimEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:49"
          },
          {
            "contract": "StakingThales",
            "label": "stakerLifetimeRewardsClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:51"
          },
          {
            "contract": "StakingThales",
            "label": "stakerFeesClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:52"
          },
          {
            "contract": "StakingThales",
            "label": "_totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:54"
          },
          {
            "contract": "StakingThales",
            "label": "_totalEscrowedAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:55"
          },
          {
            "contract": "StakingThales",
            "label": "_totalPendingStakeAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:56"
          },
          {
            "contract": "StakingThales",
            "label": "_totalUnclaimedRewards",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:57"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardsClaimed",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:58"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardFeesClaimed",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:59"
          },
          {
            "contract": "StakingThales",
            "label": "lastUnstakeTime",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:61"
          },
          {
            "contract": "StakingThales",
            "label": "unstaking",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:62"
          },
          {
            "contract": "StakingThales",
            "label": "unstakingAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:63"
          },
          {
            "contract": "StakingThales",
            "label": "_stakedBalances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:64"
          },
          {
            "contract": "StakingThales",
            "label": "_lastRewardsClaimedPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:65"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:66"
          },
          {
            "contract": "StakingThales",
            "label": "lastAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:75"
          },
          {
            "contract": "StakingThales",
            "label": "stakerAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)12600_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:76"
          },
          {
            "contract": "StakingThales",
            "label": "extraRewardsActive",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:78"
          },
          {
            "contract": "StakingThales",
            "label": "ThalesStakingRewardsPool",
            "type": "t_contract(IThalesStakingRewardsPool)17190",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:79"
          },
          {
            "contract": "StakingThales",
            "label": "maxSNXRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:81"
          },
          {
            "contract": "StakingThales",
            "label": "maxAMMVolumeRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:82"
          },
          {
            "contract": "StakingThales",
            "label": "AMMVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:83"
          },
          {
            "contract": "StakingThales",
            "label": "maxThalesRoyaleRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:84"
          },
          {
            "contract": "StakingThales",
            "label": "SNXVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:89"
          },
          {
            "contract": "StakingThales",
            "label": "_lastStakingPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:91"
          },
          {
            "contract": "StakingThales",
            "label": "totalStakedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:93"
          },
          {
            "contract": "StakingThales",
            "label": "totalEscrowedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:94"
          },
          {
            "contract": "StakingThales",
            "label": "exoticBonds",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:95"
          },
          {
            "contract": "StakingThales",
            "label": "addressResolver",
            "type": "t_contract(IAddressResolver)16495",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:97"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:99"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:100"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:102"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)12600_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:103"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesRangedAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:104"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)12600_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:105"
          },
          {
            "contract": "StakingThales",
            "label": "lastExoticMarketsUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:106"
          },
          {
            "contract": "StakingThales",
            "label": "exoticMarketsVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)12600_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:107"
          },
          {
            "contract": "StakingThales",
            "label": "lastSportsAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:108"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)12600_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:109"
          },
          {
            "contract": "StakingThales",
            "label": "canClaimOnBehalf",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:111"
          },
          {
            "contract": "StakingThales",
            "label": "mergeAccountEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:113"
          }
        ],
        "types": {
          "t_contract(IEscrowThales)16615": {
            "label": "contract IEscrowThales"
          },
          "t_contract(IERC20)20033": {
            "label": "contract IERC20"
          },
          "t_contract(ISNXRewards)17002": {
            "label": "contract ISNXRewards"
          },
          "t_contract(IThalesRoyale)17180": {
            "label": "contract IThalesRoyale"
          },
          "t_contract(IPriceFeed)16940": {
            "label": "contract IPriceFeed"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)12600_storage)4_storage)": {
            "label": "mapping(address => struct StakingThales.AMMVolumeEntry[4])"
          },
          "t_array(t_struct(AMMVolumeEntry)12600_storage)4_storage": {
            "label": "struct StakingThales.AMMVolumeEntry[4]"
          },
          "t_struct(AMMVolumeEntry)12600_storage": {
            "label": "struct StakingThales.AMMVolumeEntry",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "period",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IThalesStakingRewardsPool)17190": {
            "label": "contract IThalesStakingRewardsPool"
          },
          "t_contract(IAddressResolver)16495": {
            "label": "contract IAddressResolver"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1933e4abc0a73b8f40242dd81baf1e4764cb3db0f3b67e07e9278b451fe36ab8": {
      "address": "0x952E5dA84B230c0E2498268A3CE481E8D2852B50",
      "txHash": "0x7b8caab3d73130c451e1ad5492f48fa5898878e7a2b28bda05cd9e951540dcfe",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyPausable.sol:12"
          },
          {
            "contract": "ThalesStakingRewardsPool",
            "label": "iStakingThales",
            "type": "t_contract(IStakingThales)17072",
            "src": "contracts/EscrowAndStaking/ThalesStakingRewardsPool.sol:22"
          },
          {
            "contract": "ThalesStakingRewardsPool",
            "label": "iEscrowThales",
            "type": "t_contract(IEscrowThales)16615",
            "src": "contracts/EscrowAndStaking/ThalesStakingRewardsPool.sol:23"
          },
          {
            "contract": "ThalesStakingRewardsPool",
            "label": "rewardToken",
            "type": "t_contract(IERC20)20033",
            "src": "contracts/EscrowAndStaking/ThalesStakingRewardsPool.sol:24"
          },
          {
            "contract": "ThalesStakingRewardsPool",
            "label": "lifetimeClaimedRewards",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/ThalesStakingRewardsPool.sol:26"
          }
        ],
        "types": {
          "t_contract(IStakingThales)17072": {
            "label": "contract IStakingThales"
          },
          "t_contract(IEscrowThales)16615": {
            "label": "contract IEscrowThales"
          },
          "t_contract(IERC20)20033": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3aa07ba1cfd072c7c81502bda7dfc3bd556d115f1137409fd8a7827297034b05": {
      "address": "0x8f98c7Aa1C7c0FE0E575AA01188967011C6BB677",
      "txHash": "0x51bbc8d9295c79f303a2f4f9eb04e9c0aaa11e147b845304b700f140e6645cc4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)74795",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)74716",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6720",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)74865",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:44"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)73123",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:52"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:55"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:60"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:63"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)79883_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)50585",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:69"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:70"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:72"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:73"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)74795": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)74716": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)6720": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)74865": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)73123": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)79883_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)50585": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          }
        }
      }
    },
    "90fff806652c47da79d6fa8a1286f344b73508c88f773661138fbbbc67d6d8c5": {
      "address": "0xE619f2a85fB3302f1949C1e675B386Ba80c23245",
      "txHash": "0xe4f00eab9e0ccbe76794d338a199147fee62212c93801cfd6a0cb454d644f018",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)74971",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)74887",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6720",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)75041",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:44"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)73294",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:52"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:55"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:60"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:63"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)80089_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)50756",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:69"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:70"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:72"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:73"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)74971": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)74887": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)6720": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)75041": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)73294": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)80089_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)50756": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          }
        }
      }
    },
    "44e510bbc1465b622bbe22825c32516e6bcd31f0d3115084f190768f3fa3e577": {
      "address": "0x329b61BC726BD53b3bAA330A2fdD8576C8A3c732",
      "txHash": "0x6a654e51017f33b7458339ccdcd03c061231f5958f1ebfeb7d89e2c4bda18759",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ParlayMarketData",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)80088_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:15"
          },
          {
            "contract": "ParlayMarketData",
            "label": "_parlaysInGamePosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)80088_storage))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:21"
          },
          {
            "contract": "ParlayMarketData",
            "label": "gameAddressPositionParlay",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:23"
          },
          {
            "contract": "ParlayMarketData",
            "label": "numOfParlaysInGamePosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:24"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayDetails",
            "type": "t_mapping(t_address,t_struct(ParlayDetails)46446_storage)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:26"
          },
          {
            "contract": "ParlayMarketData",
            "label": "userParlays",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:27"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayOwner",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:28"
          },
          {
            "contract": "ParlayMarketData",
            "label": "userNumOfParlays",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:29"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayMarketsAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:30"
          }
        ],
        "types": {
          "t_struct(AddressSet)80088_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)80088_storage))": {
            "label": "mapping(address => mapping(uint256 => struct AddressSetLib.AddressSet))"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)80088_storage)": {
            "label": "mapping(uint256 => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))": {
            "label": "mapping(address => mapping(uint256 => mapping(uint256 => address)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint256 => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(ParlayDetails)46446_storage)": {
            "label": "mapping(address => struct ParlayMarketData.ParlayDetails)"
          },
          "t_struct(ParlayDetails)46446_storage": {
            "label": "struct ParlayMarketData.ParlayDetails",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "sUSDPaid",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0b7df0154e61b1443b343b2c8c10f0ab5ce6730fb5bfd06d0d4bfb194dbad789": {
      "address": "0x850184772D5598Fcf1bc0e86D134914F1B3E118E",
      "txHash": "0x5c3fcee62c557964e148749583abd8487a858a357a2db6bf6860edd00d326a0d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)74978",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)74894",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6720",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)75048",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:44"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)73301",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:52"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:55"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:60"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:63"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)80096_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)50763",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:69"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:70"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:72"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:73"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)74978": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)74894": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)6720": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)75048": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)73301": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)80096_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)50763": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          }
        }
      }
    },
    "cedb4de1d8ff529ef8b2eb65b0cca10af2cd777488cb2b91c954c76daea63821": {
      "address": "0xfaDAa3E704acB3f82DC769C34518d4f306C55FAf",
      "txHash": "0xb6779690cf627ec7d4ccf71da9943e4454634ab8636f1bfa28bfe2b707939d51",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ParlayMarketData",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)80096_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:15"
          },
          {
            "contract": "ParlayMarketData",
            "label": "_parlaysInGamePosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)80096_storage))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:21"
          },
          {
            "contract": "ParlayMarketData",
            "label": "gameAddressPositionParlay",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:23"
          },
          {
            "contract": "ParlayMarketData",
            "label": "numOfParlaysInGamePosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:24"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayDetails",
            "type": "t_mapping(t_address,t_struct(ParlayDetails)46446_storage)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:26"
          },
          {
            "contract": "ParlayMarketData",
            "label": "userParlays",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:27"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayOwner",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:28"
          },
          {
            "contract": "ParlayMarketData",
            "label": "userNumOfParlays",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:29"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayMarketsAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:30"
          }
        ],
        "types": {
          "t_struct(AddressSet)80096_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)80096_storage))": {
            "label": "mapping(address => mapping(uint256 => struct AddressSetLib.AddressSet))"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)80096_storage)": {
            "label": "mapping(uint256 => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))": {
            "label": "mapping(address => mapping(uint256 => mapping(uint256 => address)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint256 => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(ParlayDetails)46446_storage)": {
            "label": "mapping(address => struct ParlayMarketData.ParlayDetails)"
          },
          "t_struct(ParlayDetails)46446_storage": {
            "label": "struct ParlayMarketData.ParlayDetails",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "sUSDPaid",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "eec576af46e7079989572ff09070e9f22e586a8fa1b66a23fc5e946f409ca046": {
      "address": "0x3d177B38E2F3282cF395f97FD656B0335206B755",
      "txHash": "0x62cd4b163a5992e806ecfacc938f51e5823011e83b097538436268eb0e4810b9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)11779",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)11690",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)1142",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)11849",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:44"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)10882",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:52"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:55"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:60"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:63"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)11979_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)7090",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:69"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:70"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:72"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:73"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)11779": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)11690": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)1142": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)11849": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)10882": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)11979_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)7090": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          }
        }
      }
    },
    "dc130f55b8c4c554b681cf883215365b10cb56e1ad0f244105c978d2cda7e9b2": {
      "address": "0x1b7e102e076Daa08Dc625a32a2f4ffaA5Dc820A4",
      "txHash": "0x008c1441771a71523edc7b20fe14c2c56fbaa11c2bebe1458e3c06dabf51c074",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)11779",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)11690",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)1142",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)11849",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:44"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)10882",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:52"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:55"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:60"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:63"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)11979_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)7090",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:69"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:70"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:72"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:73"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)11779": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)11690": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)1142": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)11849": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)10882": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)11979_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)7090": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          }
        }
      }
    },
    "04b5217c5ab59250be7ff98c88573c0818f34bc1da3eec0cf0222a829569ac04": {
      "address": "0x529E79B8CDf842f66aBEDE6B25303E379d6782D6",
      "txHash": "0x5dc43ddc86e32397fee57682b292b4e480f7bcc2b740199ec7ebb3b046584340",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "BaseSportVault",
            "label": "sportsAMM",
            "type": "t_contract(ISportsAMM)71129",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:36"
          },
          {
            "contract": "BaseSportVault",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6720",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:37"
          },
          {
            "contract": "BaseSportVault",
            "label": "vaultStarted",
            "type": "t_bool",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:39"
          },
          {
            "contract": "BaseSportVault",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:41"
          },
          {
            "contract": "BaseSportVault",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:42"
          },
          {
            "contract": "BaseSportVault",
            "label": "roundStartTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:43"
          },
          {
            "contract": "BaseSportVault",
            "label": "roundEndTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:44"
          },
          {
            "contract": "BaseSportVault",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:46"
          },
          {
            "contract": "BaseSportVault",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:47"
          },
          {
            "contract": "BaseSportVault",
            "label": "claimedPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:48"
          },
          {
            "contract": "BaseSportVault",
            "label": "withdrawalQueue",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)30913_storage)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:49"
          },
          {
            "contract": "BaseSportVault",
            "label": "depositReceipts",
            "type": "t_mapping(t_address,t_struct(DepositReceipt)30918_storage)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:50"
          },
          {
            "contract": "BaseSportVault",
            "label": "withdrawalQueueAmount",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:51"
          },
          {
            "contract": "BaseSportVault",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:53"
          },
          {
            "contract": "BaseSportVault",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:55"
          },
          {
            "contract": "BaseSportVault",
            "label": "tradingMarketPositionPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_enum(Position)71080))",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:56"
          },
          {
            "contract": "BaseSportVault",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:57"
          },
          {
            "contract": "BaseSportVault",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:59"
          },
          {
            "contract": "BaseSportVault",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:60"
          },
          {
            "contract": "BaseSportVault",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:62"
          },
          {
            "contract": "BaseSportVault",
            "label": "utilizationRate",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:63"
          },
          {
            "contract": "BaseSportVault",
            "label": "capPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:65"
          },
          {
            "contract": "SportVault",
            "label": "allocationLimitsPerMarketPerRound",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:16"
          },
          {
            "contract": "SportVault",
            "label": "allocationSpentPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:18"
          },
          {
            "contract": "SportVault",
            "label": "priceLowerLimit",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:20"
          },
          {
            "contract": "SportVault",
            "label": "priceUpperLimit",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:21"
          },
          {
            "contract": "SportVault",
            "label": "skewImpactLimit",
            "type": "t_int256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:22"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(ISportsAMM)71129": {
            "label": "contract ISportsAMM"
          },
          "t_contract(IERC20Upgradeable)6720": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)30913_storage)": {
            "label": "mapping(address => struct BaseSportVault.WithdrawalRequest)"
          },
          "t_struct(WithdrawalRequest)30913_storage": {
            "label": "struct BaseSportVault.WithdrawalRequest",
            "members": [
              {
                "label": "round",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "requested",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(DepositReceipt)30918_storage)": {
            "label": "mapping(address => struct BaseSportVault.DepositReceipt)"
          },
          "t_struct(DepositReceipt)30918_storage": {
            "label": "struct BaseSportVault.DepositReceipt",
            "members": [
              {
                "label": "round",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_enum(Position)71080))": {
            "label": "mapping(uint256 => mapping(address => enum ISportsAMM.Position))"
          },
          "t_mapping(t_address,t_enum(Position)71080)": {
            "label": "mapping(address => enum ISportsAMM.Position)"
          },
          "t_enum(Position)71080": {
            "label": "enum ISportsAMM.Position",
            "members": [
              "Home",
              "Away",
              "Draw"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "80ce74087155a6932515e4601af132ce29df6a9612e50cb57f05d411d2beeaf0": {
      "address": "0xA17A70722dff78A06f585Fb2B2f63f0B16d75B8F",
      "txHash": "0xa32f317ee2bc9edda53c2361239b538f68eea8315e94e102d813492a542cd3be",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "BaseSportVault",
            "label": "sportsAMM",
            "type": "t_contract(ISportsAMM)71156",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:36"
          },
          {
            "contract": "BaseSportVault",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6720",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:37"
          },
          {
            "contract": "BaseSportVault",
            "label": "vaultStarted",
            "type": "t_bool",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:39"
          },
          {
            "contract": "BaseSportVault",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:41"
          },
          {
            "contract": "BaseSportVault",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:42"
          },
          {
            "contract": "BaseSportVault",
            "label": "roundStartTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:43"
          },
          {
            "contract": "BaseSportVault",
            "label": "roundEndTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:44"
          },
          {
            "contract": "BaseSportVault",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:46"
          },
          {
            "contract": "BaseSportVault",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:47"
          },
          {
            "contract": "BaseSportVault",
            "label": "claimedPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:48"
          },
          {
            "contract": "BaseSportVault",
            "label": "withdrawalQueue",
            "type": "t_mapping(t_address,t_struct(WithdrawalRequest)30913_storage)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:49"
          },
          {
            "contract": "BaseSportVault",
            "label": "depositReceipts",
            "type": "t_mapping(t_address,t_struct(DepositReceipt)30918_storage)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:50"
          },
          {
            "contract": "BaseSportVault",
            "label": "withdrawalQueueAmount",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:51"
          },
          {
            "contract": "BaseSportVault",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:53"
          },
          {
            "contract": "BaseSportVault",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:55"
          },
          {
            "contract": "BaseSportVault",
            "label": "tradingMarketPositionPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_enum(Position)71107))",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:56"
          },
          {
            "contract": "BaseSportVault",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:57"
          },
          {
            "contract": "BaseSportVault",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:59"
          },
          {
            "contract": "BaseSportVault",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:60"
          },
          {
            "contract": "BaseSportVault",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:62"
          },
          {
            "contract": "BaseSportVault",
            "label": "utilizationRate",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:63"
          },
          {
            "contract": "BaseSportVault",
            "label": "capPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:65"
          },
          {
            "contract": "SportVault",
            "label": "allocationLimitsPerMarketPerRound",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:16"
          },
          {
            "contract": "SportVault",
            "label": "allocationSpentPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:18"
          },
          {
            "contract": "SportVault",
            "label": "priceLowerLimit",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:20"
          },
          {
            "contract": "SportVault",
            "label": "priceUpperLimit",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:21"
          },
          {
            "contract": "SportVault",
            "label": "skewImpactLimit",
            "type": "t_int256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:22"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(ISportsAMM)71156": {
            "label": "contract ISportsAMM"
          },
          "t_contract(IERC20Upgradeable)6720": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_struct(WithdrawalRequest)30913_storage)": {
            "label": "mapping(address => struct BaseSportVault.WithdrawalRequest)"
          },
          "t_struct(WithdrawalRequest)30913_storage": {
            "label": "struct BaseSportVault.WithdrawalRequest",
            "members": [
              {
                "label": "round",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "requested",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(DepositReceipt)30918_storage)": {
            "label": "mapping(address => struct BaseSportVault.DepositReceipt)"
          },
          "t_struct(DepositReceipt)30918_storage": {
            "label": "struct BaseSportVault.DepositReceipt",
            "members": [
              {
                "label": "round",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_enum(Position)71107))": {
            "label": "mapping(uint256 => mapping(address => enum ISportsAMM.Position))"
          },
          "t_mapping(t_address,t_enum(Position)71107)": {
            "label": "mapping(address => enum ISportsAMM.Position)"
          },
          "t_enum(Position)71107": {
            "label": "enum ISportsAMM.Position",
            "members": [
              "Home",
              "Away",
              "Draw"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "cf8c29f13cd5b1c161ab463d82391593e1edf96685799c5fb238efac3c0955c7": {
      "address": "0x132F8f5A1d6b077021dB53DbE52729BbC3a35E34",
      "txHash": "0x69d22f92dd657059f48dcb4de246eb4d0fe637886e08d0e12037ac89576fc044",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:57"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:58"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:61"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:62"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:63"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)48054_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:66"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)48065_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:67"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)48074_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:68"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:69"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:70"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:71"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:74"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:75"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:76"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:77"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)72063",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:80"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:81"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:82"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:83"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:84"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)48008",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:87"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:88"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:89"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:90"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:94"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:95"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOnADate",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:96"
          },
          {
            "contract": "TherundownConsumer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)72832",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:98"
          },
          {
            "contract": "TherundownConsumer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)48074_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:99"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)48054_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)48054_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)48065_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)48065_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)48074_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)48074_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)72063": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)48008": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          },
          "t_contract(ITherundownConsumerVerifier)72832": {
            "label": "contract ITherundownConsumerVerifier"
          }
        }
      }
    },
    "ed87e18f165ebf72862bb5882ba04d8c210aa5c4e022598aaa72dccd7aba022d": {
      "address": "0x981f29730d99d59fE5ACe31964de0EC4B6A61386",
      "txHash": "0xc2a8552c2ddf4333f5e62e421bcc5d807c6ebab8c4fe6089bd61a02ebce11736",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:57"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:58"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:61"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:62"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:63"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)54605_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:66"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)54616_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:67"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)54625_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:68"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:69"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:70"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:71"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:74"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:75"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:76"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:77"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)79139",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:80"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:81"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:82"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:83"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:84"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)54559",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:87"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:88"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:89"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:90"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:94"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:95"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOnADate",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:96"
          },
          {
            "contract": "TherundownConsumer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)79988",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:98"
          },
          {
            "contract": "TherundownConsumer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)54625_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:99"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)54605_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)54605_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)54616_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)54616_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)54625_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)54625_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)79139": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)54559": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          },
          "t_contract(ITherundownConsumerVerifier)79988": {
            "label": "contract ITherundownConsumerVerifier"
          }
        }
      }
    },
    "3b8810380c3ecbcf41c3f08b1b6f883cad2331fe79ef054ce2f20b7c978b71be": {
      "address": "0xFC77C50cC0b03e92f8015Cf53d995Ad973FA2739",
      "txHash": "0xabc7ad7c03391665f048619ef33e4646bbce54683028af4bb72ac1c00553924e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "BaseSportVault",
            "label": "sportsAMM",
            "type": "t_contract(ISportsAMM)71075",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:30"
          },
          {
            "contract": "BaseSportVault",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6720",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:31"
          },
          {
            "contract": "BaseSportVault",
            "label": "vaultStarted",
            "type": "t_bool",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:33"
          },
          {
            "contract": "BaseSportVault",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:35"
          },
          {
            "contract": "BaseSportVault",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:36"
          },
          {
            "contract": "BaseSportVault",
            "label": "roundStartTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:37"
          },
          {
            "contract": "BaseSportVault",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:39"
          },
          {
            "contract": "BaseSportVault",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:40"
          },
          {
            "contract": "BaseSportVault",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:42"
          },
          {
            "contract": "BaseSportVault",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:43"
          },
          {
            "contract": "BaseSportVault",
            "label": "depositReceipts",
            "type": "t_mapping(t_address,t_struct(DepositReceipt)30911_storage)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:44"
          },
          {
            "contract": "BaseSportVault",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:46"
          },
          {
            "contract": "BaseSportVault",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:48"
          },
          {
            "contract": "BaseSportVault",
            "label": "tradingMarketPositionPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_enum(Position)71026))",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:49"
          },
          {
            "contract": "BaseSportVault",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:50"
          },
          {
            "contract": "BaseSportVault",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:52"
          },
          {
            "contract": "BaseSportVault",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:54"
          },
          {
            "contract": "BaseSportVault",
            "label": "utilizationRate",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:55"
          },
          {
            "contract": "BaseSportVault",
            "label": "capPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:57"
          },
          {
            "contract": "BaseSportVault",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:59"
          },
          {
            "contract": "BaseSportVault",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:61"
          },
          {
            "contract": "BaseSportVault",
            "label": "usersCurrentlyInVault",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:62"
          },
          {
            "contract": "SportVault",
            "label": "allocationLimitsPerMarketPerRound",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:32"
          },
          {
            "contract": "SportVault",
            "label": "allocationSpentPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:34"
          },
          {
            "contract": "SportVault",
            "label": "priceLowerLimit",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:36"
          },
          {
            "contract": "SportVault",
            "label": "priceUpperLimit",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:37"
          },
          {
            "contract": "SportVault",
            "label": "skewImpactLimit",
            "type": "t_int256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:38"
          },
          {
            "contract": "SportVault",
            "label": "minTradeAmount",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:40"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(ISportsAMM)71075": {
            "label": "contract ISportsAMM"
          },
          "t_contract(IERC20Upgradeable)6720": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_struct(DepositReceipt)30911_storage)": {
            "label": "mapping(address => struct BaseSportVault.DepositReceipt)"
          },
          "t_struct(DepositReceipt)30911_storage": {
            "label": "struct BaseSportVault.DepositReceipt",
            "members": [
              {
                "label": "round",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_enum(Position)71026))": {
            "label": "mapping(uint256 => mapping(address => enum ISportsAMM.Position))"
          },
          "t_mapping(t_address,t_enum(Position)71026)": {
            "label": "mapping(address => enum ISportsAMM.Position)"
          },
          "t_enum(Position)71026": {
            "label": "enum ISportsAMM.Position",
            "members": [
              "Home",
              "Away",
              "Draw"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c8480115eb5ab60ea4a7bfdebb6c6bc612b178d983d239d435815dd983c02cf5": {
      "address": "0xfD4892Ad5772a0BcB784afDfF6d8410765cabEa4",
      "txHash": "0xb3f2f25e8782cfb28c7142aad8372dbd56b81c31ce7b4bd0224d8adadee7721f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "BaseSportVault",
            "label": "sportsAMM",
            "type": "t_contract(ISportsAMM)3035",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:30"
          },
          {
            "contract": "BaseSportVault",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)390",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:31"
          },
          {
            "contract": "BaseSportVault",
            "label": "vaultStarted",
            "type": "t_bool",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:33"
          },
          {
            "contract": "BaseSportVault",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:35"
          },
          {
            "contract": "BaseSportVault",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:36"
          },
          {
            "contract": "BaseSportVault",
            "label": "roundStartTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:37"
          },
          {
            "contract": "BaseSportVault",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:39"
          },
          {
            "contract": "BaseSportVault",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:40"
          },
          {
            "contract": "BaseSportVault",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:42"
          },
          {
            "contract": "BaseSportVault",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:43"
          },
          {
            "contract": "BaseSportVault",
            "label": "depositReceipts",
            "type": "t_mapping(t_address,t_struct(DepositReceipt)930_storage)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:44"
          },
          {
            "contract": "BaseSportVault",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:46"
          },
          {
            "contract": "BaseSportVault",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:48"
          },
          {
            "contract": "BaseSportVault",
            "label": "tradingMarketPositionPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_enum(Position)2986))",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:49"
          },
          {
            "contract": "BaseSportVault",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:50"
          },
          {
            "contract": "BaseSportVault",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:52"
          },
          {
            "contract": "BaseSportVault",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:54"
          },
          {
            "contract": "BaseSportVault",
            "label": "utilizationRate",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:55"
          },
          {
            "contract": "BaseSportVault",
            "label": "capPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:57"
          },
          {
            "contract": "BaseSportVault",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:59"
          },
          {
            "contract": "BaseSportVault",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:61"
          },
          {
            "contract": "BaseSportVault",
            "label": "usersCurrentlyInVault",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:62"
          },
          {
            "contract": "SportVault",
            "label": "allocationLimitsPerMarketPerRound",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:32"
          },
          {
            "contract": "SportVault",
            "label": "allocationSpentPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:34"
          },
          {
            "contract": "SportVault",
            "label": "priceLowerLimit",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:36"
          },
          {
            "contract": "SportVault",
            "label": "priceUpperLimit",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:37"
          },
          {
            "contract": "SportVault",
            "label": "skewImpactLimit",
            "type": "t_int256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:38"
          },
          {
            "contract": "SportVault",
            "label": "minTradeAmount",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:40"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(ISportsAMM)3035": {
            "label": "contract ISportsAMM"
          },
          "t_contract(IERC20Upgradeable)390": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_struct(DepositReceipt)930_storage)": {
            "label": "mapping(address => struct BaseSportVault.DepositReceipt)"
          },
          "t_struct(DepositReceipt)930_storage": {
            "label": "struct BaseSportVault.DepositReceipt",
            "members": [
              {
                "label": "round",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_enum(Position)2986))": {
            "label": "mapping(uint256 => mapping(address => enum ISportsAMM.Position))"
          },
          "t_mapping(t_address,t_enum(Position)2986)": {
            "label": "mapping(address => enum ISportsAMM.Position)"
          },
          "t_enum(Position)2986": {
            "label": "enum ISportsAMM.Position",
            "members": [
              "Home",
              "Away",
              "Draw"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d8268f0a4eb2ffe897b976c87b0e4990be36d519085893c0ff02660ae361bd63": {
      "address": "0x4D3C3D40A6d9f1A0896db3F24DE539858e74543f",
      "txHash": "0xa7f6ca2964decd9360bff6a369941294ee0eefe6690426927c8520ccf09ebe3f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "BaseSportVault",
            "label": "sportsAMM",
            "type": "t_contract(ISportsAMM)71079",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:30"
          },
          {
            "contract": "BaseSportVault",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6720",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:31"
          },
          {
            "contract": "BaseSportVault",
            "label": "vaultStarted",
            "type": "t_bool",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:33"
          },
          {
            "contract": "BaseSportVault",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:35"
          },
          {
            "contract": "BaseSportVault",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:36"
          },
          {
            "contract": "BaseSportVault",
            "label": "roundStartTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:37"
          },
          {
            "contract": "BaseSportVault",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:39"
          },
          {
            "contract": "BaseSportVault",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:40"
          },
          {
            "contract": "BaseSportVault",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:42"
          },
          {
            "contract": "BaseSportVault",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:43"
          },
          {
            "contract": "BaseSportVault",
            "label": "depositReceipts",
            "type": "t_mapping(t_address,t_struct(DepositReceipt)30911_storage)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:44"
          },
          {
            "contract": "BaseSportVault",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:46"
          },
          {
            "contract": "BaseSportVault",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:48"
          },
          {
            "contract": "BaseSportVault",
            "label": "tradingMarketPositionPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_enum(Position)71030))",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:49"
          },
          {
            "contract": "BaseSportVault",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:50"
          },
          {
            "contract": "BaseSportVault",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:52"
          },
          {
            "contract": "BaseSportVault",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:54"
          },
          {
            "contract": "BaseSportVault",
            "label": "utilizationRate",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:55"
          },
          {
            "contract": "BaseSportVault",
            "label": "capPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:57"
          },
          {
            "contract": "BaseSportVault",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:59"
          },
          {
            "contract": "BaseSportVault",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:61"
          },
          {
            "contract": "BaseSportVault",
            "label": "usersCurrentlyInVault",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:62"
          },
          {
            "contract": "SportVault",
            "label": "allocationLimitsPerMarketPerRound",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:32"
          },
          {
            "contract": "SportVault",
            "label": "allocationSpentPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:34"
          },
          {
            "contract": "SportVault",
            "label": "priceLowerLimit",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:36"
          },
          {
            "contract": "SportVault",
            "label": "priceUpperLimit",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:37"
          },
          {
            "contract": "SportVault",
            "label": "skewImpactLimit",
            "type": "t_int256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:38"
          },
          {
            "contract": "SportVault",
            "label": "minTradeAmount",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:40"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(ISportsAMM)71079": {
            "label": "contract ISportsAMM"
          },
          "t_contract(IERC20Upgradeable)6720": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_struct(DepositReceipt)30911_storage)": {
            "label": "mapping(address => struct BaseSportVault.DepositReceipt)"
          },
          "t_struct(DepositReceipt)30911_storage": {
            "label": "struct BaseSportVault.DepositReceipt",
            "members": [
              {
                "label": "round",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_enum(Position)71030))": {
            "label": "mapping(uint256 => mapping(address => enum ISportsAMM.Position))"
          },
          "t_mapping(t_address,t_enum(Position)71030)": {
            "label": "mapping(address => enum ISportsAMM.Position)"
          },
          "t_enum(Position)71030": {
            "label": "enum ISportsAMM.Position",
            "members": [
              "Home",
              "Away",
              "Draw"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "dfe355ae3a0b4e2ee1c7e432d4de7bb14cb70706bc6c463d6f117f0458de89ed": {
      "address": "0xC1a7A757B505aC7B7136bbcd9315403eD6f99692",
      "txHash": "0x055b472594bb026611e126961188a35ed4ba583cc73a803abe04927981f91493",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "BaseSportVault",
            "label": "sportsAMM",
            "type": "t_contract(ISportsAMM)3036",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:30"
          },
          {
            "contract": "BaseSportVault",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)390",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:31"
          },
          {
            "contract": "BaseSportVault",
            "label": "vaultStarted",
            "type": "t_bool",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:33"
          },
          {
            "contract": "BaseSportVault",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:35"
          },
          {
            "contract": "BaseSportVault",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:36"
          },
          {
            "contract": "BaseSportVault",
            "label": "roundStartTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:37"
          },
          {
            "contract": "BaseSportVault",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:39"
          },
          {
            "contract": "BaseSportVault",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:40"
          },
          {
            "contract": "BaseSportVault",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:42"
          },
          {
            "contract": "BaseSportVault",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:43"
          },
          {
            "contract": "BaseSportVault",
            "label": "depositReceipts",
            "type": "t_mapping(t_address,t_struct(DepositReceipt)930_storage)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:44"
          },
          {
            "contract": "BaseSportVault",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:46"
          },
          {
            "contract": "BaseSportVault",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:48"
          },
          {
            "contract": "BaseSportVault",
            "label": "tradingMarketPositionPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_enum(Position)2987))",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:49"
          },
          {
            "contract": "BaseSportVault",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:50"
          },
          {
            "contract": "BaseSportVault",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:52"
          },
          {
            "contract": "BaseSportVault",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:54"
          },
          {
            "contract": "BaseSportVault",
            "label": "utilizationRate",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:55"
          },
          {
            "contract": "BaseSportVault",
            "label": "capPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:57"
          },
          {
            "contract": "BaseSportVault",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:59"
          },
          {
            "contract": "BaseSportVault",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:61"
          },
          {
            "contract": "BaseSportVault",
            "label": "usersCurrentlyInVault",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\BaseSportVault.sol:62"
          },
          {
            "contract": "SportVault",
            "label": "allocationLimitsPerMarketPerRound",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:32"
          },
          {
            "contract": "SportVault",
            "label": "allocationSpentPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:34"
          },
          {
            "contract": "SportVault",
            "label": "priceLowerLimit",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:36"
          },
          {
            "contract": "SportVault",
            "label": "priceUpperLimit",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:37"
          },
          {
            "contract": "SportVault",
            "label": "skewImpactLimit",
            "type": "t_int256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:38"
          },
          {
            "contract": "SportVault",
            "label": "minTradeAmount",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:40"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(ISportsAMM)3036": {
            "label": "contract ISportsAMM"
          },
          "t_contract(IERC20Upgradeable)390": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_struct(DepositReceipt)930_storage)": {
            "label": "mapping(address => struct BaseSportVault.DepositReceipt)"
          },
          "t_struct(DepositReceipt)930_storage": {
            "label": "struct BaseSportVault.DepositReceipt",
            "members": [
              {
                "label": "round",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_enum(Position)2987))": {
            "label": "mapping(uint256 => mapping(address => enum ISportsAMM.Position))"
          },
          "t_mapping(t_address,t_enum(Position)2987)": {
            "label": "mapping(address => enum ISportsAMM.Position)"
          },
          "t_enum(Position)2987": {
            "label": "enum ISportsAMM.Position",
            "members": [
              "Home",
              "Away",
              "Draw"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a17ca1b2936d6e2ed480e6ae1fe8e554a1fb46f59035dc7cc4976e4e01af0105": {
      "address": "0x582FB96EE4ea5b5Eb6f8BFb3ba3fDeAe15d08744",
      "txHash": "0x0849029d6e92a7f2956b65fe2f33a221ff971b6aaa46b0925e101c8629cb9e35",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportVault",
            "label": "sportsAMM",
            "type": "t_contract(ISportsAMM)71158",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:47"
          },
          {
            "contract": "SportVault",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6720",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:48"
          },
          {
            "contract": "SportVault",
            "label": "vaultStarted",
            "type": "t_bool",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:50"
          },
          {
            "contract": "SportVault",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:52"
          },
          {
            "contract": "SportVault",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:53"
          },
          {
            "contract": "SportVault",
            "label": "roundStartTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:54"
          },
          {
            "contract": "SportVault",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:56"
          },
          {
            "contract": "SportVault",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:57"
          },
          {
            "contract": "SportVault",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:59"
          },
          {
            "contract": "SportVault",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:60"
          },
          {
            "contract": "SportVault",
            "label": "depositReceipts",
            "type": "t_mapping(t_address,t_struct(DepositReceipt)30912_storage)",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:61"
          },
          {
            "contract": "SportVault",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:63"
          },
          {
            "contract": "SportVault",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:65"
          },
          {
            "contract": "SportVault",
            "label": "tradingMarketPositionPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_enum(Position)71109))",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:66"
          },
          {
            "contract": "SportVault",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:67"
          },
          {
            "contract": "SportVault",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:69"
          },
          {
            "contract": "SportVault",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:70"
          },
          {
            "contract": "SportVault",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:72"
          },
          {
            "contract": "SportVault",
            "label": "utilizationRate",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:73"
          },
          {
            "contract": "SportVault",
            "label": "capPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:75"
          },
          {
            "contract": "SportVault",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:77"
          },
          {
            "contract": "SportVault",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:79"
          },
          {
            "contract": "SportVault",
            "label": "usersCurrentlyInVault",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:80"
          },
          {
            "contract": "SportVault",
            "label": "allocationLimitsPerMarketPerRound",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:82"
          },
          {
            "contract": "SportVault",
            "label": "allocationSpentPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:84"
          },
          {
            "contract": "SportVault",
            "label": "priceLowerLimit",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:86"
          },
          {
            "contract": "SportVault",
            "label": "priceUpperLimit",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:87"
          },
          {
            "contract": "SportVault",
            "label": "skewImpactLimit",
            "type": "t_int256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:88"
          },
          {
            "contract": "SportVault",
            "label": "minTradeAmount",
            "type": "t_uint256",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:90"
          },
          {
            "contract": "SportVault",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)71228",
            "src": "contracts\\OvertimeVaults\\SportVault.sol:93"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)71158": {
            "label": "contract ISportsAMM"
          },
          "t_contract(IERC20Upgradeable)6720": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_struct(DepositReceipt)30912_storage)": {
            "label": "mapping(address => struct SportVault.DepositReceipt)"
          },
          "t_struct(DepositReceipt)30912_storage": {
            "label": "struct SportVault.DepositReceipt",
            "members": [
              {
                "label": "round",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_enum(Position)71109))": {
            "label": "mapping(uint256 => mapping(address => enum ISportsAMM.Position))"
          },
          "t_mapping(t_address,t_enum(Position)71109)": {
            "label": "mapping(address => enum ISportsAMM.Position)"
          },
          "t_enum(Position)71109": {
            "label": "enum ISportsAMM.Position",
            "members": [
              "Home",
              "Away",
              "Draw"
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(IStakingThales)71228": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "751e0775ecb2007802eccd18c5482f3e4026d308e4a94477fbbf7a8d6b7d2460": {
      "address": "0x536a8B1B732Aa4624f4E2ff2D0c073C5204FB89B",
      "txHash": "0x913d039319b3258b4055310166b838eb6eb50bec59d9a4b475811fe6aa82f036",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)80360",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:24"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "invalidName",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:25"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "supportedMarketType",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:26"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultOddsThreshold",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:27"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "oddsThresholdForSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:28"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)80360": {
            "label": "contract ITherundownConsumer"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "195b33336b04f29341ef6f34b102095ab63a469d1c1dbe5a4fb84b1337d336f1": {
      "address": "0x78E9354077a65672eB2BCb546C8A5Ee749f83806",
      "txHash": "0x59641d5debc985b3a9ef19c7b21885c60bdef5beb0156e3ff59577397d5854e6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:57"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:58"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:61"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:62"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:63"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)54662_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:66"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)54673_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:67"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)54682_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:68"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:69"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:70"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:71"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:74"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:75"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:76"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:77"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)79722",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:80"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:81"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:82"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:83"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:84"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)54616",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:87"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:88"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:89"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:90"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:94"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:95"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOnADate",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:96"
          },
          {
            "contract": "TherundownConsumer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)80609",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:98"
          },
          {
            "contract": "TherundownConsumer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)54682_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:99"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)54662_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)54662_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)54673_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)54673_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)54682_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)54682_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)79722": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)54616": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          },
          "t_contract(ITherundownConsumerVerifier)80609": {
            "label": "contract ITherundownConsumerVerifier"
          }
        }
      }
    },
    "b4037916eddfb5c2c79a209e537a16765af363ec131fc9bb632519b4d9818b4f": {
      "address": "0x982BD0545B5913689F05aC716B14FBeDeA17Cd55",
      "txHash": "0xc73c39561a124299a397c8e2f73abb22486759d30149144e68671ce15d3b0ff3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)7761",
            "src": "contracts/SportMarkets/SportsAMM.sol:38"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:41"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:45"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:48"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:51"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:55"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:64"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:67"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:70"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:73"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)79664",
            "src": "contracts/SportMarkets/SportsAMM.sol:76"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:79"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:82"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)77895",
            "src": "contracts/SportMarkets/SportsAMM.sol:85"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:88"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:91"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:94"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportsAMM.sol:97"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:100"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:103"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:106"
          },
          {
            "contract": "SportsAMM",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:109"
          },
          {
            "contract": "SportsAMM",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:112"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:115"
          },
          {
            "contract": "SportsAMM",
            "label": "sportAmmUtils",
            "type": "t_contract(SportsAMMUtils)67792",
            "src": "contracts/SportMarkets/SportsAMM.sol:117"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:120"
          },
          {
            "contract": "SportsAMM",
            "label": "thresholdForOddsUpdate",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:124"
          },
          {
            "contract": "SportsAMM",
            "label": "wrapper",
            "type": "t_contract(ITherundownConsumerWrapper)80361",
            "src": "contracts/SportMarkets/SportsAMM.sol:127"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)7761": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)79664": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)77895": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(SportsAMMUtils)67792": {
            "label": "contract SportsAMMUtils"
          },
          "t_contract(ITherundownConsumerWrapper)80361": {
            "label": "contract ITherundownConsumerWrapper"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b361891e462e492fcadd8af2026dd6bae898163eed1a07ccc4f1449028b2ee3b": {
      "address": "0x698aAC0aa1BE26E778C7262bCAB2cfab7E755cd8",
      "txHash": "0x367fd7e799eb217a7bf7eb6bccbe9b5249c13dfe5fdec2e609943d72b8bdbc12",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:57"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:58"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:61"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:62"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:63"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)54662_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:66"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)54673_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:67"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)54682_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:68"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:69"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:70"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:71"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:74"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:75"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:76"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:77"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)79654",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:80"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:81"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:82"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:83"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:84"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)54616",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:87"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:88"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:89"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:90"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:94"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:95"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOnADate",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:96"
          },
          {
            "contract": "TherundownConsumer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)80532",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:98"
          },
          {
            "contract": "TherundownConsumer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)54682_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:99"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)54662_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)54662_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)54673_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)54673_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)54682_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)54682_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)79654": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)54616": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          },
          "t_contract(ITherundownConsumerVerifier)80532": {
            "label": "contract ITherundownConsumerVerifier"
          }
        }
      }
    },
    "ef2ce74a0ded7bb08331c3ae58af17f06ee1254df959b673cf6bed2649a18da8": {
      "address": "0x05cE8b455E3695bf56CAEb329ad1aE4501fA4A20",
      "txHash": "0xcf41db4fea436cd4403188c545ed168d22cc5766ad9996c7a0c683b7aa1eb4ab",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)1808",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:24"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "invalidName",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:25"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "supportedMarketType",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:26"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultOddsThreshold",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:27"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "oddsThresholdForSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:28"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultBookmakerIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:30"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "sportIdToBookmakerIds",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:31"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)1808": {
            "label": "contract ITherundownConsumer"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "a4b0316ce40fddcf712d587d2d4e3118e7ca6f951eb1ccbd98e586d7c84bb29e": {
      "address": "0x83826B9c6D1390Aed084c6896dbdCcc638691756",
      "txHash": "0x99537813ae1db0f1e9e14f0671d6dcc495f46272ca1626499fb1a4db916f55d1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)1934",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:24"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "invalidName",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:25"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "supportedMarketType",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:26"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultOddsThreshold",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:27"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "oddsThresholdForSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:28"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultBookmakerIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:30"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "sportIdToBookmakerIds",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:31"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)1934": {
            "label": "contract ITherundownConsumer"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "71515ce4b9003aeb2cc6abc30da33149c0c3ac673c3b4602fcef265c5aa9294a": {
      "address": "0x9e95E6B55De65E029EFaAaE1ff026F9094Eb41Bb",
      "txHash": "0x93c3692d97b5ea633da75e3c84e2e5baf84c1d616f786ac09ab42b855ca9aee1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)1934",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:24"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "invalidName",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:25"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "supportedMarketType",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:26"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultOddsThreshold",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:27"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "oddsThresholdForSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:28"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultBookmakerIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:30"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "sportIdToBookmakerIds",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:31"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)1934": {
            "label": "contract ITherundownConsumer"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "18c49959419e73de1c4012f5ed47396543a9a3814c6e3ac8212d6b207679a49d": {
      "address": "0x2330176b1E10e6Bf2945Cc6F7D76aDf3930BD105",
      "txHash": "0xc6c630f689153e523538585461229c5ed08dd6ef806414d907124929e9e55556",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)82361",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:24"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "invalidName",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:25"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "supportedMarketType",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:26"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultOddsThreshold",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:27"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "oddsThresholdForSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:28"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultBookmakerIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:30"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "sportIdToBookmakerIds",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:31"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)82361": {
            "label": "contract ITherundownConsumer"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "0d563e6b5df4651e7881035ac69c8089f5a744cd050b5da938b44b601ba3d525": {
      "address": "0xb6c7C297db0CF02c9109887161dDCcd08414f21c",
      "txHash": "0x2c7637fc7a6f392ca908b375d54682bedde601c9b8b1a895067e672bc6d4c585",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)11856",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:38"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)11745",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:39"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)1142",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)11926",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)10916",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:62"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)12123_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)7124",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:70"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:71"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerGameCombination",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:74"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)11856": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)11745": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)1142": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)11926": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)10916": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)12123_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)7124": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => uint256))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          }
        }
      }
    },
    "7f23e11ed6591961cef28bae59132396cac74ce3e6bc3908d5bc1f0b4a9a7e3e": {
      "address": "0xe2Dbb15f0bE7FD73C23883BEdf06124814DC070c",
      "txHash": "0x11ee5c7d4581812f63737f6d3bf5996db577c795942ae12dc12c6aef41cc874f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)57333",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:32"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)57461",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:33"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)56697",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:34"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)55647_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:37"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)55647_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:38"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:39"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:40"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:41"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "doesSportSupportSpreadAndTotal",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:42"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:45"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:46"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketSpreadChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_int16,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:47"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketTotalChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_uint24,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:48"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:49"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketSread",
            "type": "t_mapping(t_address,t_int16)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:50"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketTotal",
            "type": "t_mapping(t_address,t_uint24)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:51"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveTotalChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:52"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveSpreadChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:53"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "isSpreadChildMarket",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:54"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:55"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)57333": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)57461": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)56697": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)55647_storage)": {
            "label": "mapping(bytes32 => struct IGamesOddsObtainer.GameOdds)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(GameOdds)55647_storage": {
            "label": "struct IGamesOddsObtainer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadHome",
                "type": "t_int16"
              },
              {
                "label": "spreadHomeOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadAway",
                "type": "t_int16"
              },
              {
                "label": "spreadAwayOdds",
                "type": "t_int24"
              },
              {
                "label": "totalOver",
                "type": "t_uint24"
              },
              {
                "label": "totalOverOdds",
                "type": "t_int24"
              },
              {
                "label": "totalUnder",
                "type": "t_uint24"
              },
              {
                "label": "totalUnderOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_int24": {
            "label": "int24"
          },
          "t_int16": {
            "label": "int16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_int16,t_address))": {
            "label": "mapping(address => mapping(int16 => address))"
          },
          "t_mapping(t_int16,t_address)": {
            "label": "mapping(int16 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint24,t_address))": {
            "label": "mapping(address => mapping(uint24 => address))"
          },
          "t_mapping(t_uint24,t_address)": {
            "label": "mapping(uint24 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_int16)": {
            "label": "mapping(address => int16)"
          },
          "t_mapping(t_address,t_uint24)": {
            "label": "mapping(address => uint24)"
          }
        }
      }
    },
    "d0a865d5ff71adf3ddf3189594448923486116af3042fd11c3b87b4fb8ac6756": {
      "address": "0xda1AcEb8613D26b1D4b2ee0Ff3383B89e4DAE712",
      "txHash": "0xc9e4b8c1638f0664caa6bcfe3d142c8e989215ecbc90b4dfa7882bc9751b33dc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)2520",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:25"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "invalidName",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:26"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "supportedMarketType",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:27"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultOddsThreshold",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:28"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "oddsThresholdForSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:29"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultBookmakerIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:31"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "sportIdToBookmakerIds",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:32"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "obtainer",
            "type": "t_contract(IGamesOddsObtainer)2274",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:33"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)2520": {
            "label": "contract ITherundownConsumer"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_contract(IGamesOddsObtainer)2274": {
            "label": "contract IGamesOddsObtainer"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "b381b6033ad41a645826abf8b4df5dcf7868bc8fc8976b59a5c529cce6c30ef4": {
      "address": "0x366204fBe3892051A4DAe7f119bA4D570f6EC665",
      "txHash": "0x9a6f2986d7fb8488b1de2fb7722644d2508226a48c23774c0b6ebd14f4854018",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:58"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:59"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:62"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:63"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:64"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)38259_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:67"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)38270_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:68"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)38279_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:69"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:70"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:71"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:72"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:75"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:76"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:77"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:78"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)56070",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:81"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:82"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:83"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:84"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:85"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)38212",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:88"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:89"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:90"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:94"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:95"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:96"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOnADate",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:97"
          },
          {
            "contract": "TherundownConsumer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)56834",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:99"
          },
          {
            "contract": "TherundownConsumer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)38279_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:100"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsObtainer",
            "type": "t_contract(IGamesOddsObtainer)55193",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:101"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)38259_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)38259_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)38270_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)38270_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)38279_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)38279_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)56070": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)38212": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          },
          "t_contract(ITherundownConsumerVerifier)56834": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(IGamesOddsObtainer)55193": {
            "label": "contract IGamesOddsObtainer"
          }
        }
      }
    },
    "be67f2613eac59bc19e667a4b90ae380ea36700cdde8099630db5487e75bfc86": {
      "address": "0xb8c8eAc00eE544E54B560a9C37Bb94450d5cf6BD",
      "txHash": "0xf60d74262b7a4eb66e78c68b105fc96c00e34af6ecf2d52a6b0a25de48c9737e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "expiryDuration",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:32"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "marketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:34"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "customMarketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:35"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:37"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)61639_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:39"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)61639_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:40"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_migratingManager",
            "type": "t_contract(SportPositionalMarketManager)48132",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:42"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sUSD",
            "type": "t_contract(IERC20)3409",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:44"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:46"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sportPositionalMarketFactory",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:47"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:48"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:49"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:50"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "cancelTimeout",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:51"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedCancelAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:52"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "oddsObtainer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:53"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)61639_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(SportPositionalMarketManager)48132": {
            "label": "contract SportPositionalMarketManager"
          },
          "t_contract(IERC20)3409": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "acae85109f8bc2dbb8a7b7e449f20887f6d547541312558e0352450fb45bb064": {
      "address": "0x71145Cfa1c602a413E090C079eCF94184B71816A",
      "txHash": "0xfab0a44dfc34045eb294eea596b8b3f887b39c256859252f191a7106b551a578",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6764",
            "src": "contracts/SportMarkets/SportsAMM.sol:38"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:41"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:45"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:48"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:51"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:55"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:64"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:67"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:70"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:73"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)56850",
            "src": "contracts/SportMarkets/SportsAMM.sol:76"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:79"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:82"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)55499",
            "src": "contracts/SportMarkets/SportsAMM.sol:85"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:88"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:91"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:94"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportsAMM.sol:97"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:100"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:103"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:106"
          },
          {
            "contract": "SportsAMM",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:109"
          },
          {
            "contract": "SportsAMM",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:112"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:115"
          },
          {
            "contract": "SportsAMM",
            "label": "sportAmmUtils",
            "type": "t_contract(SportsAMMUtils)52877",
            "src": "contracts/SportMarkets/SportsAMM.sol:117"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:120"
          },
          {
            "contract": "SportsAMM",
            "label": "thresholdForOddsUpdate",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:124"
          },
          {
            "contract": "SportsAMM",
            "label": "wrapper",
            "type": "t_contract(ITherundownConsumerWrapper)57441",
            "src": "contracts/SportMarkets/SportsAMM.sol:127"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:130"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:133"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)6764": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)56850": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)55499": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(SportsAMMUtils)52877": {
            "label": "contract SportsAMMUtils"
          },
          "t_contract(ITherundownConsumerWrapper)57441": {
            "label": "contract ITherundownConsumerWrapper"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b0afd7b643c2f9331235645813a3b84c792be40c4c51528f2c26dbf1b99e6866": {
      "address": "0xdF851C827554431f0E160aBe67dD0c6850b8e029",
      "txHash": "0x84d12d195f80423c6907e6817e9049f9aa76c1180e3ae0b91bb6d6d944062bda",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "SportPositionalMarketFactory",
            "label": "positionalMarketManager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketFactory.sol:16"
          },
          {
            "contract": "SportPositionalMarketFactory",
            "label": "positionalMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketFactory.sol:18"
          },
          {
            "contract": "SportPositionalMarketFactory",
            "label": "positionMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketFactory.sol:19"
          },
          {
            "contract": "SportPositionalMarketFactory",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketFactory.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0dcacd633312bc99896d47fe544fcc58b18219359078bbcb12d928ca06a98604": {
      "address": "0x6E29d90E681C558D7226D8C0EA1Ad3D8fe5a6dDb",
      "txHash": "0x7e145f2b1a235bf078f2693925bad915403df981cb80f5405bf32de7578c687e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:58"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:59"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:62"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:63"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:64"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)35555_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:67"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)35566_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:68"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)35575_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:69"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:70"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:71"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:72"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:75"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:76"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:77"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:78"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)53446",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:81"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:82"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:83"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:84"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:85"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)35508",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:88"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:89"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:90"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:94"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:95"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:96"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOnADate",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:97"
          },
          {
            "contract": "TherundownConsumer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)54217",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:99"
          },
          {
            "contract": "TherundownConsumer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)35575_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:100"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsObtainer",
            "type": "t_contract(IGamesOddsObtainer)52548",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:101"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)35555_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)35555_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)35566_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)35566_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)35575_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)35575_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)53446": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)35508": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          },
          "t_contract(ITherundownConsumerVerifier)54217": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(IGamesOddsObtainer)52548": {
            "label": "contract IGamesOddsObtainer"
          }
        }
      }
    },
    "d196c962b7072ebf91a6bd12cd3c6ba84b7495e30fd4666c5108121ddcabfeab": {
      "address": "0xd1a5BdF73181ac6cb89c4401CCc68c39DBCF6d44",
      "txHash": "0x12f4f7ec3f03996e99c39560aa7655dad5ba455a6e418f11a44c30e868f8dd51",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6137",
            "src": "contracts/SportMarkets/SportsAMM.sol:38"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:41"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:45"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:48"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:51"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:55"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:64"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:67"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:70"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:73"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)56278",
            "src": "contracts/SportMarkets/SportsAMM.sol:76"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:79"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:82"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)54920",
            "src": "contracts/SportMarkets/SportsAMM.sol:85"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:88"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:91"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:94"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportsAMM.sol:97"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:100"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:103"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:106"
          },
          {
            "contract": "SportsAMM",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:109"
          },
          {
            "contract": "SportsAMM",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:112"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:115"
          },
          {
            "contract": "SportsAMM",
            "label": "sportAmmUtils",
            "type": "t_contract(SportsAMMUtils)52298",
            "src": "contracts/SportMarkets/SportsAMM.sol:117"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:120"
          },
          {
            "contract": "SportsAMM",
            "label": "thresholdForOddsUpdate",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:124"
          },
          {
            "contract": "SportsAMM",
            "label": "wrapper",
            "type": "t_contract(ITherundownConsumerWrapper)56876",
            "src": "contracts/SportMarkets/SportsAMM.sol:127"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:130"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:133"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)6137": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)56278": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)54920": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(SportsAMMUtils)52298": {
            "label": "contract SportsAMMUtils"
          },
          "t_contract(ITherundownConsumerWrapper)56876": {
            "label": "contract ITherundownConsumerWrapper"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fcd10ae27cdc4df8eaa26100bc21cab3c9de40af27d0c8a382a6061ea5d4e1cc": {
      "address": "0x919A79177f267C8873f9bf8f9F720530588B6F02",
      "txHash": "0xe4b3a874c531976ea08e5a2506cf82f84f60fb707f1930192f12176ff0d94696",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:18"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5f34ec93b1d3df85de4e92375701d803091ffefe3f0724caac47f84b1088c4d5": {
      "address": "0xec3e380b11c122D3FDc6424f0194CC2af907F6Ba",
      "txHash": "0x929187ec46b6d62b2024268ba759aaa01a7cb1861b4f21a845616312ced5f991",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)4075",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:32"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)4203",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:33"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)3829",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:34"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)2992_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:37"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)2992_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:38"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:39"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:40"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:41"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "doesSportSupportSpreadAndTotal",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:42"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:45"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:46"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketSpreadChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_int16,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:47"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketTotalChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_uint24,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:48"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:49"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketSread",
            "type": "t_mapping(t_address,t_int16)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:50"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketTotal",
            "type": "t_mapping(t_address,t_uint24)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:51"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveTotalChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:52"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveSpreadChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:53"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "isSpreadChildMarket",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:54"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:55"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)4075": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)4203": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)3829": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)2992_storage)": {
            "label": "mapping(bytes32 => struct IGamesOddsObtainer.GameOdds)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(GameOdds)2992_storage": {
            "label": "struct IGamesOddsObtainer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadHome",
                "type": "t_int16"
              },
              {
                "label": "spreadHomeOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadAway",
                "type": "t_int16"
              },
              {
                "label": "spreadAwayOdds",
                "type": "t_int24"
              },
              {
                "label": "totalOver",
                "type": "t_uint24"
              },
              {
                "label": "totalOverOdds",
                "type": "t_int24"
              },
              {
                "label": "totalUnder",
                "type": "t_uint24"
              },
              {
                "label": "totalUnderOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_int24": {
            "label": "int24"
          },
          "t_int16": {
            "label": "int16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_int16,t_address))": {
            "label": "mapping(address => mapping(int16 => address))"
          },
          "t_mapping(t_int16,t_address)": {
            "label": "mapping(int16 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint24,t_address))": {
            "label": "mapping(address => mapping(uint24 => address))"
          },
          "t_mapping(t_uint24,t_address)": {
            "label": "mapping(uint24 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_int16)": {
            "label": "mapping(address => int16)"
          },
          "t_mapping(t_address,t_uint24)": {
            "label": "mapping(address => uint24)"
          }
        }
      }
    },
    "ee41f213571ebfdad4b5afe7f6163e789f0054bc7d6c21e65b60e18dccdc850b": {
      "address": "0xF8A3a6d660177c91a304cbc5E0218fE78F5d9039",
      "txHash": "0x05d0436c29bce7c1f54c0b007bb5e497c7f0667f09de9a3d29fbb5da83c56de4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)4068",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:32"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)4196",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:33"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)3822",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:34"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)2985_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:37"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)2985_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:38"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:39"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:40"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:41"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "doesSportSupportSpreadAndTotal",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:42"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:45"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:46"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketSpreadChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_int16,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:47"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketTotalChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_uint24,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:48"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:49"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketSread",
            "type": "t_mapping(t_address,t_int16)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:50"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketTotal",
            "type": "t_mapping(t_address,t_uint24)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:51"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveTotalChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:52"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveSpreadChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:53"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "isSpreadChildMarket",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:54"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:55"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)4068": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)4196": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)3822": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)2985_storage)": {
            "label": "mapping(bytes32 => struct IGamesOddsObtainer.GameOdds)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(GameOdds)2985_storage": {
            "label": "struct IGamesOddsObtainer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadHome",
                "type": "t_int16"
              },
              {
                "label": "spreadHomeOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadAway",
                "type": "t_int16"
              },
              {
                "label": "spreadAwayOdds",
                "type": "t_int24"
              },
              {
                "label": "totalOver",
                "type": "t_uint24"
              },
              {
                "label": "totalOverOdds",
                "type": "t_int24"
              },
              {
                "label": "totalUnder",
                "type": "t_uint24"
              },
              {
                "label": "totalUnderOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_int24": {
            "label": "int24"
          },
          "t_int16": {
            "label": "int16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_int16,t_address))": {
            "label": "mapping(address => mapping(int16 => address))"
          },
          "t_mapping(t_int16,t_address)": {
            "label": "mapping(int16 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint24,t_address))": {
            "label": "mapping(address => mapping(uint24 => address))"
          },
          "t_mapping(t_uint24,t_address)": {
            "label": "mapping(uint24 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_int16)": {
            "label": "mapping(address => int16)"
          },
          "t_mapping(t_address,t_uint24)": {
            "label": "mapping(address => uint24)"
          }
        }
      }
    },
    "59e5bb058ec0783a5aa4e4c935510a4af0e3b31bc88bd3ff47c42ab5eb353b57": {
      "address": "0xfBE30C5fc25538A3005B5292c31FbAe180EE862b",
      "txHash": "0x15a1e62ddb5644f2ff0d4b2305186f08133b4de1ffcfbde7e0323e5ad046aec2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)4067",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:32"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)4195",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:33"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)3821",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:34"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)2984_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:37"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)2984_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:38"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:39"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:40"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:41"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "doesSportSupportSpreadAndTotal",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:42"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:45"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:46"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketSpreadChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_int16,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:47"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketTotalChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_uint24,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:48"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:49"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketSread",
            "type": "t_mapping(t_address,t_int16)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:50"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketTotal",
            "type": "t_mapping(t_address,t_uint24)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:51"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveTotalChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:52"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveSpreadChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:53"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "isSpreadChildMarket",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:54"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:55"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)4067": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)4195": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)3821": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)2984_storage)": {
            "label": "mapping(bytes32 => struct IGamesOddsObtainer.GameOdds)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(GameOdds)2984_storage": {
            "label": "struct IGamesOddsObtainer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadHome",
                "type": "t_int16"
              },
              {
                "label": "spreadHomeOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadAway",
                "type": "t_int16"
              },
              {
                "label": "spreadAwayOdds",
                "type": "t_int24"
              },
              {
                "label": "totalOver",
                "type": "t_uint24"
              },
              {
                "label": "totalOverOdds",
                "type": "t_int24"
              },
              {
                "label": "totalUnder",
                "type": "t_uint24"
              },
              {
                "label": "totalUnderOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_int24": {
            "label": "int24"
          },
          "t_int16": {
            "label": "int16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_int16,t_address))": {
            "label": "mapping(address => mapping(int16 => address))"
          },
          "t_mapping(t_int16,t_address)": {
            "label": "mapping(int16 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint24,t_address))": {
            "label": "mapping(address => mapping(uint24 => address))"
          },
          "t_mapping(t_uint24,t_address)": {
            "label": "mapping(uint24 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_int16)": {
            "label": "mapping(address => int16)"
          },
          "t_mapping(t_address,t_uint24)": {
            "label": "mapping(address => uint24)"
          }
        }
      }
    },
    "7d2a30c553c771c610066fa805023d330008486b1de0b0771538faebca4a33fc": {
      "address": "0x6902BE6b5dDA7c13fbEf66610315Bcc19cf9C2c3",
      "txHash": "0x0156a28cd1223cecc3e3f978094e7429ca570da42e0abcc2103830657fea4f6e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)4075",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:32"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)4203",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:33"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)3829",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:34"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)2992_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:37"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)2992_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:38"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:39"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:40"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:41"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "doesSportSupportSpreadAndTotal",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:42"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:45"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:46"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketSpreadChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_int16,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:47"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketTotalChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_uint24,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:48"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:49"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketSread",
            "type": "t_mapping(t_address,t_int16)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:50"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketTotal",
            "type": "t_mapping(t_address,t_uint24)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:51"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveTotalChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:52"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveSpreadChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:53"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "isSpreadChildMarket",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:54"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:55"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)4075": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)4203": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)3829": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)2992_storage)": {
            "label": "mapping(bytes32 => struct IGamesOddsObtainer.GameOdds)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(GameOdds)2992_storage": {
            "label": "struct IGamesOddsObtainer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadHome",
                "type": "t_int16"
              },
              {
                "label": "spreadHomeOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadAway",
                "type": "t_int16"
              },
              {
                "label": "spreadAwayOdds",
                "type": "t_int24"
              },
              {
                "label": "totalOver",
                "type": "t_uint24"
              },
              {
                "label": "totalOverOdds",
                "type": "t_int24"
              },
              {
                "label": "totalUnder",
                "type": "t_uint24"
              },
              {
                "label": "totalUnderOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_int24": {
            "label": "int24"
          },
          "t_int16": {
            "label": "int16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_int16,t_address))": {
            "label": "mapping(address => mapping(int16 => address))"
          },
          "t_mapping(t_int16,t_address)": {
            "label": "mapping(int16 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint24,t_address))": {
            "label": "mapping(address => mapping(uint24 => address))"
          },
          "t_mapping(t_uint24,t_address)": {
            "label": "mapping(uint24 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_int16)": {
            "label": "mapping(address => int16)"
          },
          "t_mapping(t_address,t_uint24)": {
            "label": "mapping(address => uint24)"
          }
        }
      }
    },
    "0c0c06e84d28ff1e22ed2e51c2a1aa703e32facf45b22f0a5cf388e59a853073": {
      "address": "0xFEf74DA63E03838dB5581cFdCe3091915932975e",
      "txHash": "0xec619e20b8e0ff2962db7bd6444759123bdeb7a36b5f55d3c6830449c562fa5b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)4083",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:32"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)4211",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:33"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)3837",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:34"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)3000_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:37"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)3000_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:38"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:39"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:40"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:41"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "doesSportSupportSpreadAndTotal",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:42"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:45"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:46"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketSpreadChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_int16,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:47"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketTotalChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_uint24,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:48"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:49"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketSread",
            "type": "t_mapping(t_address,t_int16)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:50"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketTotal",
            "type": "t_mapping(t_address,t_uint24)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:51"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveTotalChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:52"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveSpreadChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:53"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "isSpreadChildMarket",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:54"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:55"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)4083": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)4211": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)3837": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)3000_storage)": {
            "label": "mapping(bytes32 => struct IGamesOddsObtainer.GameOdds)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(GameOdds)3000_storage": {
            "label": "struct IGamesOddsObtainer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadHome",
                "type": "t_int16"
              },
              {
                "label": "spreadHomeOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadAway",
                "type": "t_int16"
              },
              {
                "label": "spreadAwayOdds",
                "type": "t_int24"
              },
              {
                "label": "totalOver",
                "type": "t_uint24"
              },
              {
                "label": "totalOverOdds",
                "type": "t_int24"
              },
              {
                "label": "totalUnder",
                "type": "t_uint24"
              },
              {
                "label": "totalUnderOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_int24": {
            "label": "int24"
          },
          "t_int16": {
            "label": "int16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_int16,t_address))": {
            "label": "mapping(address => mapping(int16 => address))"
          },
          "t_mapping(t_int16,t_address)": {
            "label": "mapping(int16 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint24,t_address))": {
            "label": "mapping(address => mapping(uint24 => address))"
          },
          "t_mapping(t_uint24,t_address)": {
            "label": "mapping(uint24 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_int16)": {
            "label": "mapping(address => int16)"
          },
          "t_mapping(t_address,t_uint24)": {
            "label": "mapping(address => uint24)"
          }
        }
      }
    },
    "0caf901dee84bd505904082e35304d815a41113b579d650c79dde14f48189bd8": {
      "address": "0x5a79299982F0Eb60535b1275c10962C5161701CA",
      "txHash": "0x37549931bbb9ed7f31ddc4a026fad68716d0965d52e65e1901e3f545d5fa0478",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)4117",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:32"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)4245",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:33"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)3871",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:34"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)3034_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:37"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)3034_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:38"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:39"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:40"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:41"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "doesSportSupportSpreadAndTotal",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:42"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:45"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:46"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketSpreadChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_int16,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:47"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketTotalChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_uint24,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:48"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:49"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketSread",
            "type": "t_mapping(t_address,t_int16)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:50"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketTotal",
            "type": "t_mapping(t_address,t_uint24)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:51"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveTotalChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:52"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveSpreadChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:53"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "isSpreadChildMarket",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:54"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:55"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)4117": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)4245": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)3871": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)3034_storage)": {
            "label": "mapping(bytes32 => struct IGamesOddsObtainer.GameOdds)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(GameOdds)3034_storage": {
            "label": "struct IGamesOddsObtainer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadHome",
                "type": "t_int16"
              },
              {
                "label": "spreadHomeOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadAway",
                "type": "t_int16"
              },
              {
                "label": "spreadAwayOdds",
                "type": "t_int24"
              },
              {
                "label": "totalOver",
                "type": "t_uint24"
              },
              {
                "label": "totalOverOdds",
                "type": "t_int24"
              },
              {
                "label": "totalUnder",
                "type": "t_uint24"
              },
              {
                "label": "totalUnderOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_int24": {
            "label": "int24"
          },
          "t_int16": {
            "label": "int16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_int16,t_address))": {
            "label": "mapping(address => mapping(int16 => address))"
          },
          "t_mapping(t_int16,t_address)": {
            "label": "mapping(int16 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint24,t_address))": {
            "label": "mapping(address => mapping(uint24 => address))"
          },
          "t_mapping(t_uint24,t_address)": {
            "label": "mapping(uint24 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_int16)": {
            "label": "mapping(address => int16)"
          },
          "t_mapping(t_address,t_uint24)": {
            "label": "mapping(address => uint24)"
          }
        }
      }
    },
    "ee5ad28b64f16cb394e5432d640d007d8c9e5811125af3e1ff8dd5a93da2f8df": {
      "address": "0xB019CB0C09165a96f221427ad027b8946199d976",
      "txHash": "0xc09ef97f8230beb1216d9ade9f476efa64a1c1a5d0f40945a18ec7844fdeebf9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)4116",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:32"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)4244",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:33"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)3870",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:34"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)3033_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:37"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)3033_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:38"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:39"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:40"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:41"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "doesSportSupportSpreadAndTotal",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:42"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:45"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:46"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketSpreadChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_int16,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:47"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketTotalChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_uint24,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:48"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:49"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketSread",
            "type": "t_mapping(t_address,t_int16)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:50"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketTotal",
            "type": "t_mapping(t_address,t_uint24)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:51"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveTotalChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:52"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveSpreadChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:53"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "isSpreadChildMarket",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:54"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:55"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)4116": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)4244": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)3870": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)3033_storage)": {
            "label": "mapping(bytes32 => struct IGamesOddsObtainer.GameOdds)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(GameOdds)3033_storage": {
            "label": "struct IGamesOddsObtainer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadHome",
                "type": "t_int16"
              },
              {
                "label": "spreadHomeOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadAway",
                "type": "t_int16"
              },
              {
                "label": "spreadAwayOdds",
                "type": "t_int24"
              },
              {
                "label": "totalOver",
                "type": "t_uint24"
              },
              {
                "label": "totalOverOdds",
                "type": "t_int24"
              },
              {
                "label": "totalUnder",
                "type": "t_uint24"
              },
              {
                "label": "totalUnderOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_int24": {
            "label": "int24"
          },
          "t_int16": {
            "label": "int16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_int16,t_address))": {
            "label": "mapping(address => mapping(int16 => address))"
          },
          "t_mapping(t_int16,t_address)": {
            "label": "mapping(int16 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint24,t_address))": {
            "label": "mapping(address => mapping(uint24 => address))"
          },
          "t_mapping(t_uint24,t_address)": {
            "label": "mapping(uint24 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_int16)": {
            "label": "mapping(address => int16)"
          },
          "t_mapping(t_address,t_uint24)": {
            "label": "mapping(address => uint24)"
          }
        }
      }
    },
    "096bb56f6c8ffc0c119c8ffc646340de3be3429909d96768fe2bd3f968dceef6": {
      "address": "0x00ce37B8770B5EB2Fe46BeE15045F734915cAD2e",
      "txHash": "0xa5fe23c6b408b964a15978d8077435b5d6ea3865417512bef43aa1930db9728b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)4034",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:32"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)4162",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:33"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)3788",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:34"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)2951_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:37"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)2951_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:38"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:39"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:40"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:41"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "doesSportSupportSpreadAndTotal",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:42"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:45"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:46"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketSpreadChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_int16,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:47"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketTotalChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_uint24,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:48"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:49"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketSread",
            "type": "t_mapping(t_address,t_int16)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:50"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketTotal",
            "type": "t_mapping(t_address,t_uint24)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:51"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveTotalChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:52"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveSpreadChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:53"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "isSpreadChildMarket",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:54"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:55"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)4034": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)4162": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)3788": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)2951_storage)": {
            "label": "mapping(bytes32 => struct IGamesOddsObtainer.GameOdds)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(GameOdds)2951_storage": {
            "label": "struct IGamesOddsObtainer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadHome",
                "type": "t_int16"
              },
              {
                "label": "spreadHomeOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadAway",
                "type": "t_int16"
              },
              {
                "label": "spreadAwayOdds",
                "type": "t_int24"
              },
              {
                "label": "totalOver",
                "type": "t_uint24"
              },
              {
                "label": "totalOverOdds",
                "type": "t_int24"
              },
              {
                "label": "totalUnder",
                "type": "t_uint24"
              },
              {
                "label": "totalUnderOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_int24": {
            "label": "int24"
          },
          "t_int16": {
            "label": "int16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_int16,t_address))": {
            "label": "mapping(address => mapping(int16 => address))"
          },
          "t_mapping(t_int16,t_address)": {
            "label": "mapping(int16 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint24,t_address))": {
            "label": "mapping(address => mapping(uint24 => address))"
          },
          "t_mapping(t_uint24,t_address)": {
            "label": "mapping(uint24 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_int16)": {
            "label": "mapping(address => int16)"
          },
          "t_mapping(t_address,t_uint24)": {
            "label": "mapping(address => uint24)"
          }
        }
      }
    },
    "e1a7b400741019f3c50fce110b6fd594bb2df76e216e7e00f4b537b9580dce7e": {
      "address": "0x4a7046CC70884a8e5D8f6774E8830aa8fDEaC33a",
      "txHash": "0x0bcc4014717d2d9efe85b5148266bde589a23f71cc41120226f4c172d8be9710",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)53219",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:38"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)53108",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:39"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6137",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)53289",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)52126",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:62"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)58000_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)35463",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:70"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:71"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerGameCombination",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:74"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)53219": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)53108": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)6137": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)53289": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)52126": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)58000_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)35463": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => uint256))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          }
        }
      }
    },
    "6a9b1604ec5a90a83e577c1cf6ffee4736cdbb74842563ed9960338e1cc6a8a1": {
      "address": "0x56ce3546436AB45E7fD259841a1A7082a05e715C",
      "txHash": "0xe906c33aebfd44c70cd8222782452ba3c6dece5f51b5983a6ecb3ad8e58897c4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)4048",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:32"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)4176",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:33"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)3802",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:34"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)2965_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:37"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)2965_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:38"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:39"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:40"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:41"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "doesSportSupportSpreadAndTotal",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:42"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:45"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:46"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketSpreadChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_int16,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:47"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketTotalChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_uint24,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:48"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:49"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketSread",
            "type": "t_mapping(t_address,t_int16)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:50"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketTotal",
            "type": "t_mapping(t_address,t_uint24)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:51"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveTotalChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:52"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveSpreadChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:53"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "isSpreadChildMarket",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:54"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:55"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)4048": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)4176": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)3802": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)2965_storage)": {
            "label": "mapping(bytes32 => struct IGamesOddsObtainer.GameOdds)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(GameOdds)2965_storage": {
            "label": "struct IGamesOddsObtainer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadHome",
                "type": "t_int16"
              },
              {
                "label": "spreadHomeOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadAway",
                "type": "t_int16"
              },
              {
                "label": "spreadAwayOdds",
                "type": "t_int24"
              },
              {
                "label": "totalOver",
                "type": "t_uint24"
              },
              {
                "label": "totalOverOdds",
                "type": "t_int24"
              },
              {
                "label": "totalUnder",
                "type": "t_uint24"
              },
              {
                "label": "totalUnderOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_int24": {
            "label": "int24"
          },
          "t_int16": {
            "label": "int16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_int16,t_address))": {
            "label": "mapping(address => mapping(int16 => address))"
          },
          "t_mapping(t_int16,t_address)": {
            "label": "mapping(int16 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint24,t_address))": {
            "label": "mapping(address => mapping(uint24 => address))"
          },
          "t_mapping(t_uint24,t_address)": {
            "label": "mapping(uint24 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_int16)": {
            "label": "mapping(address => int16)"
          },
          "t_mapping(t_address,t_uint24)": {
            "label": "mapping(address => uint24)"
          }
        }
      }
    },
    "c071c250ddc17a4f620ece2c4a911d1b5f375e626dfe30ba3bcbeb39cda17dcb": {
      "address": "0x52d2B4EF84bFB2Aa8b2Bf99B59BD5f714d87Ddd3",
      "txHash": "0xba6dd836779745ff4af9cef8cb0cec0ee3e0de4a02b18eee67405cebde805bf6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)54153",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:38"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)53974",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:39"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6764",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)54223",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)52740",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:62"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)59019_storage",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)32823",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:70"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:71"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerGameCombination",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:74"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)54153": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)53974": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)6764": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)54223": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)52740": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)59019_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)32823": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => uint256))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          }
        }
      }
    },
    "7668be27a150376bdf21ddaeeb8853e6aa7538eaf2bc38032cdd7923ba28066c": {
      "address": "0x86089DAaB2444560Fd774307B5D0D854d7e9279d",
      "txHash": "0xb94496a0c9ecdd9834d809d9cdb226d88158917b9059518e8cbde130694484c3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)54627",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:32"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)54755",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:33"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)53916",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:34"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)52809_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:37"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)52809_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:38"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:39"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:40"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:41"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "doesSportSupportSpreadAndTotal",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:42"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:45"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:46"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketSpreadChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_int16,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:47"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketTotalChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_uint24,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:48"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:49"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketSread",
            "type": "t_mapping(t_address,t_int16)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:50"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketTotal",
            "type": "t_mapping(t_address,t_uint24)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:51"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveTotalChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:52"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveSpreadChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:53"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "isSpreadChildMarket",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:54"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:55"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)54627": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)54755": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)53916": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)52809_storage)": {
            "label": "mapping(bytes32 => struct IGamesOddsObtainer.GameOdds)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(GameOdds)52809_storage": {
            "label": "struct IGamesOddsObtainer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadHome",
                "type": "t_int16"
              },
              {
                "label": "spreadHomeOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadAway",
                "type": "t_int16"
              },
              {
                "label": "spreadAwayOdds",
                "type": "t_int24"
              },
              {
                "label": "totalOver",
                "type": "t_uint24"
              },
              {
                "label": "totalOverOdds",
                "type": "t_int24"
              },
              {
                "label": "totalUnder",
                "type": "t_uint24"
              },
              {
                "label": "totalUnderOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_int24": {
            "label": "int24"
          },
          "t_int16": {
            "label": "int16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_int16,t_address))": {
            "label": "mapping(address => mapping(int16 => address))"
          },
          "t_mapping(t_int16,t_address)": {
            "label": "mapping(int16 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint24,t_address))": {
            "label": "mapping(address => mapping(uint24 => address))"
          },
          "t_mapping(t_uint24,t_address)": {
            "label": "mapping(uint24 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_int16)": {
            "label": "mapping(address => int16)"
          },
          "t_mapping(t_address,t_uint24)": {
            "label": "mapping(address => uint24)"
          }
        }
      }
    },
    "ce7ba7e329c8636b5a94d87f3c1510beaa50cdcf64d2061ed081888ab9ae64ef": {
      "address": "0x9c97c9c261a7E292cE70f3242247C50925469c3c",
      "txHash": "0xfd65e070117387ef12ab37a64b8f8518f5bd1842a0eaf57ae85849afb84079d8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)3236",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:26"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "invalidName",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:27"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "supportedMarketType",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:28"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultOddsThreshold",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:29"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "oddsThresholdForSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:30"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultBookmakerIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:32"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "sportIdToBookmakerIds",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:33"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "obtainer",
            "type": "t_contract(IGamesOddsObtainer)2333",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:34"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)2990",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:35"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)3236": {
            "label": "contract ITherundownConsumer"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_contract(IGamesOddsObtainer)2333": {
            "label": "contract IGamesOddsObtainer"
          },
          "t_contract(ISportPositionalMarketManager)2990": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "ef210aa518fcb1b0f02bb4f61974f319c4ceae70e3b01a310f8c35d7448bff6a": {
      "address": "0xb69e8E5A31AD3D4740b82d10DBEDab495FA02E1d",
      "txHash": "0x2f2368c7fcda0e24b1e6675696ddb704e27dd2989c541bda3751b79caf47864d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)59439",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:26"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "invalidName",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:27"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "supportedMarketType",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:28"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultOddsThreshold",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:29"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "oddsThresholdForSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:30"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultBookmakerIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:32"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "sportIdToBookmakerIds",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:33"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "obtainer",
            "type": "t_contract(IGamesOddsObtainer)57806",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:34"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)58733",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:35"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:36"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)59439": {
            "label": "contract ITherundownConsumer"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_contract(IGamesOddsObtainer)57806": {
            "label": "contract IGamesOddsObtainer"
          },
          "t_contract(ISportPositionalMarketManager)58733": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "1e21fa4fdfddc9c1c4eec5d9394b774889f006b1ba192a143cc452cacdaa937e": {
      "address": "0x9a60092B3c4Bc2BAA2841F4d995Ab60fE5E12893",
      "txHash": "0x864cefbed733834972cb0e5dcb634b622739cde9fdb9cee309d31636f41537af",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:58"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:59"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:62"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:63"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:64"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)35555_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:67"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)35566_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:68"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)35575_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:69"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:70"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:71"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:72"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:75"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:76"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:77"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:78"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)53467",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:81"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:82"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:83"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:84"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:85"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)35508",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:88"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:89"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:90"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:94"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:95"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:96"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOnADate",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:97"
          },
          {
            "contract": "TherundownConsumer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)54238",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:99"
          },
          {
            "contract": "TherundownConsumer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)35575_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:100"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsObtainer",
            "type": "t_contract(IGamesOddsObtainer)52569",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:101"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)35555_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)35555_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)35566_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)35566_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)35575_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)35575_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)53467": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)35508": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          },
          "t_contract(ITherundownConsumerVerifier)54238": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(IGamesOddsObtainer)52569": {
            "label": "contract IGamesOddsObtainer"
          }
        }
      }
    },
    "8246f7f02dcd322c128e0d374b3ec87b9cd15ae8027d0ca401dece487a9c4d2e": {
      "address": "0xbf19E6eCaF76758461da88096995AcBac34c4d68",
      "txHash": "0xc0d4e0aff5cae682faa5b743d203936d1e8db31c62c71e86a1447322a1a66a2c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:58"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:59"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:62"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:63"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:64"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)35555_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:67"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)35566_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:68"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)35575_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:69"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:70"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:71"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:72"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:75"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:76"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:77"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:78"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)53178",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:81"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:82"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:83"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:84"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:85"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)35508",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:88"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:89"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:90"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:94"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:95"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:96"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOnADate",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:97"
          },
          {
            "contract": "TherundownConsumer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)53949",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:99"
          },
          {
            "contract": "TherundownConsumer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)35575_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:100"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsObtainer",
            "type": "t_contract(IGamesOddsObtainer)52280",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:101"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)35555_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)35555_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)35566_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)35566_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)35575_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)35575_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)53178": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)35508": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          },
          "t_contract(ITherundownConsumerVerifier)53949": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(IGamesOddsObtainer)52280": {
            "label": "contract IGamesOddsObtainer"
          }
        }
      }
    },
    "2af7cfc4acf754b53ec029ba705c15408c3bd0a48c4101759b3f8bd8e185c3d4": {
      "address": "0x7Ed513fCFb4642753bD781d6AC3B87F37b879a48",
      "txHash": "0xc98e22a06a3e89ae5375fc6c2cb8636293260af422adedb625f61e34195ff995",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:59"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:60"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:63"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:64"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:65"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)40998_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:68"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)41009_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:69"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)41018_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:70"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:71"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:72"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:73"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:76"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:77"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:78"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:79"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)61931",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:82"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:83"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:84"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:85"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:86"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)40950",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:89"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:90"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:94"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:95"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:96"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:97"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOnADate",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:98"
          },
          {
            "contract": "TherundownConsumer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)62780",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:100"
          },
          {
            "contract": "TherundownConsumer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)41018_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:101"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsObtainer",
            "type": "t_contract(IGamesOddsObtainer)61004",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:102"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)40998_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)40998_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)41009_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)41009_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)41018_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)41018_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)61931": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)40950": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          },
          "t_contract(ITherundownConsumerVerifier)62780": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(IGamesOddsObtainer)61004": {
            "label": "contract IGamesOddsObtainer"
          }
        }
      }
    },
    "4aa60957a3b18a799ee7b427200c12ec14f05979cdc575f94fb6e10779ce243f": {
      "address": "0x79EddB9AbE18D406587AF0e59408607fb06caB19",
      "txHash": "0x997b0c7db0d54ef13800e6e2b768410cf7d1a5d3e6918d4734bbf716de46d65b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)54134",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:38"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)53955",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:39"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6764",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)54204",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)52721",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:62"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)59000_storage",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)32804",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:70"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:71"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerGameCombination",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:74"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)54134": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)53955": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)6764": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)54204": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)52721": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)59000_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)32804": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => uint256))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          }
        }
      }
    },
    "ff3a3e537c359978936dfb11f13fe874a0959499b11994e1a1daac70819d40fd": {
      "address": "0x05ca121f03c0ef3dBa6C1838a7A89d7A94417C1A",
      "txHash": "0x3fdc1243e2b388155929aa611e19deeb7d02b689ee6827a741ba051d2a027431",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)54127",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:38"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)53948",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:39"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6764",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)54197",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)52714",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:62"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)58993_storage",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)32797",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:70"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:71"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerGameCombination",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:74"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)54127": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)53948": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)6764": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)54197": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)52714": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)58993_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)32797": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => uint256))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          }
        }
      }
    },
    "a2b069d40290c47e991e28dda99e664194301a65b6e44e5a99ecc142525a1ec2": {
      "address": "0xE81A18dCC7fa7549287F757CFBe36958e7157bc4",
      "txHash": "0xbc8ed262198124da466268fb3ed8337b9c442b17d91c7d6333ea57fdb82d4d08",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)12923",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:38"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)12744",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:39"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)1233",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)12993",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)11663",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:62"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)13249_storage",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)6980",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:70"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:71"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerGameCombination",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:74"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)12923": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)12744": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)1233": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)12993": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)11663": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)13249_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)6980": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => uint256))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          }
        }
      }
    },
    "77157e34f606d63a6683f56870f807e2ef8595c15e08ed4979fcf00e2c39efff": {
      "address": "0x11b14A8E88e76F13E0bB64645306a957A07F288A",
      "txHash": "0x5404740ffff57159e815c78e79dddb56ef8c624246336f903965a705a1aaef00",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)54133",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:38"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)53954",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:39"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6764",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)54203",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)52720",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:62"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)58999_storage",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)32803",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:70"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:71"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerGameCombination",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:74"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)54133": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)53954": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)6764": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)54203": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)52720": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)58999_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)32803": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => uint256))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          }
        }
      }
    },
    "587793ce6084fa4b476cef3b00be94eabf4780a283e32ffdc8cada1795a1f238": {
      "address": "0xae23B3b4f13760d7aEc5eb6c847ee043B50792B9",
      "txHash": "0x9b54d167cdf95058317c8ab7b527cbb177dac08336f0944800afc8b0690339c4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyPausable.sol:12"
          },
          {
            "contract": "StakingThales",
            "label": "iEscrowThales",
            "type": "t_contract(IEscrowThales)16222",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:30"
          },
          {
            "contract": "StakingThales",
            "label": "stakingToken",
            "type": "t_contract(IERC20)19617",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:31"
          },
          {
            "contract": "StakingThales",
            "label": "feeToken",
            "type": "t_contract(IERC20)19617",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:32"
          },
          {
            "contract": "StakingThales",
            "label": "SNXRewards",
            "type": "t_contract(ISNXRewards)16609",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:33"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRoyale",
            "type": "t_contract(IThalesRoyale)16764",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:34"
          },
          {
            "contract": "StakingThales",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)16547",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:35"
          },
          {
            "contract": "StakingThales",
            "label": "periodsOfStaking",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:37"
          },
          {
            "contract": "StakingThales",
            "label": "lastPeriodTimeStamp",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:38"
          },
          {
            "contract": "StakingThales",
            "label": "durationPeriod",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:39"
          },
          {
            "contract": "StakingThales",
            "label": "unstakeDurationPeriod",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:40"
          },
          {
            "contract": "StakingThales",
            "label": "startTimeStamp",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:41"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodRewards",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:42"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodFees",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:43"
          },
          {
            "contract": "StakingThales",
            "label": "distributeFeesEnabled",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:44"
          },
          {
            "contract": "StakingThales",
            "label": "fixedPeriodReward",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:45"
          },
          {
            "contract": "StakingThales",
            "label": "periodExtraReward",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:46"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXRewardsInPeriod",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:47"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXFeesInPeriod",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:48"
          },
          {
            "contract": "StakingThales",
            "label": "claimEnabled",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:49"
          },
          {
            "contract": "StakingThales",
            "label": "stakerLifetimeRewardsClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:51"
          },
          {
            "contract": "StakingThales",
            "label": "stakerFeesClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:52"
          },
          {
            "contract": "StakingThales",
            "label": "_totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:54"
          },
          {
            "contract": "StakingThales",
            "label": "_totalEscrowedAmount",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:55"
          },
          {
            "contract": "StakingThales",
            "label": "_totalPendingStakeAmount",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:56"
          },
          {
            "contract": "StakingThales",
            "label": "_totalUnclaimedRewards",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:57"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardsClaimed",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:58"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardFeesClaimed",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:59"
          },
          {
            "contract": "StakingThales",
            "label": "lastUnstakeTime",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:61"
          },
          {
            "contract": "StakingThales",
            "label": "unstaking",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:62"
          },
          {
            "contract": "StakingThales",
            "label": "unstakingAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:63"
          },
          {
            "contract": "StakingThales",
            "label": "_stakedBalances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:64"
          },
          {
            "contract": "StakingThales",
            "label": "_lastRewardsClaimedPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:65"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:66"
          },
          {
            "contract": "StakingThales",
            "label": "lastAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:75"
          },
          {
            "contract": "StakingThales",
            "label": "stakerAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)12782_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:76"
          },
          {
            "contract": "StakingThales",
            "label": "extraRewardsActive",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:78"
          },
          {
            "contract": "StakingThales",
            "label": "ThalesStakingRewardsPool",
            "type": "t_contract(IThalesStakingRewardsPool)16774",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:79"
          },
          {
            "contract": "StakingThales",
            "label": "maxSNXRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:81"
          },
          {
            "contract": "StakingThales",
            "label": "maxAMMVolumeRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:82"
          },
          {
            "contract": "StakingThales",
            "label": "AMMVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:83"
          },
          {
            "contract": "StakingThales",
            "label": "maxThalesRoyaleRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:84"
          },
          {
            "contract": "StakingThales",
            "label": "SNXVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:89"
          },
          {
            "contract": "StakingThales",
            "label": "_lastStakingPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:91"
          },
          {
            "contract": "StakingThales",
            "label": "totalStakedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:93"
          },
          {
            "contract": "StakingThales",
            "label": "totalEscrowedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:94"
          },
          {
            "contract": "StakingThales",
            "label": "exoticBonds",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:95"
          },
          {
            "contract": "StakingThales",
            "label": "addressResolver",
            "type": "t_contract(IAddressResolver)16102",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:97"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMM",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:99"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:100"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:102"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)12782_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:103"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesRangedAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:104"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)12782_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:105"
          },
          {
            "contract": "StakingThales",
            "label": "lastExoticMarketsUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:106"
          },
          {
            "contract": "StakingThales",
            "label": "exoticMarketsVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)12782_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:107"
          },
          {
            "contract": "StakingThales",
            "label": "lastSportsAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:108"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)12782_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:109"
          },
          {
            "contract": "StakingThales",
            "label": "canClaimOnBehalf",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:111"
          },
          {
            "contract": "StakingThales",
            "label": "mergeAccountEnabled",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:113"
          },
          {
            "contract": "StakingThales",
            "label": "delegatedVolume",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:115"
          },
          {
            "contract": "StakingThales",
            "label": "supportedSportVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:116"
          },
          {
            "contract": "StakingThales",
            "label": "supportedAMMVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:117"
          }
        ],
        "types": {
          "t_contract(IEscrowThales)16222": {
            "label": "contract IEscrowThales"
          },
          "t_contract(IERC20)19617": {
            "label": "contract IERC20"
          },
          "t_contract(ISNXRewards)16609": {
            "label": "contract ISNXRewards"
          },
          "t_contract(IThalesRoyale)16764": {
            "label": "contract IThalesRoyale"
          },
          "t_contract(IPriceFeed)16547": {
            "label": "contract IPriceFeed"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)12782_storage)4_storage)": {
            "label": "mapping(address => struct StakingThales.AMMVolumeEntry[4])"
          },
          "t_array(t_struct(AMMVolumeEntry)12782_storage)4_storage": {
            "label": "struct StakingThales.AMMVolumeEntry[4]"
          },
          "t_struct(AMMVolumeEntry)12782_storage": {
            "label": "struct StakingThales.AMMVolumeEntry",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "period",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IThalesStakingRewardsPool)16774": {
            "label": "contract IThalesStakingRewardsPool"
          },
          "t_contract(IAddressResolver)16102": {
            "label": "contract IAddressResolver"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6d8ea645aff86dddf3e4ca50ffff77925210ad9294127dbeb76dfe0485408bd7": {
      "address": "0xE001acBb95fb6340b791279546b49f36c57f1f55",
      "txHash": "0x8d49000ad82f6e2565a5a1958733b97b43025b913fc900ac8207bbe960f01255",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketData.sol:25"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketData.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "906f4102ba51434d99b6b25262980fdc3e99147d8dcb16635579d3bc52a4eae8": {
      "address": "0x34C650bE67000b7D64a98203A9e7B109AB75b5C1",
      "txHash": "0xde9eb14744a01b0718d7a999d841e1b3f7c55714d8a7332a6ab2856278965f8f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketData.sol:25"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketData.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d8f322892c3ebc3bb78f8351f4d661d0f9f1cae83a2e47fbf0ee76f0a909daff": {
      "address": "0xfe989c819411DEbd88fD9B88846A206C7538583c",
      "txHash": "0xc61f08f2e41a1451d3353c8a1264ff137038d596a708a0b323353e42798f9593",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "PositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:73"
          },
          {
            "contract": "PositionalMarketData",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:74"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "327b16053ed3c879dee07aa49fe425c2a5fc6c247d86032c128f2f9567a298a7": {
      "address": "0x490FAF0eBF0Edf6774146d331cbE29791837f4fC",
      "txHash": "0x67da65c93cb2db1782fda81b0929b93175f93c94dc55e52cca821e1cc78a94c7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "PositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:80"
          },
          {
            "contract": "PositionalMarketData",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:81"
          },
          {
            "contract": "PositionalMarketData",
            "label": "rangedMarketsAMM",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:82"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0c40ea4b7f613a349a2375fc4de91706d8b4a65da086a59f7573a7cb83826166": {
      "address": "0xCdAf7696e371281dd62159Df9339b5635c63e944",
      "txHash": "0xf9247ee62efd60e35af7466de3f1e466a539127f27efd4f5653bb30a2624e941",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "PositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:85"
          },
          {
            "contract": "PositionalMarketData",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:86"
          },
          {
            "contract": "PositionalMarketData",
            "label": "rangedMarketsAMM",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:87"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8bc5cc593eb7e478aa0b1ea9c57f68ddee2f7a70354e12b2ea2872aed2ff907d": {
      "address": "0x28658A90605116170E5d981B9C73EDB63aE54e2D",
      "txHash": "0xec9479e1d16b9af3894ad86c37fd59fa3f1c66bcbbb8744c54f24cb700b5107d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "PositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:85"
          },
          {
            "contract": "PositionalMarketData",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:86"
          },
          {
            "contract": "PositionalMarketData",
            "label": "rangedMarketsAMM",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:87"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ea448fa44950f145180f00107de2a7d6912080577176ee3591db8ee4ace41a2b": {
      "address": "0x4d205a3f286D562880330113D6F67A571Ec29eBc",
      "txHash": "0x0edebfd680bc6b7fbc08a28dde7f475d120eb0d19f8d3a4db351447d8a592235",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:25"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f13df3926bf4bcf00757a5ffbef4965bc363dcab01dcdf72e1283cf3b0494ec9": {
      "address": "0xa01AD492B19314bEfBcE4891B927A030d660ffA5",
      "txHash": "0x4f43b7e585588eaabcaf5d601fe70086003cd902ca71349ebb7976cb2c994fa0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6137",
            "src": "contracts/SportMarkets/SportsAMM.sol:37"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:40"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:44"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:47"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:50"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:54"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:63"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:66"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:69"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:72"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)54693",
            "src": "contracts/SportMarkets/SportsAMM.sol:75"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:78"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:81"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)53222",
            "src": "contracts/SportMarkets/SportsAMM.sol:84"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:87"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:90"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:93"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportsAMM.sol:96"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:99"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:102"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:105"
          },
          {
            "contract": "SportsAMM",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:108"
          },
          {
            "contract": "SportsAMM",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:111"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:114"
          },
          {
            "contract": "SportsAMM",
            "label": "sportAmmUtils",
            "type": "t_contract(SportsAMMUtils)50697",
            "src": "contracts/SportMarkets/SportsAMM.sol:116"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:119"
          },
          {
            "contract": "SportsAMM",
            "label": "thresholdForOddsUpdate",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:123"
          },
          {
            "contract": "SportsAMM",
            "label": "wrapper",
            "type": "t_contract(ITherundownConsumerWrapper)55291",
            "src": "contracts/SportMarkets/SportsAMM.sol:126"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:129"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:132"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSportAndChild",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/SportMarkets/SportsAMM.sol:135"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)6137": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)54693": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)53222": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(SportsAMMUtils)50697": {
            "label": "contract SportsAMMUtils"
          },
          "t_contract(ITherundownConsumerWrapper)55291": {
            "label": "contract ITherundownConsumerWrapper"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a2cce57c73efa3103fbe48783280a863df778278945f6f77fa6a7332b6f10264": {
      "address": "0x947cDF2A9dD730376E65e7648C373dbC581D8c19",
      "txHash": "0xe1c35ae77149467953a3cfb1843696b6516bb184da1e291e476f3d2a94fe99d5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:25"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9bea07eafdf5df46fa5fed3d879b9899a736adeb2eee3dc047f4365d1295eba3": {
      "address": "0x1247aB66dE0C4D76D4CBB86E6F86f93c6f8355aa",
      "txHash": "0xc874e80449d785fc4c2a75ee77d77d8747fe1f7cc011d4b2f77e31dc1f4de510",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)62493",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:26"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "invalidName",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:27"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "supportedMarketType",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:28"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultOddsThreshold",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:29"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "oddsThresholdForSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:30"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultBookmakerIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:32"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "sportIdToBookmakerIds",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:33"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "obtainer",
            "type": "t_contract(IGamesOddsObtainer)60845",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:34"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)61772",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:35"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:36"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)62493": {
            "label": "contract ITherundownConsumer"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_contract(IGamesOddsObtainer)60845": {
            "label": "contract IGamesOddsObtainer"
          },
          "t_contract(ISportPositionalMarketManager)61772": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "aadb466e7407efec4fb542ba32b0f5d6a4388935c25bb3a808c6e65a8bcb00c4": {
      "address": "0x8c774afF7aC5353035744CdEee3e885ba63C259F",
      "txHash": "0x371f9c88ece4cba5ad39baa865ed9a7040e4ee98e4811cc958b273d8c5c55cf3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sportsAMM",
            "type": "t_contract(ISportsAMM)3687",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:39"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)470",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:40"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:42"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:44"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:45"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:46"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:48"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:50"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:51"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:53"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:54"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:56"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:58"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:59"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:61"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:62"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:64"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:65"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:66"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:67"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:69"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)3764",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:72"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:74"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:76"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:78"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:80"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)3687": {
            "label": "contract ISportsAMM"
          },
          "t_contract(IERC20Upgradeable)470": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)3764": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d61656b3870f510fa06e86e1b492b5700dafa6260c57f5551be7d1534481ada5": {
      "address": "0x6beA034b352570D1504AF7c0E7F9c25c9877e645",
      "txHash": "0xa0b97f78d2c37bc950066c21b4c2e59edca48d0a3fe37acf48aef43529696feb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:45"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:48"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:52"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:55"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:58"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:62"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:71"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:74"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:77"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:80"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)61177",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:83"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:86"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:89"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)59694",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:92"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:95"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:98"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:101"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:104"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:107"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:110"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:113"
          },
          {
            "contract": "SportsAMM",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:116"
          },
          {
            "contract": "SportsAMM",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:119"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:122"
          },
          {
            "contract": "SportsAMM",
            "label": "sportAmmUtils",
            "type": "t_contract(SportsAMMUtils)56033",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:124"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:127"
          },
          {
            "contract": "SportsAMM",
            "label": "thresholdForOddsUpdate",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:131"
          },
          {
            "contract": "SportsAMM",
            "label": "wrapper",
            "type": "t_contract(ITherundownConsumerWrapper)61775",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:134"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:137"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:140"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSportAndChild",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:143"
          },
          {
            "contract": "SportsAMM",
            "label": "liquidityPool",
            "type": "t_contract(SportAMMLiquidityPool)30337",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:163"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)61177": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)59694": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(SportsAMMUtils)56033": {
            "label": "contract SportsAMMUtils"
          },
          "t_contract(ITherundownConsumerWrapper)61775": {
            "label": "contract ITherundownConsumerWrapper"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(SportAMMLiquidityPool)30337": {
            "label": "contract SportAMMLiquidityPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "65baecbffbace3ce4a07ae5c83e997b62c1feee4253fdb498dfc70917a98f0d3": {
      "address": "0xc33343d3073BCbcF29bBc7b605A5A8172Be698b1",
      "txHash": "0xbcd7e59770bc1192e0381fc54d64be94acb5d0176ce40757f3407131bce7cefc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sportsAMM",
            "type": "t_contract(ISportsAMM)3678",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:39"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)470",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:40"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:42"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:44"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:45"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:46"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:48"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:50"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:51"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:53"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:54"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:56"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:58"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:59"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:61"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:62"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:64"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:65"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:66"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:67"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:69"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)3755",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:72"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:74"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:76"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:78"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:80"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)3678": {
            "label": "contract ISportsAMM"
          },
          "t_contract(IERC20Upgradeable)470": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)3755": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fbd729d512e8bb399f756286a73c2da8dd03ebb5ce6ca9aa9bde111af96f2efc": {
      "address": "0x31D2b97B4bC747294ff744Eb29B32298DC6d4ea0",
      "txHash": "0x9baf8bfe702ace07a10312b7378585ee43445a5a92c557238742c31a4c071e47",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyPausable.sol:12"
          },
          {
            "contract": "StakingThales",
            "label": "iEscrowThales",
            "type": "t_contract(IEscrowThales)6517",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:30"
          },
          {
            "contract": "StakingThales",
            "label": "stakingToken",
            "type": "t_contract(IERC20)9079",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:31"
          },
          {
            "contract": "StakingThales",
            "label": "feeToken",
            "type": "t_contract(IERC20)9079",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:32"
          },
          {
            "contract": "StakingThales",
            "label": "SNXRewards",
            "type": "t_contract(ISNXRewards)6611",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:33"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRoyale",
            "type": "t_contract(IThalesRoyale)6757",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:34"
          },
          {
            "contract": "StakingThales",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)6573",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:35"
          },
          {
            "contract": "StakingThales",
            "label": "periodsOfStaking",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:37"
          },
          {
            "contract": "StakingThales",
            "label": "lastPeriodTimeStamp",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:38"
          },
          {
            "contract": "StakingThales",
            "label": "durationPeriod",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:39"
          },
          {
            "contract": "StakingThales",
            "label": "unstakeDurationPeriod",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:40"
          },
          {
            "contract": "StakingThales",
            "label": "startTimeStamp",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:41"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodRewards",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:42"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodFees",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:43"
          },
          {
            "contract": "StakingThales",
            "label": "distributeFeesEnabled",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:44"
          },
          {
            "contract": "StakingThales",
            "label": "fixedPeriodReward",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:45"
          },
          {
            "contract": "StakingThales",
            "label": "periodExtraReward",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:46"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXRewardsInPeriod",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:47"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXFeesInPeriod",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:48"
          },
          {
            "contract": "StakingThales",
            "label": "claimEnabled",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:49"
          },
          {
            "contract": "StakingThales",
            "label": "stakerLifetimeRewardsClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:51"
          },
          {
            "contract": "StakingThales",
            "label": "stakerFeesClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:52"
          },
          {
            "contract": "StakingThales",
            "label": "_totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:54"
          },
          {
            "contract": "StakingThales",
            "label": "_totalEscrowedAmount",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:55"
          },
          {
            "contract": "StakingThales",
            "label": "_totalPendingStakeAmount",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:56"
          },
          {
            "contract": "StakingThales",
            "label": "_totalUnclaimedRewards",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:57"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardsClaimed",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:58"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardFeesClaimed",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:59"
          },
          {
            "contract": "StakingThales",
            "label": "lastUnstakeTime",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:61"
          },
          {
            "contract": "StakingThales",
            "label": "unstaking",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:62"
          },
          {
            "contract": "StakingThales",
            "label": "unstakingAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:63"
          },
          {
            "contract": "StakingThales",
            "label": "_stakedBalances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:64"
          },
          {
            "contract": "StakingThales",
            "label": "_lastRewardsClaimedPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:65"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:66"
          },
          {
            "contract": "StakingThales",
            "label": "lastAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:75"
          },
          {
            "contract": "StakingThales",
            "label": "stakerAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3104_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:76"
          },
          {
            "contract": "StakingThales",
            "label": "extraRewardsActive",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:78"
          },
          {
            "contract": "StakingThales",
            "label": "ThalesStakingRewardsPool",
            "type": "t_contract(IThalesStakingRewardsPool)6767",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:79"
          },
          {
            "contract": "StakingThales",
            "label": "maxSNXRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:81"
          },
          {
            "contract": "StakingThales",
            "label": "maxAMMVolumeRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:82"
          },
          {
            "contract": "StakingThales",
            "label": "AMMVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:83"
          },
          {
            "contract": "StakingThales",
            "label": "maxThalesRoyaleRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:84"
          },
          {
            "contract": "StakingThales",
            "label": "SNXVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:89"
          },
          {
            "contract": "StakingThales",
            "label": "_lastStakingPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:91"
          },
          {
            "contract": "StakingThales",
            "label": "totalStakedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:93"
          },
          {
            "contract": "StakingThales",
            "label": "totalEscrowedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:94"
          },
          {
            "contract": "StakingThales",
            "label": "exoticBonds",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:95"
          },
          {
            "contract": "StakingThales",
            "label": "addressResolver",
            "type": "t_contract(IAddressResolver)6424",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:97"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMM",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:99"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:100"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:102"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3104_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:103"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesRangedAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:104"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3104_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:105"
          },
          {
            "contract": "StakingThales",
            "label": "lastExoticMarketsUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:106"
          },
          {
            "contract": "StakingThales",
            "label": "exoticMarketsVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3104_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:107"
          },
          {
            "contract": "StakingThales",
            "label": "lastSportsAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:108"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3104_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:109"
          },
          {
            "contract": "StakingThales",
            "label": "canClaimOnBehalf",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:111"
          },
          {
            "contract": "StakingThales",
            "label": "mergeAccountEnabled",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:113"
          },
          {
            "contract": "StakingThales",
            "label": "delegatedVolume",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:115"
          },
          {
            "contract": "StakingThales",
            "label": "supportedSportVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:116"
          },
          {
            "contract": "StakingThales",
            "label": "supportedAMMVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:117"
          }
        ],
        "types": {
          "t_contract(IEscrowThales)6517": {
            "label": "contract IEscrowThales"
          },
          "t_contract(IERC20)9079": {
            "label": "contract IERC20"
          },
          "t_contract(ISNXRewards)6611": {
            "label": "contract ISNXRewards"
          },
          "t_contract(IThalesRoyale)6757": {
            "label": "contract IThalesRoyale"
          },
          "t_contract(IPriceFeed)6573": {
            "label": "contract IPriceFeed"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3104_storage)4_storage)": {
            "label": "mapping(address => struct StakingThales.AMMVolumeEntry[4])"
          },
          "t_array(t_struct(AMMVolumeEntry)3104_storage)4_storage": {
            "label": "struct StakingThales.AMMVolumeEntry[4]"
          },
          "t_struct(AMMVolumeEntry)3104_storage": {
            "label": "struct StakingThales.AMMVolumeEntry",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "period",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IThalesStakingRewardsPool)6767": {
            "label": "contract IThalesStakingRewardsPool"
          },
          "t_contract(IAddressResolver)6424": {
            "label": "contract IAddressResolver"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "85e9544a69441f963cf69e0e70fcf5657ee28a61233db4afe2c2d9d84d67cfb9": {
      "address": "0xAFa5D48Aa8a72B89fB72570477d9B3a8B61757Cf",
      "txHash": "0x42fbaf057e347d33335260b3d01fcf918d6078e43ace3c8a970eb2a3c254061e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sportsAMM",
            "type": "t_contract(ISportsAMM)3780",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:39"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)470",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:40"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:42"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:44"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:45"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:46"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:48"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:50"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:51"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:53"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:54"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:56"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:58"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:59"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:61"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:62"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:64"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:65"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:66"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:67"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:69"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)3857",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:72"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:74"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:76"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:78"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:80"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)3780": {
            "label": "contract ISportsAMM"
          },
          "t_contract(IERC20Upgradeable)470": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)3857": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6f38075fd4cae210f7c2dc12054fcd0c387694ec0c69189566e4247a11c93ebb": {
      "address": "0x14968c4445aC9400ea1A4C990a227c7bC766c608",
      "txHash": "0x04076aec8e5a6c4524e83920cea1c8d63adcc7556d74ba2bc524e903d3a73f4f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sportsAMM",
            "type": "t_contract(ISportsAMM)61215",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:39"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:40"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:42"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:44"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:45"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:46"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:48"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:50"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:51"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:53"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:54"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:56"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:58"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:59"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:61"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:62"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:64"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:65"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:66"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:67"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:69"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)61292",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:72"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:74"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:76"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:78"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:80"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)61215": {
            "label": "contract ISportsAMM"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)61292": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "21bda4d85bedff4448750c84b93dd36758ea26eda579ea7cf15f8c58608cb8d3": {
      "address": "0xe1F1EAbCd2491AD9a296FbcA0EA9c9E57FEF856a",
      "txHash": "0x8d4a567f05cc5852b310c1d7f5574dc58fabfc4554852f436da0c7591479c44f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sportsAMM",
            "type": "t_contract(ISportsAMM)3829",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:39"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)470",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:40"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:42"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:44"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:45"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:46"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:48"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:50"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:51"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:53"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:54"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:56"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:58"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:59"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:61"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:62"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:64"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:65"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:66"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:67"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:69"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)3906",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:72"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:74"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:76"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:78"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:80"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)3829": {
            "label": "contract ISportsAMM"
          },
          "t_contract(IERC20Upgradeable)470": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)3906": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b90e29c02582e7d6b48434b30b5276e3ad2d54ce6cc3b64d695dc8d1d7efaea7": {
      "address": "0x4bd60Cefd000b5F0bAbde876027771A5e0724B29",
      "txHash": "0xf5b68c94d25b5619f33b13955d2c843a7af1cc8066926ea41ee0cc148d68fa46",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sportsAMM",
            "type": "t_contract(ISportsAMM)3815",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:39"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)470",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:40"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:42"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:44"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:45"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:46"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:48"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:50"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:51"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:53"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:54"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:56"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:58"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:59"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:61"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:62"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:64"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:65"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:66"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:67"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:69"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)3892",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:72"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:74"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:76"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:78"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:80"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)3815": {
            "label": "contract ISportsAMM"
          },
          "t_contract(IERC20Upgradeable)470": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)3892": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "55b91462f7a086ff851381641f5dfbb412b7934da933cedab85279bfff8c35fd": {
      "address": "0x4Dee2bF5df8779ca0531e9B4daC3fBfC786B754d",
      "txHash": "0x7d52af77b1b0be4a47961223045b3ba5aba8fb47bd8039ad1b0f7a2a3e239d24",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sportsAMM",
            "type": "t_contract(ISportsAMM)61395",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:39"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:40"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:42"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:44"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:45"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:46"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:48"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:50"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:51"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:53"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:54"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:56"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:58"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:59"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:61"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:62"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:64"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:65"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:66"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:67"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:69"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)61472",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:72"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:74"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:76"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:78"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:80"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)61395": {
            "label": "contract ISportsAMM"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)61472": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f8ba6f46ba51c54a6f9f896b94d6c3e8f2c12bb49e9ff3e128c1faebc2caf527": {
      "address": "0xaC22715FD89BBDD191e5d024528e59f00f77403C",
      "txHash": "0xc1ccc6ae623be9bc6f186e196cc2ccbc635d04082f5847e8d24a3338e23416f4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)548",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:39"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:42"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:46"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:49"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:52"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:56"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:65"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:68"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:71"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:74"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)9187",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:77"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:80"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:83"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)8228",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:86"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:89"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:92"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:95"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:98"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:101"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:104"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:107"
          },
          {
            "contract": "SportsAMM",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:110"
          },
          {
            "contract": "SportsAMM",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:113"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:116"
          },
          {
            "contract": "SportsAMM",
            "label": "sportAmmUtils",
            "type": "t_contract(SportsAMMUtils)8201",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:118"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:121"
          },
          {
            "contract": "SportsAMM",
            "label": "thresholdForOddsUpdate",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:125"
          },
          {
            "contract": "SportsAMM",
            "label": "wrapper",
            "type": "t_contract(ITherundownConsumerWrapper)9441",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:128"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:131"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:134"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSportAndChild",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:137"
          },
          {
            "contract": "SportsAMM",
            "label": "liquidityPool",
            "type": "t_contract(SportAMMLiquidityPool)3121",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:157"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)548": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)9187": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)8228": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(SportsAMMUtils)8201": {
            "label": "contract SportsAMMUtils"
          },
          "t_contract(ITherundownConsumerWrapper)9441": {
            "label": "contract ITherundownConsumerWrapper"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(SportAMMLiquidityPool)3121": {
            "label": "contract SportAMMLiquidityPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "00d048b7b847fe0255033349ce7b7fcb61eed2bbc1bd3eee149dac6db22a8014": {
      "address": "0x97D6d6bdb457de9EaE2f17f01c4753BC6021b376",
      "txHash": "0x68b5132553669142fc2e88184941d89eade92b2c67a77efb65c9c7c7ea798411",
      "layout": {
        "storage": [
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "DefaultLiquidityProvider",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\LiquidityPool\\DefaultLiquidityProvider.sol:14"
          },
          {
            "contract": "DefaultLiquidityProvider",
            "label": "liquidityPool",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\DefaultLiquidityProvider.sol:19"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "39ec27a5db8e910071ec3ca51ecaaa3d88461aa5143ff80ef1dfc4d640eea2ce": {
      "address": "0xf7bcBf53cddfE7fe42d041c72911e00060EaCbfc",
      "txHash": "0x169cea623f4afc27bbf0b4572db2578e085cb684c530586b0bb5cb50291fe7be",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sportsAMM",
            "type": "t_contract(ISportsAMM)61420",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:39"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:40"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:42"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:44"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:45"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:46"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:48"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:50"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:51"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:53"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:54"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:56"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:58"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:59"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:61"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:62"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:64"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:65"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:66"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:67"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:69"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)61497",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:72"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:74"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:76"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:78"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:80"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)61420": {
            "label": "contract ISportsAMM"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)61497": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c6f6b4596e8ce4e5a17feb9256935150f9d11ab47ab64e991dc7b53a029eaa35": {
      "address": "0xd2103833656218C6Fb0f5742B48678aB217F4f1F",
      "txHash": "0x7f599fc4d5cc083cf6c21d030dbe995753494d12348be18e166f05d6bea2caa5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)548",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:39"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:42"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:46"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:49"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:52"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:56"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:65"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:68"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:71"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:74"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)9202",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:77"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:80"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:83"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)8243",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:86"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:89"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:92"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:95"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:98"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:101"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:104"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:107"
          },
          {
            "contract": "SportsAMM",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:110"
          },
          {
            "contract": "SportsAMM",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:113"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:117"
          },
          {
            "contract": "SportsAMM",
            "label": "sportAmmUtils",
            "type": "t_contract(SportsAMMUtils)8216",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:119"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:122"
          },
          {
            "contract": "SportsAMM",
            "label": "thresholdForOddsUpdate",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:126"
          },
          {
            "contract": "SportsAMM",
            "label": "wrapper",
            "type": "t_contract(ITherundownConsumerWrapper)9456",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:129"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:132"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:135"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSportAndChild",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:138"
          },
          {
            "contract": "SportsAMM",
            "label": "liquidityPool",
            "type": "t_contract(SportAMMLiquidityPool)3138",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:158"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)548": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)9202": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)8243": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(SportsAMMUtils)8216": {
            "label": "contract SportsAMMUtils"
          },
          "t_contract(ITherundownConsumerWrapper)9456": {
            "label": "contract ITherundownConsumerWrapper"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(SportAMMLiquidityPool)3138": {
            "label": "contract SportAMMLiquidityPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "89f9911d5dfbe89db0f5f7fd68bb9ce2d672c5e562e7e6b2ae6d04e72995f3ea": {
      "address": "0xAb538aB0A62838DC8C95704fF276952dD229faea",
      "txHash": "0x7a6b4d5c39c73c7b04c2e49da94f86d8cfde38c0f136b404ba161365e8b94fa6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sportsAMM",
            "type": "t_contract(ISportsAMM)62014",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:39"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:40"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:42"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:44"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:45"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:46"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:48"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:50"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:51"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:53"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:54"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:56"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:58"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:59"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:61"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:62"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:64"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:65"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:66"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:67"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:69"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)62101",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:71"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:73"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:75"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:77"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:79"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "onlyWhitelistedStakersAllowed",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:81"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedStakers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:83"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)62014": {
            "label": "contract ISportsAMM"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)62101": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1724fdf59a19004397ac46691b3a9eff70e782dd4fd73273df107dfe82ffb08f": {
      "address": "0x769666FDD20139327603F702C848edb7e4ff9Be4",
      "txHash": "0xcb92804b76990a6cf407354247ac0a9dcf725d54e78f4326b32e9338174f08ad",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyPausable.sol:12"
          },
          {
            "contract": "StakingThales",
            "label": "iEscrowThales",
            "type": "t_contract(IEscrowThales)6517",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:33"
          },
          {
            "contract": "StakingThales",
            "label": "stakingToken",
            "type": "t_contract(IERC20)9486",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:34"
          },
          {
            "contract": "StakingThales",
            "label": "feeToken",
            "type": "t_contract(IERC20)9486",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:35"
          },
          {
            "contract": "StakingThales",
            "label": "SNXRewards",
            "type": "t_contract(ISNXRewards)6887",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:36"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRoyale",
            "type": "t_contract(IThalesRoyale)7164",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:37"
          },
          {
            "contract": "StakingThales",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)6849",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:38"
          },
          {
            "contract": "StakingThales",
            "label": "periodsOfStaking",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:40"
          },
          {
            "contract": "StakingThales",
            "label": "lastPeriodTimeStamp",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:41"
          },
          {
            "contract": "StakingThales",
            "label": "durationPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:42"
          },
          {
            "contract": "StakingThales",
            "label": "unstakeDurationPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:43"
          },
          {
            "contract": "StakingThales",
            "label": "startTimeStamp",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:44"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodRewards",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:45"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodFees",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:46"
          },
          {
            "contract": "StakingThales",
            "label": "distributeFeesEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:47"
          },
          {
            "contract": "StakingThales",
            "label": "fixedPeriodReward",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:48"
          },
          {
            "contract": "StakingThales",
            "label": "periodExtraReward",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:49"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXRewardsInPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:50"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXFeesInPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:51"
          },
          {
            "contract": "StakingThales",
            "label": "claimEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:52"
          },
          {
            "contract": "StakingThales",
            "label": "stakerLifetimeRewardsClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:54"
          },
          {
            "contract": "StakingThales",
            "label": "stakerFeesClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:55"
          },
          {
            "contract": "StakingThales",
            "label": "_totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:57"
          },
          {
            "contract": "StakingThales",
            "label": "_totalEscrowedAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:58"
          },
          {
            "contract": "StakingThales",
            "label": "_totalPendingStakeAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:59"
          },
          {
            "contract": "StakingThales",
            "label": "_totalUnclaimedRewards",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:60"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardsClaimed",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:61"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardFeesClaimed",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:62"
          },
          {
            "contract": "StakingThales",
            "label": "lastUnstakeTime",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:64"
          },
          {
            "contract": "StakingThales",
            "label": "unstaking",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:65"
          },
          {
            "contract": "StakingThales",
            "label": "unstakingAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:66"
          },
          {
            "contract": "StakingThales",
            "label": "_stakedBalances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:67"
          },
          {
            "contract": "StakingThales",
            "label": "_lastRewardsClaimedPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:68"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:69"
          },
          {
            "contract": "StakingThales",
            "label": "lastAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:78"
          },
          {
            "contract": "StakingThales",
            "label": "stakerAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3107_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:79"
          },
          {
            "contract": "StakingThales",
            "label": "extraRewardsActive",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:81"
          },
          {
            "contract": "StakingThales",
            "label": "ThalesStakingRewardsPool",
            "type": "t_contract(IThalesStakingRewardsPool)7174",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:82"
          },
          {
            "contract": "StakingThales",
            "label": "maxSNXRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:84"
          },
          {
            "contract": "StakingThales",
            "label": "maxAMMVolumeRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:85"
          },
          {
            "contract": "StakingThales",
            "label": "AMMVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:86"
          },
          {
            "contract": "StakingThales",
            "label": "maxThalesRoyaleRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:87"
          },
          {
            "contract": "StakingThales",
            "label": "SNXVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:92"
          },
          {
            "contract": "StakingThales",
            "label": "_lastStakingPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:94"
          },
          {
            "contract": "StakingThales",
            "label": "totalStakedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:96"
          },
          {
            "contract": "StakingThales",
            "label": "totalEscrowedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:97"
          },
          {
            "contract": "StakingThales",
            "label": "exoticBonds",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:98"
          },
          {
            "contract": "StakingThales",
            "label": "addressResolver",
            "type": "t_contract(IAddressResolver)6424",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:100"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:102"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:103"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:105"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3107_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:106"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesRangedAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:107"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3107_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:108"
          },
          {
            "contract": "StakingThales",
            "label": "lastExoticMarketsUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:109"
          },
          {
            "contract": "StakingThales",
            "label": "exoticMarketsVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3107_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:110"
          },
          {
            "contract": "StakingThales",
            "label": "lastSportsAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:111"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3107_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:112"
          },
          {
            "contract": "StakingThales",
            "label": "canClaimOnBehalf",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:114"
          },
          {
            "contract": "StakingThales",
            "label": "mergeAccountEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:116"
          },
          {
            "contract": "StakingThales",
            "label": "delegatedVolume",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:118"
          },
          {
            "contract": "StakingThales",
            "label": "supportedSportVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:119"
          },
          {
            "contract": "StakingThales",
            "label": "supportedAMMVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:120"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMLiquidityPool",
            "type": "t_contract(ISportsAMMLiquidityPool)6897",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:122"
          }
        ],
        "types": {
          "t_contract(IEscrowThales)6517": {
            "label": "contract IEscrowThales"
          },
          "t_contract(IERC20)9486": {
            "label": "contract IERC20"
          },
          "t_contract(ISNXRewards)6887": {
            "label": "contract ISNXRewards"
          },
          "t_contract(IThalesRoyale)7164": {
            "label": "contract IThalesRoyale"
          },
          "t_contract(IPriceFeed)6849": {
            "label": "contract IPriceFeed"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3107_storage)4_storage)": {
            "label": "mapping(address => struct StakingThales.AMMVolumeEntry[4])"
          },
          "t_array(t_struct(AMMVolumeEntry)3107_storage)4_storage": {
            "label": "struct StakingThales.AMMVolumeEntry[4]"
          },
          "t_struct(AMMVolumeEntry)3107_storage": {
            "label": "struct StakingThales.AMMVolumeEntry",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "period",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IThalesStakingRewardsPool)7174": {
            "label": "contract IThalesStakingRewardsPool"
          },
          "t_contract(IAddressResolver)6424": {
            "label": "contract IAddressResolver"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_contract(ISportsAMMLiquidityPool)6897": {
            "label": "contract ISportsAMMLiquidityPool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "feb45fa214da910081abf951f43d3c738573f902c0d04375865bcd4cae3b5727": {
      "address": "0xf5395C7C57E86a92EbBc256C48f9Cea205439561",
      "txHash": "0xc3c422b0a2b72aba3d2782ba6b50771c5977c6f2376fe64357b1ecfa4a709cf2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:39"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:42"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:46"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:49"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:52"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:56"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:65"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:68"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:71"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:74"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)62067",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:77"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:80"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:83"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)60567",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:86"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:89"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:92"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:95"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:98"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:101"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:104"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:107"
          },
          {
            "contract": "SportsAMM",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:110"
          },
          {
            "contract": "SportsAMM",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:113"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:116"
          },
          {
            "contract": "SportsAMM",
            "label": "sportAmmUtils",
            "type": "t_contract(SportsAMMUtils)56906",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:118"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:121"
          },
          {
            "contract": "SportsAMM",
            "label": "thresholdForOddsUpdate",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:125"
          },
          {
            "contract": "SportsAMM",
            "label": "wrapper",
            "type": "t_contract(ITherundownConsumerWrapper)62665",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:128"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:131"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:134"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSportAndChild",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:137"
          },
          {
            "contract": "SportsAMM",
            "label": "liquidityPool",
            "type": "t_contract(SportAMMLiquidityPool)31132",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:157"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)62067": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)60567": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(SportsAMMUtils)56906": {
            "label": "contract SportsAMMUtils"
          },
          "t_contract(ITherundownConsumerWrapper)62665": {
            "label": "contract ITherundownConsumerWrapper"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(SportAMMLiquidityPool)31132": {
            "label": "contract SportAMMLiquidityPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "efc02574d72b7d63f49041c09fc83e33411f8aeb84e36c2333f4f6c21bc85958": {
      "address": "0xab411282DBA1cC152688AeC9a2325605F6D6d581",
      "txHash": "0x1419726f41be3f85633346c6594ea7d43702420741fc1daa7a7087851a471ea6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayVault",
            "label": "parlayAMM",
            "type": "t_contract(IParlayMarketsAMM)11713",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:49"
          },
          {
            "contract": "ParlayVault",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)1472",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:50"
          },
          {
            "contract": "ParlayVault",
            "label": "vaultStarted",
            "type": "t_bool",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:52"
          },
          {
            "contract": "ParlayVault",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:54"
          },
          {
            "contract": "ParlayVault",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:55"
          },
          {
            "contract": "ParlayVault",
            "label": "roundStartTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:56"
          },
          {
            "contract": "ParlayVault",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:58"
          },
          {
            "contract": "ParlayVault",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:59"
          },
          {
            "contract": "ParlayVault",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:61"
          },
          {
            "contract": "ParlayVault",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:62"
          },
          {
            "contract": "ParlayVault",
            "label": "depositReceipts",
            "type": "t_mapping(t_address,t_struct(DepositReceipt)2015_storage)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:63"
          },
          {
            "contract": "ParlayVault",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:65"
          },
          {
            "contract": "ParlayVault",
            "label": "tradingParlaysPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:67"
          },
          {
            "contract": "ParlayVault",
            "label": "isTradingParlayInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:68"
          },
          {
            "contract": "ParlayVault",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:70"
          },
          {
            "contract": "ParlayVault",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:71"
          },
          {
            "contract": "ParlayVault",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:73"
          },
          {
            "contract": "ParlayVault",
            "label": "utilizationRate",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:74"
          },
          {
            "contract": "ParlayVault",
            "label": "capPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:76"
          },
          {
            "contract": "ParlayVault",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:78"
          },
          {
            "contract": "ParlayVault",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:80"
          },
          {
            "contract": "ParlayVault",
            "label": "usersCurrentlyInVault",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:81"
          },
          {
            "contract": "ParlayVault",
            "label": "priceLowerLimit",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:83"
          },
          {
            "contract": "ParlayVault",
            "label": "priceUpperLimit",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:84"
          },
          {
            "contract": "ParlayVault",
            "label": "skewImpactLimit",
            "type": "t_int256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:85"
          },
          {
            "contract": "ParlayVault",
            "label": "minTradeAmount",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:87"
          },
          {
            "contract": "ParlayVault",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)12660",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:90"
          },
          {
            "contract": "ParlayVault",
            "label": "allocationSpentInARound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:92"
          }
        ],
        "types": {
          "t_contract(IParlayMarketsAMM)11713": {
            "label": "contract IParlayMarketsAMM"
          },
          "t_contract(IERC20Upgradeable)1472": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_struct(DepositReceipt)2015_storage)": {
            "label": "mapping(address => struct ParlayVault.DepositReceipt)"
          },
          "t_struct(DepositReceipt)2015_storage": {
            "label": "struct ParlayVault.DepositReceipt",
            "members": [
              {
                "label": "round",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes32 => bool))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(IStakingThales)12660": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6e7f8c7ab8d22ea869cb73fc3d366115479ada6318fe5bddf49917c4ea9ecb7f": {
      "address": "0xd387BEAF6714312eb46896ED4415cA601DEACB05",
      "txHash": "0x1c00f761a915f812d6aed7f9561ab8dbebeb6d12709af3db0adf18a04b0c58b1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayVault",
            "label": "parlayAMM",
            "type": "t_contract(IParlayMarketsAMM)56314",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:49"
          },
          {
            "contract": "ParlayVault",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6764",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:50"
          },
          {
            "contract": "ParlayVault",
            "label": "vaultStarted",
            "type": "t_bool",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:52"
          },
          {
            "contract": "ParlayVault",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:54"
          },
          {
            "contract": "ParlayVault",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:55"
          },
          {
            "contract": "ParlayVault",
            "label": "roundStartTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:56"
          },
          {
            "contract": "ParlayVault",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:58"
          },
          {
            "contract": "ParlayVault",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:59"
          },
          {
            "contract": "ParlayVault",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:61"
          },
          {
            "contract": "ParlayVault",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:62"
          },
          {
            "contract": "ParlayVault",
            "label": "depositReceipts",
            "type": "t_mapping(t_address,t_struct(DepositReceipt)13959_storage)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:63"
          },
          {
            "contract": "ParlayVault",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:65"
          },
          {
            "contract": "ParlayVault",
            "label": "tradingParlayMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:67"
          },
          {
            "contract": "ParlayVault",
            "label": "isTradingParlayMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:68"
          },
          {
            "contract": "ParlayVault",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:70"
          },
          {
            "contract": "ParlayVault",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:71"
          },
          {
            "contract": "ParlayVault",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:73"
          },
          {
            "contract": "ParlayVault",
            "label": "utilizationRate",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:74"
          },
          {
            "contract": "ParlayVault",
            "label": "capPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:76"
          },
          {
            "contract": "ParlayVault",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:78"
          },
          {
            "contract": "ParlayVault",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:80"
          },
          {
            "contract": "ParlayVault",
            "label": "usersCurrentlyInVault",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:81"
          },
          {
            "contract": "ParlayVault",
            "label": "priceLowerLimit",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:83"
          },
          {
            "contract": "ParlayVault",
            "label": "priceUpperLimit",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:84"
          },
          {
            "contract": "ParlayVault",
            "label": "skewImpactLimit",
            "type": "t_int256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:85"
          },
          {
            "contract": "ParlayVault",
            "label": "minTradeAmount",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:87"
          },
          {
            "contract": "ParlayVault",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)57307",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:90"
          },
          {
            "contract": "ParlayVault",
            "label": "allocationSpentInARound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:92"
          }
        ],
        "types": {
          "t_contract(IParlayMarketsAMM)56314": {
            "label": "contract IParlayMarketsAMM"
          },
          "t_contract(IERC20Upgradeable)6764": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_struct(DepositReceipt)13959_storage)": {
            "label": "mapping(address => struct ParlayVault.DepositReceipt)"
          },
          "t_struct(DepositReceipt)13959_storage": {
            "label": "struct ParlayVault.DepositReceipt",
            "members": [
              {
                "label": "round",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes32 => bool))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(IStakingThales)57307": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4efe8288b753615351ffbc9c1243b8e8e9b80764f399645e43205ed789b78ad4": {
      "address": "0x7cea40A6569E538D1AC812C0D4Ff37b505466dC0",
      "txHash": "0x59dab545cf8f0f551b805e2eb51d1a6c9620678518ed6ec020f644fcb3873801",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayVault",
            "label": "parlayAMM",
            "type": "t_contract(IParlayMarketsAMM)11837",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:50"
          },
          {
            "contract": "ParlayVault",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)1472",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:51"
          },
          {
            "contract": "ParlayVault",
            "label": "vaultStarted",
            "type": "t_bool",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:53"
          },
          {
            "contract": "ParlayVault",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:55"
          },
          {
            "contract": "ParlayVault",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:56"
          },
          {
            "contract": "ParlayVault",
            "label": "roundStartTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:57"
          },
          {
            "contract": "ParlayVault",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:59"
          },
          {
            "contract": "ParlayVault",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:60"
          },
          {
            "contract": "ParlayVault",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:62"
          },
          {
            "contract": "ParlayVault",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:63"
          },
          {
            "contract": "ParlayVault",
            "label": "depositReceipts",
            "type": "t_mapping(t_address,t_struct(DepositReceipt)2015_storage)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:64"
          },
          {
            "contract": "ParlayVault",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:66"
          },
          {
            "contract": "ParlayVault",
            "label": "tradingParlayMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:68"
          },
          {
            "contract": "ParlayVault",
            "label": "isTradingParlayMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:69"
          },
          {
            "contract": "ParlayVault",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:71"
          },
          {
            "contract": "ParlayVault",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:72"
          },
          {
            "contract": "ParlayVault",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:74"
          },
          {
            "contract": "ParlayVault",
            "label": "utilizationRate",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:75"
          },
          {
            "contract": "ParlayVault",
            "label": "capPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:78"
          },
          {
            "contract": "ParlayVault",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:80"
          },
          {
            "contract": "ParlayVault",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:82"
          },
          {
            "contract": "ParlayVault",
            "label": "usersCurrentlyInVault",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:83"
          },
          {
            "contract": "ParlayVault",
            "label": "priceLowerLimit",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:85"
          },
          {
            "contract": "ParlayVault",
            "label": "priceUpperLimit",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:86"
          },
          {
            "contract": "ParlayVault",
            "label": "skewImpactLimit",
            "type": "t_int256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:87"
          },
          {
            "contract": "ParlayVault",
            "label": "minTradeAmount",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:89"
          },
          {
            "contract": "ParlayVault",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)12791",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:92"
          },
          {
            "contract": "ParlayVault",
            "label": "allocationSpentInARound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:94"
          },
          {
            "contract": "ParlayVault",
            "label": "maxTradeRate",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:95"
          }
        ],
        "types": {
          "t_contract(IParlayMarketsAMM)11837": {
            "label": "contract IParlayMarketsAMM"
          },
          "t_contract(IERC20Upgradeable)1472": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_struct(DepositReceipt)2015_storage)": {
            "label": "mapping(address => struct ParlayVault.DepositReceipt)"
          },
          "t_struct(DepositReceipt)2015_storage": {
            "label": "struct ParlayVault.DepositReceipt",
            "members": [
              {
                "label": "round",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes32 => bool))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(IStakingThales)12791": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ca8bc8f8250323f4cf5c4b51c9aefa5156853b57fb060025378dfa2c1e6d8e32": {
      "address": "0xb904a75f4F2Be048623009BC9Af542a674E81476",
      "txHash": "0xf6fc583b949f44b680312c1326d105bdef38f42e7301d60cc8a1716c423e9207",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayVault",
            "label": "parlayAMM",
            "type": "t_contract(IParlayMarketsAMM)11910",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:51"
          },
          {
            "contract": "ParlayVault",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)1472",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:52"
          },
          {
            "contract": "ParlayVault",
            "label": "vaultStarted",
            "type": "t_bool",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:54"
          },
          {
            "contract": "ParlayVault",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:56"
          },
          {
            "contract": "ParlayVault",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:57"
          },
          {
            "contract": "ParlayVault",
            "label": "roundStartTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:58"
          },
          {
            "contract": "ParlayVault",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:60"
          },
          {
            "contract": "ParlayVault",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:61"
          },
          {
            "contract": "ParlayVault",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:63"
          },
          {
            "contract": "ParlayVault",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:64"
          },
          {
            "contract": "ParlayVault",
            "label": "depositReceipts",
            "type": "t_mapping(t_address,t_struct(DepositReceipt)2015_storage)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:65"
          },
          {
            "contract": "ParlayVault",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:67"
          },
          {
            "contract": "ParlayVault",
            "label": "tradingParlayMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:69"
          },
          {
            "contract": "ParlayVault",
            "label": "isTradingParlayMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:70"
          },
          {
            "contract": "ParlayVault",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:72"
          },
          {
            "contract": "ParlayVault",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:73"
          },
          {
            "contract": "ParlayVault",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:75"
          },
          {
            "contract": "ParlayVault",
            "label": "utilizationRate",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:76"
          },
          {
            "contract": "ParlayVault",
            "label": "capPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:79"
          },
          {
            "contract": "ParlayVault",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:81"
          },
          {
            "contract": "ParlayVault",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:83"
          },
          {
            "contract": "ParlayVault",
            "label": "usersCurrentlyInVault",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:84"
          },
          {
            "contract": "ParlayVault",
            "label": "priceLowerLimit",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:86"
          },
          {
            "contract": "ParlayVault",
            "label": "priceUpperLimit",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:87"
          },
          {
            "contract": "ParlayVault",
            "label": "skewImpactLimit",
            "type": "t_int256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:88"
          },
          {
            "contract": "ParlayVault",
            "label": "minTradeAmount",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:90"
          },
          {
            "contract": "ParlayVault",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)12864",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:93"
          },
          {
            "contract": "ParlayVault",
            "label": "allocationSpentInARound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:95"
          },
          {
            "contract": "ParlayVault",
            "label": "maxTradeRate",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:96"
          },
          {
            "contract": "ParlayVault",
            "label": "marketUsedInRoundCount",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:98"
          },
          {
            "contract": "ParlayVault",
            "label": "maxMarketUsedInRoundCount",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:99"
          }
        ],
        "types": {
          "t_contract(IParlayMarketsAMM)11910": {
            "label": "contract IParlayMarketsAMM"
          },
          "t_contract(IERC20Upgradeable)1472": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_struct(DepositReceipt)2015_storage)": {
            "label": "mapping(address => struct ParlayVault.DepositReceipt)"
          },
          "t_struct(DepositReceipt)2015_storage": {
            "label": "struct ParlayVault.DepositReceipt",
            "members": [
              {
                "label": "round",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes32 => bool))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(IStakingThales)12864": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8135ae77929c36b6b595bb7c7bbefd82ee5beb28f5be434b21c80b5fcdfc08d0": {
      "address": "0xa6611f67D43207e920d9d49da19097d18fc4B1a5",
      "txHash": "0xe3df2b12ac67106989de2d6002ad80f2a56449d5d0427b2ceb1d93840832a7d2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayVault",
            "label": "parlayAMM",
            "type": "t_contract(IParlayMarketsAMM)12046",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:51"
          },
          {
            "contract": "ParlayVault",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)1472",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:52"
          },
          {
            "contract": "ParlayVault",
            "label": "vaultStarted",
            "type": "t_bool",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:54"
          },
          {
            "contract": "ParlayVault",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:56"
          },
          {
            "contract": "ParlayVault",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:57"
          },
          {
            "contract": "ParlayVault",
            "label": "roundStartTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:58"
          },
          {
            "contract": "ParlayVault",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:60"
          },
          {
            "contract": "ParlayVault",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:61"
          },
          {
            "contract": "ParlayVault",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:63"
          },
          {
            "contract": "ParlayVault",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:64"
          },
          {
            "contract": "ParlayVault",
            "label": "depositReceipts",
            "type": "t_mapping(t_address,t_struct(DepositReceipt)2015_storage)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:65"
          },
          {
            "contract": "ParlayVault",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:67"
          },
          {
            "contract": "ParlayVault",
            "label": "tradingParlayMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:69"
          },
          {
            "contract": "ParlayVault",
            "label": "isTradingParlayMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:70"
          },
          {
            "contract": "ParlayVault",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:72"
          },
          {
            "contract": "ParlayVault",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:73"
          },
          {
            "contract": "ParlayVault",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:75"
          },
          {
            "contract": "ParlayVault",
            "label": "utilizationRate",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:76"
          },
          {
            "contract": "ParlayVault",
            "label": "capPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:78"
          },
          {
            "contract": "ParlayVault",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:80"
          },
          {
            "contract": "ParlayVault",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:82"
          },
          {
            "contract": "ParlayVault",
            "label": "usersCurrentlyInVault",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:83"
          },
          {
            "contract": "ParlayVault",
            "label": "priceLowerLimit",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:85"
          },
          {
            "contract": "ParlayVault",
            "label": "priceUpperLimit",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:86"
          },
          {
            "contract": "ParlayVault",
            "label": "skewImpactLimit",
            "type": "t_int256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:87"
          },
          {
            "contract": "ParlayVault",
            "label": "minTradeAmount",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:89"
          },
          {
            "contract": "ParlayVault",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)13005",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:92"
          },
          {
            "contract": "ParlayVault",
            "label": "allocationSpentInARound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:94"
          },
          {
            "contract": "ParlayVault",
            "label": "maxTradeRate",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:95"
          },
          {
            "contract": "ParlayVault",
            "label": "marketUsedInRoundCount",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:97"
          },
          {
            "contract": "ParlayVault",
            "label": "maxMarketUsedInRoundCount",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:98"
          }
        ],
        "types": {
          "t_contract(IParlayMarketsAMM)12046": {
            "label": "contract IParlayMarketsAMM"
          },
          "t_contract(IERC20Upgradeable)1472": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_struct(DepositReceipt)2015_storage)": {
            "label": "mapping(address => struct ParlayVault.DepositReceipt)"
          },
          "t_struct(DepositReceipt)2015_storage": {
            "label": "struct ParlayVault.DepositReceipt",
            "members": [
              {
                "label": "round",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes32 => bool))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(IStakingThales)13005": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "23180e2923ac550590719012c7b55cfce97d578b9042c62ef7dce1e55ec126b9": {
      "address": "0x7c22139249c33a714950f69972618775f7D5fDD2",
      "txHash": "0xba3cf731d5958e198ead80cf15668432971c285d2fb1c322f955253f5da1b940",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)65762",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:26"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "invalidName",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:27"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "supportedMarketType",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:28"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultOddsThreshold",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:29"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "oddsThresholdForSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:30"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultBookmakerIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:32"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "sportIdToBookmakerIds",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:33"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "obtainer",
            "type": "t_contract(IGamesOddsObtainer)64045",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:34"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)65034",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:35"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:36"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)65762": {
            "label": "contract ITherundownConsumer"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_contract(IGamesOddsObtainer)64045": {
            "label": "contract IGamesOddsObtainer"
          },
          "t_contract(ISportPositionalMarketManager)65034": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "f8f8c1f95acda568c24970609c65743499ac80dc7398575c56f7e7f9f2023f35": {
      "address": "0x85AfE4A3B3F4c08C38bb8B2312b1c629323Aa780",
      "txHash": "0x4dccaf8ab4743fd14670ca6c16c5d45c301c7d9de2cb196a63c859d5797aa825",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:59"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:60"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:63"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:64"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:65"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)1000_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:68"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)1011_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:69"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)1020_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:70"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:71"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:72"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:73"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:76"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:77"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:78"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:79"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)4481",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:82"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:83"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:84"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:85"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:86"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)952",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:89"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:90"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:94"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:95"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:96"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:97"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOnADate",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:98"
          },
          {
            "contract": "TherundownConsumer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)4609",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:100"
          },
          {
            "contract": "TherundownConsumer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)1020_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:101"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsObtainer",
            "type": "t_contract(IGamesOddsObtainer)3795",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:102"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)1000_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)1000_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)1011_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)1011_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)1020_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)1020_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)4481": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)952": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          },
          "t_contract(ITherundownConsumerVerifier)4609": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(IGamesOddsObtainer)3795": {
            "label": "contract IGamesOddsObtainer"
          }
        }
      }
    },
    "0x76bd771758801872639e72e223d7ccfa7c1b166f60acb95ff3757ad34f5b3b63": {
      "address": "0xeDe874f55B79Fc55Ac8860B6E4C14B04C30AD0bA",
      "txHash": "0x11ee5c7d4581812f63737f6d3bf5996db577c795942ae12dc12c6aef41cc874f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)57333",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:32"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)57461",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:33"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)56697",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:34"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)55647_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:37"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)55647_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:38"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:39"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:40"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:41"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "doesSportSupportSpreadAndTotal",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:42"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:45"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:46"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketSpreadChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_int16,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:47"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketTotalChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_uint24,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:48"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:49"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketSread",
            "type": "t_mapping(t_address,t_int16)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:50"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketTotal",
            "type": "t_mapping(t_address,t_uint24)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:51"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveTotalChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:52"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveSpreadChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:53"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "isSpreadChildMarket",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:54"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:55"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)57333": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)57461": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)56697": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)55647_storage)": {
            "label": "mapping(bytes32 => struct IGamesOddsObtainer.GameOdds)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(GameOdds)55647_storage": {
            "label": "struct IGamesOddsObtainer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadHome",
                "type": "t_int16"
              },
              {
                "label": "spreadHomeOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadAway",
                "type": "t_int16"
              },
              {
                "label": "spreadAwayOdds",
                "type": "t_int24"
              },
              {
                "label": "totalOver",
                "type": "t_uint24"
              },
              {
                "label": "totalOverOdds",
                "type": "t_int24"
              },
              {
                "label": "totalUnder",
                "type": "t_uint24"
              },
              {
                "label": "totalUnderOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_int24": {
            "label": "int24"
          },
          "t_int16": {
            "label": "int16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_int16,t_address))": {
            "label": "mapping(address => mapping(int16 => address))"
          },
          "t_mapping(t_int16,t_address)": {
            "label": "mapping(int16 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint24,t_address))": {
            "label": "mapping(address => mapping(uint24 => address))"
          },
          "t_mapping(t_uint24,t_address)": {
            "label": "mapping(uint24 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_int16)": {
            "label": "mapping(address => int16)"
          },
          "t_mapping(t_address,t_uint24)": {
            "label": "mapping(address => uint24)"
          }
        }
      }
    },
    "93c1bcac52f1ddeb97f4bace5aa03f2782c946d4b7d58ef508484c5c6e9b285b": {
      "address": "0xC2f7FF7C4AfcD1f1D8e37c3Cd578a4007820c8D4",
      "txHash": "0x9570df233f0bad2ed06cdfee1e7db195ba91d5d557bdc9b37dd44fe72c237b4a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)66094",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:32"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)66222",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:33"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)65366",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:34"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)64169_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:37"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)64169_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:38"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:39"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:40"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:41"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "doesSportSupportSpreadAndTotal",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:42"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:45"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:46"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketSpreadChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_int16,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:47"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketTotalChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_uint24,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:48"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:49"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketSread",
            "type": "t_mapping(t_address,t_int16)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:50"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketTotal",
            "type": "t_mapping(t_address,t_uint24)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:51"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveTotalChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:52"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveSpreadChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:53"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "isSpreadChildMarket",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:54"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:55"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "normalizedOddsForMarketFulfilled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:56"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "normalizedOddsForMarket",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:57"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)66094": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)66222": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)65366": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)64169_storage)": {
            "label": "mapping(bytes32 => struct IGamesOddsObtainer.GameOdds)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(GameOdds)64169_storage": {
            "label": "struct IGamesOddsObtainer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadHome",
                "type": "t_int16"
              },
              {
                "label": "spreadHomeOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadAway",
                "type": "t_int16"
              },
              {
                "label": "spreadAwayOdds",
                "type": "t_int24"
              },
              {
                "label": "totalOver",
                "type": "t_uint24"
              },
              {
                "label": "totalOverOdds",
                "type": "t_int24"
              },
              {
                "label": "totalUnder",
                "type": "t_uint24"
              },
              {
                "label": "totalUnderOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_int24": {
            "label": "int24"
          },
          "t_int16": {
            "label": "int16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_int16,t_address))": {
            "label": "mapping(address => mapping(int16 => address))"
          },
          "t_mapping(t_int16,t_address)": {
            "label": "mapping(int16 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint24,t_address))": {
            "label": "mapping(address => mapping(uint24 => address))"
          },
          "t_mapping(t_uint24,t_address)": {
            "label": "mapping(uint24 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_int16)": {
            "label": "mapping(address => int16)"
          },
          "t_mapping(t_address,t_uint24)": {
            "label": "mapping(address => uint24)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "1f4e987d353de41af7471a7162c2905e854d60d6ea33c6498ac718a4a295c185": {
      "address": "0x4e774aCed30E8773A393A607b7b4846Fd6f4D4CE",
      "txHash": "0x38976588ec4791d73269ef8470fc65d177288e31e6d43e31d50d7ffaeb61b44c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)64493",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:36"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)64321",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:37"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)7480",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:38"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)64580",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)63011",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:44"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:52"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:55"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:60"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)69441_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:62"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:63"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)40217",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:69"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerGameCombination",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:72"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:76"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:78"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerPackedGamesCombination",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:80"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)64493": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)64321": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)7480": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)64580": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)63011": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)69441_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)40217": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => uint256))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          }
        }
      }
    },
    "8c43c7c94d414bad75ed2d5facdf5339579cb0146cbd52d4e8799bb781a03417": {
      "address": "0xc085637c56bbA1a526ECE75388e34E66DaEEdEB1",
      "txHash": "0x034198e420a943af89a4634fcc6a070dd8d8590e521b70805c0b9d4a83a4e12f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayVault",
            "label": "parlayAMM",
            "type": "t_contract(IParlayMarketsAMM)12043",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:51"
          },
          {
            "contract": "ParlayVault",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)1472",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:52"
          },
          {
            "contract": "ParlayVault",
            "label": "vaultStarted",
            "type": "t_bool",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:54"
          },
          {
            "contract": "ParlayVault",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:56"
          },
          {
            "contract": "ParlayVault",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:57"
          },
          {
            "contract": "ParlayVault",
            "label": "roundStartTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:58"
          },
          {
            "contract": "ParlayVault",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:60"
          },
          {
            "contract": "ParlayVault",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:61"
          },
          {
            "contract": "ParlayVault",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:63"
          },
          {
            "contract": "ParlayVault",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:64"
          },
          {
            "contract": "ParlayVault",
            "label": "depositReceipts",
            "type": "t_mapping(t_address,t_struct(DepositReceipt)2015_storage)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:65"
          },
          {
            "contract": "ParlayVault",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:67"
          },
          {
            "contract": "ParlayVault",
            "label": "tradingParlayMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:69"
          },
          {
            "contract": "ParlayVault",
            "label": "isTradingParlayMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:70"
          },
          {
            "contract": "ParlayVault",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:72"
          },
          {
            "contract": "ParlayVault",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:73"
          },
          {
            "contract": "ParlayVault",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:75"
          },
          {
            "contract": "ParlayVault",
            "label": "utilizationRate",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:76"
          },
          {
            "contract": "ParlayVault",
            "label": "capPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:79"
          },
          {
            "contract": "ParlayVault",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:81"
          },
          {
            "contract": "ParlayVault",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:83"
          },
          {
            "contract": "ParlayVault",
            "label": "usersCurrentlyInVault",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:84"
          },
          {
            "contract": "ParlayVault",
            "label": "priceLowerLimit",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:86"
          },
          {
            "contract": "ParlayVault",
            "label": "priceUpperLimit",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:87"
          },
          {
            "contract": "ParlayVault",
            "label": "skewImpactLimit",
            "type": "t_int256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:88"
          },
          {
            "contract": "ParlayVault",
            "label": "minTradeAmount",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:90"
          },
          {
            "contract": "ParlayVault",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)13002",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:93"
          },
          {
            "contract": "ParlayVault",
            "label": "allocationSpentInARound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:95"
          },
          {
            "contract": "ParlayVault",
            "label": "maxTradeRate",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:96"
          },
          {
            "contract": "ParlayVault",
            "label": "marketUsedInRoundCount",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:98"
          },
          {
            "contract": "ParlayVault",
            "label": "maxMarketUsedInRoundCount",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:99"
          }
        ],
        "types": {
          "t_contract(IParlayMarketsAMM)12043": {
            "label": "contract IParlayMarketsAMM"
          },
          "t_contract(IERC20Upgradeable)1472": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_struct(DepositReceipt)2015_storage)": {
            "label": "mapping(address => struct ParlayVault.DepositReceipt)"
          },
          "t_struct(DepositReceipt)2015_storage": {
            "label": "struct ParlayVault.DepositReceipt",
            "members": [
              {
                "label": "round",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes32 => bool))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(IStakingThales)13002": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c84d8d19c2f94fb17fbdbccef99c8c7053ed97398cad773f34fe925a47cd7a03": {
      "address": "0xf932D24Eb62fEFfe7A929E7Fc206B6EBB4B2A22a",
      "txHash": "0x2e8a35c24fb734ca7a683ad924141e8e18a303f8facb358eab49212a747266cf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayVault",
            "label": "parlayAMM",
            "type": "t_contract(IParlayMarketsAMM)64373",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:51"
          },
          {
            "contract": "ParlayVault",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:52"
          },
          {
            "contract": "ParlayVault",
            "label": "vaultStarted",
            "type": "t_bool",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:54"
          },
          {
            "contract": "ParlayVault",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:56"
          },
          {
            "contract": "ParlayVault",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:57"
          },
          {
            "contract": "ParlayVault",
            "label": "roundStartTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:58"
          },
          {
            "contract": "ParlayVault",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:60"
          },
          {
            "contract": "ParlayVault",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:61"
          },
          {
            "contract": "ParlayVault",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:63"
          },
          {
            "contract": "ParlayVault",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:64"
          },
          {
            "contract": "ParlayVault",
            "label": "depositReceipts",
            "type": "t_mapping(t_address,t_struct(DepositReceipt)15429_storage)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:65"
          },
          {
            "contract": "ParlayVault",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:67"
          },
          {
            "contract": "ParlayVault",
            "label": "tradingParlayMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:69"
          },
          {
            "contract": "ParlayVault",
            "label": "isTradingParlayMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:70"
          },
          {
            "contract": "ParlayVault",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:72"
          },
          {
            "contract": "ParlayVault",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:73"
          },
          {
            "contract": "ParlayVault",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:75"
          },
          {
            "contract": "ParlayVault",
            "label": "utilizationRate",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:76"
          },
          {
            "contract": "ParlayVault",
            "label": "capPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:79"
          },
          {
            "contract": "ParlayVault",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:81"
          },
          {
            "contract": "ParlayVault",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:83"
          },
          {
            "contract": "ParlayVault",
            "label": "usersCurrentlyInVault",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:84"
          },
          {
            "contract": "ParlayVault",
            "label": "priceLowerLimit",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:86"
          },
          {
            "contract": "ParlayVault",
            "label": "priceUpperLimit",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:87"
          },
          {
            "contract": "ParlayVault",
            "label": "skewImpactLimit",
            "type": "t_int256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:88"
          },
          {
            "contract": "ParlayVault",
            "label": "minTradeAmount",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:90"
          },
          {
            "contract": "ParlayVault",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)65388",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:93"
          },
          {
            "contract": "ParlayVault",
            "label": "allocationSpentInARound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:95"
          },
          {
            "contract": "ParlayVault",
            "label": "maxTradeRate",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:96"
          },
          {
            "contract": "ParlayVault",
            "label": "marketUsedInRoundCount",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:98"
          },
          {
            "contract": "ParlayVault",
            "label": "maxMarketUsedInRoundCount",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:99"
          }
        ],
        "types": {
          "t_contract(IParlayMarketsAMM)64373": {
            "label": "contract IParlayMarketsAMM"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_struct(DepositReceipt)15429_storage)": {
            "label": "mapping(address => struct ParlayVault.DepositReceipt)"
          },
          "t_struct(DepositReceipt)15429_storage": {
            "label": "struct ParlayVault.DepositReceipt",
            "members": [
              {
                "label": "round",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes32 => bool))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(IStakingThales)65388": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "21ab46749734135a2a7c5bf54e96ca01550ac89c256bfd679f2c5d3e4c738f6f": {
      "address": "0xf0F2876Eb01365a53D129c84aED83A71Ae9479B1",
      "txHash": "0x21ab46749734135a2a7c5bf54e96ca01550ac89c256bfd679f2c5d3e4c738f6f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "expiryDuration",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:32"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "marketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:34"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "customMarketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:35"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:37"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)61639_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:39"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)61639_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:40"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_migratingManager",
            "type": "t_contract(SportPositionalMarketManager)48132",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:42"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sUSD",
            "type": "t_contract(IERC20)3409",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:44"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:46"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sportPositionalMarketFactory",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:47"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:48"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:49"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:50"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "cancelTimeout",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:51"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedCancelAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:52"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "oddsObtainer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:53"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)61639_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(SportPositionalMarketManager)48132": {
            "label": "contract SportPositionalMarketManager"
          },
          "t_contract(IERC20)3409": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "a4c5b1f9eeef339f48e45a1f73da9241eb854d169d3403a08153dc709b12da6f": {
      "address": "0x764A51F3C84158E70d228122c4cE2BC7A605DFdF",
      "txHash": "0xc3ffa0a3c2e633409c39e8aa0a3972efd5c53d9ff7881aecaa7c4565240e6f73",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesOddsReceiver",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)66505",
            "src": "contracts/SportMarkets/Rundown/GamesOddsReciever.sol:19"
          },
          {
            "contract": "GamesOddsReceiver",
            "label": "obtainer",
            "type": "t_contract(IGamesOddsObtainer)64779",
            "src": "contracts/SportMarkets/Rundown/GamesOddsReciever.sol:20"
          },
          {
            "contract": "GamesOddsReceiver",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsReciever.sol:22"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)66505": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(IGamesOddsObtainer)64779": {
            "label": "contract IGamesOddsObtainer"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "a776db6a3396995a2690dd517acdf48c1475f3d92f6260b426830b9253b82af8": {
      "address": "0x0588D61e89A24145a9f8fe00778bF65Ff9365ac2",
      "txHash": "0xfb39435a67ea573a392dc65f243ef4b17b262c23c80cebb6783e1b5a2966afd9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:59"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:60"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:63"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:64"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:65"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)44457_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:68"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)44468_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:69"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)44477_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:70"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:71"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:72"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:73"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:76"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:77"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:78"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:79"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)65768",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:82"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:83"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:84"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:85"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:86"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)44409",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:89"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:90"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:94"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:95"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:96"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:97"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOnADate",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:98"
          },
          {
            "contract": "TherundownConsumer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)66633",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:100"
          },
          {
            "contract": "TherundownConsumer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)44477_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:101"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsObtainer",
            "type": "t_contract(IGamesOddsObtainer)64779",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:102"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)44457_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)44457_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)44468_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)44468_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)44477_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)44477_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)65768": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)44409": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          },
          "t_contract(ITherundownConsumerVerifier)66633": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(IGamesOddsObtainer)64779": {
            "label": "contract IGamesOddsObtainer"
          }
        }
      }
    },
    "72b75e37f4288f23556fa1464631571ca5f21055a3e2c8605aa58fccd98a0472": {
      "address": "0x0A55DA2317F0A6eE54faadF9e7c46C3Fa74bE2E4",
      "txHash": "0x75b68f6e1fdede562f7b10ce4161d56aa9f4a40f5b101c673f9a247f754f8109",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)66505",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:32"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)66633",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:33"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)65768",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:34"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)64585_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:37"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)64585_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:38"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:39"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:40"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:41"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "doesSportSupportSpreadAndTotal",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:42"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:45"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:46"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketSpreadChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_int16,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:47"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketTotalChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_uint24,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:48"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:49"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketSread",
            "type": "t_mapping(t_address,t_int16)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:50"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketTotal",
            "type": "t_mapping(t_address,t_uint24)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:51"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveTotalChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:52"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveSpreadChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:53"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "isSpreadChildMarket",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:54"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:55"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "normalizedOddsForMarketFulfilled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:56"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "normalizedOddsForMarket",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:57"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsReceiver",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:58"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)66505": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)66633": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)65768": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)64585_storage)": {
            "label": "mapping(bytes32 => struct IGamesOddsObtainer.GameOdds)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(GameOdds)64585_storage": {
            "label": "struct IGamesOddsObtainer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadHome",
                "type": "t_int16"
              },
              {
                "label": "spreadHomeOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadAway",
                "type": "t_int16"
              },
              {
                "label": "spreadAwayOdds",
                "type": "t_int24"
              },
              {
                "label": "totalOver",
                "type": "t_uint24"
              },
              {
                "label": "totalOverOdds",
                "type": "t_int24"
              },
              {
                "label": "totalUnder",
                "type": "t_uint24"
              },
              {
                "label": "totalUnderOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_int24": {
            "label": "int24"
          },
          "t_int16": {
            "label": "int16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_int16,t_address))": {
            "label": "mapping(address => mapping(int16 => address))"
          },
          "t_mapping(t_int16,t_address)": {
            "label": "mapping(int16 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint24,t_address))": {
            "label": "mapping(address => mapping(uint24 => address))"
          },
          "t_mapping(t_uint24,t_address)": {
            "label": "mapping(uint24 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_int16)": {
            "label": "mapping(address => int16)"
          },
          "t_mapping(t_address,t_uint24)": {
            "label": "mapping(address => uint24)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "1df9dd287934a5c9cadbdaa1f5fcb78f866e4446fe2941230903da6febedf850": {
      "address": "0xC6D3AC5C44610a80fD56bFf588FCA076233Ef982",
      "txHash": "0x2efdd8bbb6b24c16cb86f65151742f2e744fbb88cf2b542f52c31bd70071be5c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "expiryDuration",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:31"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "marketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:33"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "customMarketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:34"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:36"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)75985_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:38"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)75985_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:39"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_migratingManager",
            "type": "t_contract(SportPositionalMarketManager)60068",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:41"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sUSD",
            "type": "t_contract(IERC20)4879",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:43"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:45"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sportPositionalMarketFactory",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:46"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:47"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:48"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:49"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "cancelTimeout",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:50"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedCancelAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:51"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "oddsObtainer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:52"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "isDoubleChance",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:54"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "isDoubleChanceSupported",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:55"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "doubleChanceMarketsByParent",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:56"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "doesSportSupportDoubleChance",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:57"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)75985_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(SportPositionalMarketManager)60068": {
            "label": "contract SportPositionalMarketManager"
          },
          "t_contract(IERC20)4879": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          }
        }
      }
    },
    "208b0777c68b4065665d6cadcfd0da67cd5f63ca33633e72ba1e2ff835c3daaa": {
      "address": "0x33C80874a21Bb2AA6238a82552592Cb14AE4F2Fe",
      "txHash": "0x394fd777b0b5e52bfdf4fe83e996a2aff85a6d7e9af7dee1fdae67005f3d73d8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "OvertimeVoucherEscrow",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts/SportMarkets/Voucher/OvertimeVoucherEscrow.sol:24"
          },
          {
            "contract": "OvertimeVoucherEscrow",
            "label": "overtimeVoucher",
            "type": "t_contract(OvertimeVoucher)61435",
            "src": "contracts/SportMarkets/Voucher/OvertimeVoucherEscrow.sol:27"
          },
          {
            "contract": "OvertimeVoucherEscrow",
            "label": "whitelistedAddressesPerPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/SportMarkets/Voucher/OvertimeVoucherEscrow.sol:30"
          },
          {
            "contract": "OvertimeVoucherEscrow",
            "label": "addressClaimedVoucherPerPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/SportMarkets/Voucher/OvertimeVoucherEscrow.sol:33"
          },
          {
            "contract": "OvertimeVoucherEscrow",
            "label": "voucherAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Voucher/OvertimeVoucherEscrow.sol:36"
          },
          {
            "contract": "OvertimeVoucherEscrow",
            "label": "periodEnd",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Voucher/OvertimeVoucherEscrow.sol:39"
          },
          {
            "contract": "OvertimeVoucherEscrow",
            "label": "period",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Voucher/OvertimeVoucherEscrow.sol:42"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(OvertimeVoucher)61435": {
            "label": "contract OvertimeVoucher"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "710336a738f75254739de2db6fc2423c834ddb124baa75f67ee8516009274730": {
      "address": "0x37A17EE025c0835e1E38C19e1Bf53d99895dB882",
      "txHash": "0x40229e530ae7a9e1d42cbcacf6aed50549f06d4448fdf62d209bff5d5197959a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)68536",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:36"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)68348",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:37"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:38"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)68623",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)66980",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:44"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:52"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:55"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:60"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)73493_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:62"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:63"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)42286",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:69"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerGameCombination",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:72"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:76"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:78"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerPackedGamesCombination",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:80"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "SGPfeePerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:82"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)68536": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)68348": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)68623": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)66980": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)73493_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)42286": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => uint256))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          }
        }
      }
    },
    "0715ddb50ff8a94be2f8c2c987504289d2913b4307f700333a860fcddaf7c2f1": {
      "address": "0xF572dA8Fd95Aa00eFD36F1720c45170E52dAD9De",
      "txHash": "0x1e32eec43422e24c51be7b4638782e5d04acdceb55e107effc29cce9b51a3ad3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "785cdb1eed51aae93a24b60329ba84ff2a208b120152ec6769ce46df4c24f781": {
      "address": "0x13A8666D68AB4AA43b5A7734447850605364a0E1",
      "txHash": "0xa861912437cdf1a9a134bb758d2969376f3400fccb28895a18ca8f46748b9d31",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ParlayMarketData",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)80824_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:16"
          },
          {
            "contract": "ParlayMarketData",
            "label": "_parlaysInGamePosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)80824_storage))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:22"
          },
          {
            "contract": "ParlayMarketData",
            "label": "gameAddressPositionParlay",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:24"
          },
          {
            "contract": "ParlayMarketData",
            "label": "numOfParlaysInGamePosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:25"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayDetails",
            "type": "t_mapping(t_address,t_struct(ParlayDetails)44072_storage)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:27"
          },
          {
            "contract": "ParlayMarketData",
            "label": "userParlays",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:28"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayOwner",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:29"
          },
          {
            "contract": "ParlayMarketData",
            "label": "userNumOfParlays",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:30"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayMarketsAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:31"
          }
        ],
        "types": {
          "t_struct(AddressSet)80824_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)80824_storage))": {
            "label": "mapping(address => mapping(uint256 => struct AddressSetLib.AddressSet))"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)80824_storage)": {
            "label": "mapping(uint256 => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))": {
            "label": "mapping(address => mapping(uint256 => mapping(uint256 => address)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint256 => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(ParlayDetails)44072_storage)": {
            "label": "mapping(address => struct ParlayMarketData.ParlayDetails)"
          },
          "t_struct(ParlayDetails)44072_storage": {
            "label": "struct ParlayMarketData.ParlayDetails",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "sUSDPaid",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a16caf1951ff2891882e3cbbbb9c858bbfec5444f37604e8dfbf0b60dae1046a": {
      "address": "0xAa7c6116cC5f20a0aB05Dc442275F90dB83aed18",
      "txHash": "0xb6a9ddb6146c76875becbdd8cfdc5d7a80b875f71b031c9e65297b0cc80e9f3d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:39"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "2336f1bc2b7c02eb67f6a1e2ddafda1f8ec021ad604281fa13978d289dbe891b": {
      "address": "0x471A5A091768Df7397d6A11140Da96A03e7B76B3",
      "txHash": "0x22ecdf96a72df922b872ab6ef79639fa07d57724a1495ae40efe065bb5049d1f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketData.sol:72"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketData.sol:73"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "oddsObtainer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketData.sol:74"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "consumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketData.sol:75"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "voucherEscrow",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketData.sol:76"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "132942cd9acc9e7d49f46c47ecb675de2fb596fa258e128e6cf717801c8cc6b5": {
      "address": "0xEF1e4F2b24A6926c82b8DF2a4cC83B78C2b60B27",
      "txHash": "0x569a40edb5bb5fcb51d4dd0eaeeade28e2f778be0ad213e366ad1f37f84c6424",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)66869",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:32"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)66997",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:33"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)66132",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:34"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)64899_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:37"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)64899_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:38"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:39"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:40"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:41"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "doesSportSupportSpreadAndTotal",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:42"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:45"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:46"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketSpreadChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_int16,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:47"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketTotalChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_uint24,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:48"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:49"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketSread",
            "type": "t_mapping(t_address,t_int16)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:50"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketTotal",
            "type": "t_mapping(t_address,t_uint24)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:51"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveTotalChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:52"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveSpreadChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:53"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "isSpreadChildMarket",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:54"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:55"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "normalizedOddsForMarketFulfilled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:56"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "normalizedOddsForMarket",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:57"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsReceiver",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:58"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)66869": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)66997": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)66132": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)64899_storage)": {
            "label": "mapping(bytes32 => struct IGamesOddsObtainer.GameOdds)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(GameOdds)64899_storage": {
            "label": "struct IGamesOddsObtainer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadHome",
                "type": "t_int16"
              },
              {
                "label": "spreadHomeOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadAway",
                "type": "t_int16"
              },
              {
                "label": "spreadAwayOdds",
                "type": "t_int24"
              },
              {
                "label": "totalOver",
                "type": "t_uint24"
              },
              {
                "label": "totalOverOdds",
                "type": "t_int24"
              },
              {
                "label": "totalUnder",
                "type": "t_uint24"
              },
              {
                "label": "totalUnderOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_int24": {
            "label": "int24"
          },
          "t_int16": {
            "label": "int16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_int16,t_address))": {
            "label": "mapping(address => mapping(int16 => address))"
          },
          "t_mapping(t_int16,t_address)": {
            "label": "mapping(int16 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint24,t_address))": {
            "label": "mapping(address => mapping(uint24 => address))"
          },
          "t_mapping(t_uint24,t_address)": {
            "label": "mapping(uint24 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_int16)": {
            "label": "mapping(address => int16)"
          },
          "t_mapping(t_address,t_uint24)": {
            "label": "mapping(address => uint24)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "d4d72f34c9d6bd06ff19bfddb53000a1148eea37add54322eeb3837577e1ce62": {
      "address": "0x1588980652eF98275fCC6fb360B1Cc8FCb3bA5bD",
      "txHash": "0x1d44a09ff0c55e0faf3d2bfa9c5048f64263d881b55f9eadf2f1b681704c2e0c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)548",
            "src": "contracts/SportMarkets/SportsAMM.sol:39"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:42"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:46"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:49"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:52"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:56"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:65"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:68"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:71"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:74"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)9989",
            "src": "contracts/SportMarkets/SportsAMM.sol:77"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:80"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:83"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)9018",
            "src": "contracts/SportMarkets/SportsAMM.sol:86"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:89"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:92"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:95"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportsAMM.sol:98"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:101"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:104"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:107"
          },
          {
            "contract": "SportsAMM",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:110"
          },
          {
            "contract": "SportsAMM",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:113"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:116"
          },
          {
            "contract": "SportsAMM",
            "label": "sportAmmUtils",
            "type": "t_contract(SportsAMMUtils)8991",
            "src": "contracts/SportMarkets/SportsAMM.sol:118"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:121"
          },
          {
            "contract": "SportsAMM",
            "label": "thresholdForOddsUpdate",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:125"
          },
          {
            "contract": "SportsAMM",
            "label": "wrapper",
            "type": "t_contract(ITherundownConsumerWrapper)10259",
            "src": "contracts/SportMarkets/SportsAMM.sol:128"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:131"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:134"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSportAndChild",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/SportMarkets/SportsAMM.sol:137"
          },
          {
            "contract": "SportsAMM",
            "label": "liquidityPool",
            "type": "t_contract(SportAMMLiquidityPool)3658",
            "src": "contracts/SportMarkets/SportsAMM.sol:157"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spreadPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:160"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)548": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)9989": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)9018": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(SportsAMMUtils)8991": {
            "label": "contract SportsAMMUtils"
          },
          "t_contract(ITherundownConsumerWrapper)10259": {
            "label": "contract ITherundownConsumerWrapper"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(SportAMMLiquidityPool)3658": {
            "label": "contract SportAMMLiquidityPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4a66dbffcaadf5b3cec67d68afb15cad16331dc86932a78e2725068236a4d9b7": {
      "address": "0x2A6Eca145819D5Eed7Fb1AA622e2B4Abf9F04243",
      "txHash": "0x76db5880f19623e6cc26f58cb2e23fc116b77d59498e0604e216de981e1ff953",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)548",
            "src": "contracts/SportMarkets/SportsAMM.sol:39"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:42"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:46"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:49"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:52"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:56"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:65"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:68"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:71"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:74"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)9995",
            "src": "contracts/SportMarkets/SportsAMM.sol:77"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:80"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:83"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)9020",
            "src": "contracts/SportMarkets/SportsAMM.sol:86"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:89"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:92"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:95"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportsAMM.sol:98"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:101"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:104"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:107"
          },
          {
            "contract": "SportsAMM",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:110"
          },
          {
            "contract": "SportsAMM",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:113"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:116"
          },
          {
            "contract": "SportsAMM",
            "label": "sportAmmUtils",
            "type": "t_contract(SportsAMMUtils)8993",
            "src": "contracts/SportMarkets/SportsAMM.sol:118"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:121"
          },
          {
            "contract": "SportsAMM",
            "label": "thresholdForOddsUpdate",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:125"
          },
          {
            "contract": "SportsAMM",
            "label": "wrapper",
            "type": "t_contract(ITherundownConsumerWrapper)10265",
            "src": "contracts/SportMarkets/SportsAMM.sol:128"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:131"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:134"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSportAndChild",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/SportMarkets/SportsAMM.sol:137"
          },
          {
            "contract": "SportsAMM",
            "label": "liquidityPool",
            "type": "t_contract(SportAMMLiquidityPool)3658",
            "src": "contracts/SportMarkets/SportsAMM.sol:157"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spreadPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:160"
          },
          {
            "contract": "SportsAMM",
            "label": "minSpreadPerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/SportMarkets/SportsAMM.sol:163"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)548": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)9995": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)9020": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(SportsAMMUtils)8993": {
            "label": "contract SportsAMMUtils"
          },
          "t_contract(ITherundownConsumerWrapper)10265": {
            "label": "contract ITherundownConsumerWrapper"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(SportAMMLiquidityPool)3658": {
            "label": "contract SportAMMLiquidityPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3c905cdcb3b7d007c8ebec6001e21438c7e9889c13f9d3a20236e58022a38637": {
      "address": "0x9FA6c67da7ceE04a28520DD1254aEC261876b5e9",
      "txHash": "0xac11a41cb8b90f9a53f32275176506bfaa2801d575705adbd3467d25f0f5c5d8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)7480",
            "src": "contracts/SportMarkets/SportsAMM.sol:39"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:42"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:46"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:49"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:52"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:56"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:65"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:68"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:71"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:74"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)67273",
            "src": "contracts/SportMarkets/SportsAMM.sol:77"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:80"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:83"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)65680",
            "src": "contracts/SportMarkets/SportsAMM.sol:86"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:89"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:92"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:95"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportsAMM.sol:98"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:101"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:104"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:107"
          },
          {
            "contract": "SportsAMM",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:110"
          },
          {
            "contract": "SportsAMM",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:113"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:116"
          },
          {
            "contract": "SportsAMM",
            "label": "sportAmmUtils",
            "type": "t_contract(SportsAMMUtils)61604",
            "src": "contracts/SportMarkets/SportsAMM.sol:118"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:121"
          },
          {
            "contract": "SportsAMM",
            "label": "thresholdForOddsUpdate",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:125"
          },
          {
            "contract": "SportsAMM",
            "label": "wrapper",
            "type": "t_contract(ITherundownConsumerWrapper)67887",
            "src": "contracts/SportMarkets/SportsAMM.sol:128"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:131"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:134"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSportAndChild",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/SportMarkets/SportsAMM.sol:137"
          },
          {
            "contract": "SportsAMM",
            "label": "liquidityPool",
            "type": "t_contract(SportAMMLiquidityPool)33111",
            "src": "contracts/SportMarkets/SportsAMM.sol:157"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spreadPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:160"
          },
          {
            "contract": "SportsAMM",
            "label": "minSpreadPerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/SportMarkets/SportsAMM.sol:163"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)7480": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)67273": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)65680": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(SportsAMMUtils)61604": {
            "label": "contract SportsAMMUtils"
          },
          "t_contract(ITherundownConsumerWrapper)67887": {
            "label": "contract ITherundownConsumerWrapper"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(SportAMMLiquidityPool)33111": {
            "label": "contract SportAMMLiquidityPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6f9bd86df6db408b62ff3c814c82d0c355d485e8dcdd3000237d1a71326cb420": {
      "address": "0x0e5F659Cdd7c77069F50F42565bEb6A581120Fab",
      "txHash": "0x027d2d5d275729ae4e8e7f49c9f1faaad069f36a2be5bddc926bb642489c5db7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "expiryDuration",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:31"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "marketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:33"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "customMarketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:34"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:36"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)76565_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:38"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)76565_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:39"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_migratingManager",
            "type": "t_contract(SportPositionalMarketManager)60618",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:41"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sUSD",
            "type": "t_contract(IERC20)4879",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:43"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:45"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sportPositionalMarketFactory",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:46"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:47"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:48"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:49"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "cancelTimeout",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:50"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedCancelAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:51"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "oddsObtainer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:52"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "isDoubleChance",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:54"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "isDoubleChanceSupported",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:55"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "doubleChanceMarketsByParent",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:56"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "doesSportSupportDoubleChance",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:57"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)76565_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(SportPositionalMarketManager)60618": {
            "label": "contract SportPositionalMarketManager"
          },
          "t_contract(IERC20)4879": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          }
        }
      }
    },
    "58baa7452bf7eeb11d0030494ce1ccaac44e33577f4ec5eee8f4b739d0a83e64": {
      "address": "0xd5F18B744Ef95CE6547777e7A3F1Dfa89Fd833CA",
      "txHash": "0x1f7573cb665816f1cd38fa64f6d8f40ee293d2a7c07c91227f009b9ca0cc0b9f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)68957",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:36"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)68762",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:37"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:38"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)69044",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)67381",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:44"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:52"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:55"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:60"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)73914_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:62"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:63"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)42337",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:69"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerGameCombination",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:72"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:76"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:78"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerPackedGamesCombination",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:80"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "SGPfeePerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:82"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "SGPFeePerCombination",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:84"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)68957": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)68762": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)69044": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)67381": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)73914_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)42337": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => uint256))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          }
        }
      }
    },
    "e6c7eba10450075cb1fe762243c8906e893e672337657998a30c3b408e2bab47": {
      "address": "0xA6301d76b2065047a49B5B7A236df681Da5509F6",
      "txHash": "0x061d6f45300f1ebe5c271c749d68ccb668718f56fde4617256ce6b6a00bbfbeb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:88"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:89"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "oddsObtainer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:90"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "consumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:91"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "voucherEscrow",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:92"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4b966c85d14b065a3973945a3b5ecab1479cad444a08665e5333328ccf786420": {
      "address": "0x836dBB0251FBA7C2651ed2B353c9d4795c73225c",
      "txHash": "0xff22410be69c0491f7966eaecbfe0971b5ed1e44e94a267c0f7650337f21aab8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyPausable.sol:12"
          },
          {
            "contract": "StakingData",
            "label": "stakingThales",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingData.sol:62"
          },
          {
            "contract": "StakingData",
            "label": "escrowThales",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingData.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fc8d3fde4a81ec0624d6ec6dd134fdbc99f357f156838f944ead81e23b562a02": {
      "address": "0x6A602028995C0852B1d8828D896C17EC9a4D6695",
      "txHash": "0x8f8e3e11eadb4b75b4196b9adb8c48656eb3edf41e5e612478b21b3d66c03983",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "thalesAMM",
            "type": "t_contract(IThalesAMM)74857",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:40"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:41"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:43"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:45"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:46"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:47"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:49"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:51"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:52"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:54"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:55"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:57"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:59"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:60"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:62"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:63"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:65"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:66"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:67"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:68"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:70"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)74727",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:72"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:74"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:76"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:78"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:80"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "onlyWhitelistedStakersAllowed",
            "type": "t_bool",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:82"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "whitelistedStakers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:84"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:86"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "marketAlreadyExercisedInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:88"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "roundClosingPrepared",
            "type": "t_bool",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:90"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "usersProcessedInRound",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:92"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "marketsProcessedInRound",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:94"
          }
        ],
        "types": {
          "t_contract(IThalesAMM)74857": {
            "label": "contract IThalesAMM"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)74727": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e91a713fe766f3e5c795d9a3d446e2f321d35f712872bec0bb7cf15667351566": {
      "address": "0xff3b64266F0CfF08138de2C9ceb15E65FddA1fBA",
      "txHash": "0x523574c28ffcceb5dad3798b4a3f1fb12d867fd9fe7092a8e276fc1791183163",
      "layout": {
        "storage": [
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ThalesAMMDefaultLiquidityProvider",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMDefaultLiquidityProvider.sol:14"
          },
          {
            "contract": "ThalesAMMDefaultLiquidityProvider",
            "label": "liquidityPool",
            "type": "t_address",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMDefaultLiquidityProvider.sol:19"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "17d04e2b72bbdd1bdea38127269a75714995c3f208158996b3467becd8a744d7": {
      "address": "0x56948218c8D7E9E7081753904eA9b51f9260084c",
      "txHash": "0x50d1c36a322fa761d87d6e3b477760da5394d81203c2730d29f06a0f36a1425d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ThalesAMM",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)71702",
            "src": "contracts/AMM/ThalesAMM.sol:46"
          },
          {
            "contract": "ThalesAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts/AMM/ThalesAMM.sol:47"
          },
          {
            "contract": "ThalesAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/AMM/ThalesAMM.sol:48"
          },
          {
            "contract": "ThalesAMM",
            "label": "capPerMarket",
            "type": "t_uint256",
            "src": "contracts/AMM/ThalesAMM.sol:50"
          },
          {
            "contract": "ThalesAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts/AMM/ThalesAMM.sol:51"
          },
          {
            "contract": "ThalesAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts/AMM/ThalesAMM.sol:52"
          },
          {
            "contract": "ThalesAMM",
            "label": "impliedVolatilityPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/AMM/ThalesAMM.sol:54"
          },
          {
            "contract": "ThalesAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts/AMM/ThalesAMM.sol:56"
          },
          {
            "contract": "ThalesAMM",
            "label": "spentOnMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/AMM/ThalesAMM.sol:58"
          },
          {
            "contract": "ThalesAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/AMM/ThalesAMM.sol:60"
          },
          {
            "contract": "ThalesAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/AMM/ThalesAMM.sol:61"
          },
          {
            "contract": "ThalesAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)72380",
            "src": "contracts/AMM/ThalesAMM.sol:63"
          },
          {
            "contract": "ThalesAMM",
            "label": "minSupportedPrice",
            "type": "t_uint256",
            "src": "contracts/AMM/ThalesAMM.sol:65"
          },
          {
            "contract": "ThalesAMM",
            "label": "maxSupportedPrice",
            "type": "t_uint256",
            "src": "contracts/AMM/ThalesAMM.sol:66"
          },
          {
            "contract": "ThalesAMM",
            "label": "_capPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/AMM/ThalesAMM.sol:68"
          },
          {
            "contract": "ThalesAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/AMM/ThalesAMM.sol:70"
          },
          {
            "contract": "ThalesAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/AMM/ThalesAMM.sol:72"
          },
          {
            "contract": "ThalesAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/AMM/ThalesAMM.sol:73"
          },
          {
            "contract": "ThalesAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)70818",
            "src": "contracts/AMM/ThalesAMM.sol:75"
          },
          {
            "contract": "ThalesAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/AMM/ThalesAMM.sol:77"
          },
          {
            "contract": "ThalesAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/AMM/ThalesAMM.sol:78"
          },
          {
            "contract": "ThalesAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/AMM/ThalesAMM.sol:79"
          },
          {
            "contract": "ThalesAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/AMM/ThalesAMM.sol:81"
          },
          {
            "contract": "ThalesAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/AMM/ThalesAMM.sol:83"
          },
          {
            "contract": "ThalesAMM",
            "label": "ammUtils",
            "type": "t_contract(IThalesAMMUtils)72635",
            "src": "contracts/AMM/ThalesAMM.sol:85"
          },
          {
            "contract": "ThalesAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/AMM/ThalesAMM.sol:90"
          },
          {
            "contract": "ThalesAMM",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/AMM/ThalesAMM.sol:91"
          },
          {
            "contract": "ThalesAMM",
            "label": "liquidityPool",
            "type": "t_contract(ThalesAMMLiquidityPool)15735",
            "src": "contracts/AMM/ThalesAMM.sol:93"
          }
        ],
        "types": {
          "t_contract(IPriceFeed)71702": {
            "label": "contract IPriceFeed"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)72380": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ICurveSUSD)70818": {
            "label": "contract ICurveSUSD"
          },
          "t_contract(IThalesAMMUtils)72635": {
            "label": "contract IThalesAMMUtils"
          },
          "t_contract(ThalesAMMLiquidityPool)15735": {
            "label": "contract ThalesAMMLiquidityPool"
          }
        }
      }
    },
    "a9d0b717be2db61d69d58463a856448c7e0dda891c25cdf4d9bb055690696cc2": {
      "address": "0xAD20Bd5A5764F557A2B9bD5Fd2dE297e2365a335",
      "txHash": "0xa50fab7ecdcea8467849daa4d7b1e7cedbc5e862efbbdba2f84751ab3a171ca0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyPausable.sol:12"
          },
          {
            "contract": "StakingThales",
            "label": "iEscrowThales",
            "type": "t_contract(IEscrowThales)6962",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:34"
          },
          {
            "contract": "StakingThales",
            "label": "stakingToken",
            "type": "t_contract(IERC20)9941",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:35"
          },
          {
            "contract": "StakingThales",
            "label": "feeToken",
            "type": "t_contract(IERC20)9941",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:36"
          },
          {
            "contract": "StakingThales",
            "label": "SNXRewards",
            "type": "t_contract(ISNXRewards)7332",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:37"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRoyale",
            "type": "t_contract(IThalesRoyale)7619",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:38"
          },
          {
            "contract": "StakingThales",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)7294",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:39"
          },
          {
            "contract": "StakingThales",
            "label": "periodsOfStaking",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:41"
          },
          {
            "contract": "StakingThales",
            "label": "lastPeriodTimeStamp",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:42"
          },
          {
            "contract": "StakingThales",
            "label": "durationPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:43"
          },
          {
            "contract": "StakingThales",
            "label": "unstakeDurationPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:44"
          },
          {
            "contract": "StakingThales",
            "label": "startTimeStamp",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:45"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodRewards",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:46"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodFees",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:47"
          },
          {
            "contract": "StakingThales",
            "label": "distributeFeesEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:48"
          },
          {
            "contract": "StakingThales",
            "label": "fixedPeriodReward",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:49"
          },
          {
            "contract": "StakingThales",
            "label": "periodExtraReward",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:50"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXRewardsInPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:51"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXFeesInPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:52"
          },
          {
            "contract": "StakingThales",
            "label": "claimEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:53"
          },
          {
            "contract": "StakingThales",
            "label": "stakerLifetimeRewardsClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:55"
          },
          {
            "contract": "StakingThales",
            "label": "stakerFeesClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:56"
          },
          {
            "contract": "StakingThales",
            "label": "_totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:58"
          },
          {
            "contract": "StakingThales",
            "label": "_totalEscrowedAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:59"
          },
          {
            "contract": "StakingThales",
            "label": "_totalPendingStakeAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:60"
          },
          {
            "contract": "StakingThales",
            "label": "_totalUnclaimedRewards",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:61"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardsClaimed",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:62"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardFeesClaimed",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:63"
          },
          {
            "contract": "StakingThales",
            "label": "lastUnstakeTime",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:65"
          },
          {
            "contract": "StakingThales",
            "label": "unstaking",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:66"
          },
          {
            "contract": "StakingThales",
            "label": "unstakingAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:67"
          },
          {
            "contract": "StakingThales",
            "label": "_stakedBalances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:68"
          },
          {
            "contract": "StakingThales",
            "label": "_lastRewardsClaimedPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:69"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:70"
          },
          {
            "contract": "StakingThales",
            "label": "lastAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:79"
          },
          {
            "contract": "StakingThales",
            "label": "stakerAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3520_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:80"
          },
          {
            "contract": "StakingThales",
            "label": "extraRewardsActive",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:82"
          },
          {
            "contract": "StakingThales",
            "label": "ThalesStakingRewardsPool",
            "type": "t_contract(IThalesStakingRewardsPool)7629",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:83"
          },
          {
            "contract": "StakingThales",
            "label": "maxSNXRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:85"
          },
          {
            "contract": "StakingThales",
            "label": "maxAMMVolumeRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:86"
          },
          {
            "contract": "StakingThales",
            "label": "AMMVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:87"
          },
          {
            "contract": "StakingThales",
            "label": "maxThalesRoyaleRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:88"
          },
          {
            "contract": "StakingThales",
            "label": "SNXVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:93"
          },
          {
            "contract": "StakingThales",
            "label": "_lastStakingPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:95"
          },
          {
            "contract": "StakingThales",
            "label": "totalStakedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:97"
          },
          {
            "contract": "StakingThales",
            "label": "totalEscrowedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:98"
          },
          {
            "contract": "StakingThales",
            "label": "exoticBonds",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:99"
          },
          {
            "contract": "StakingThales",
            "label": "addressResolver",
            "type": "t_contract(IAddressResolver)6869",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:101"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:103"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:104"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:106"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3520_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:107"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesRangedAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:108"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3520_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:109"
          },
          {
            "contract": "StakingThales",
            "label": "lastExoticMarketsUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:110"
          },
          {
            "contract": "StakingThales",
            "label": "exoticMarketsVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3520_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:111"
          },
          {
            "contract": "StakingThales",
            "label": "lastSportsAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:112"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3520_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:113"
          },
          {
            "contract": "StakingThales",
            "label": "canClaimOnBehalf",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:115"
          },
          {
            "contract": "StakingThales",
            "label": "mergeAccountEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:117"
          },
          {
            "contract": "StakingThales",
            "label": "delegatedVolume",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:119"
          },
          {
            "contract": "StakingThales",
            "label": "supportedSportVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:120"
          },
          {
            "contract": "StakingThales",
            "label": "supportedAMMVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:121"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMLiquidityPool",
            "type": "t_contract(ISportsAMMLiquidityPool)7342",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:123"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMMLiquidityPool",
            "type": "t_contract(IThalesAMMLiquidityPool)7550",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:124"
          }
        ],
        "types": {
          "t_contract(IEscrowThales)6962": {
            "label": "contract IEscrowThales"
          },
          "t_contract(IERC20)9941": {
            "label": "contract IERC20"
          },
          "t_contract(ISNXRewards)7332": {
            "label": "contract ISNXRewards"
          },
          "t_contract(IThalesRoyale)7619": {
            "label": "contract IThalesRoyale"
          },
          "t_contract(IPriceFeed)7294": {
            "label": "contract IPriceFeed"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3520_storage)4_storage)": {
            "label": "mapping(address => struct StakingThales.AMMVolumeEntry[4])"
          },
          "t_array(t_struct(AMMVolumeEntry)3520_storage)4_storage": {
            "label": "struct StakingThales.AMMVolumeEntry[4]"
          },
          "t_struct(AMMVolumeEntry)3520_storage": {
            "label": "struct StakingThales.AMMVolumeEntry",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "period",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IThalesStakingRewardsPool)7629": {
            "label": "contract IThalesStakingRewardsPool"
          },
          "t_contract(IAddressResolver)6869": {
            "label": "contract IAddressResolver"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_contract(ISportsAMMLiquidityPool)7342": {
            "label": "contract ISportsAMMLiquidityPool"
          },
          "t_contract(IThalesAMMLiquidityPool)7550": {
            "label": "contract IThalesAMMLiquidityPool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "461518a59f0d0b624b72235bbfd1a0d25baca0f16a2d7df0d37ad3ae7e619e96": {
      "address": "0xbB1C5dA571183AA807f04ef4471a1D29451a7EEe",
      "txHash": "0x900dcf88e6749e632936da8984d6cad76307c95d93f77d939f9e165a784d2023",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "durations",
            "type": "t_struct(Durations)28949_storage",
            "src": "contracts/Positions/PositionalMarketManager.sol:47"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "capitalRequirement",
            "type": "t_uint256",
            "src": "contracts/Positions/PositionalMarketManager.sol:48"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/Positions/PositionalMarketManager.sol:50"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "customMarketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/Positions/PositionalMarketManager.sol:51"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "onlyWhitelistedAddressesCanCreateMarkets",
            "type": "t_bool",
            "src": "contracts/Positions/PositionalMarketManager.sol:53"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Positions/PositionalMarketManager.sol:54"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts/Positions/PositionalMarketManager.sol:56"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)79719_storage",
            "src": "contracts/Positions/PositionalMarketManager.sol:58"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)79719_storage",
            "src": "contracts/Positions/PositionalMarketManager.sol:59"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "_migratingManager",
            "type": "t_contract(PositionalMarketManager)30542",
            "src": "contracts/Positions/PositionalMarketManager.sol:61"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)74046",
            "src": "contracts/Positions/PositionalMarketManager.sol:63"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "sUSD",
            "type": "t_contract(IERC20)4879",
            "src": "contracts/Positions/PositionalMarketManager.sol:64"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "positionalMarketFactory",
            "type": "t_address",
            "src": "contracts/Positions/PositionalMarketManager.sol:66"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts/Positions/PositionalMarketManager.sol:68"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "timeframeBuffer",
            "type": "t_uint256",
            "src": "contracts/Positions/PositionalMarketManager.sol:70"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "priceBuffer",
            "type": "t_uint256",
            "src": "contracts/Positions/PositionalMarketManager.sol:71"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketsPerOracleKey",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_array(t_address)dyn_storage))",
            "src": "contracts/Positions/PositionalMarketManager.sol:73"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketsStrikePrice",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Positions/PositionalMarketManager.sol:74"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "onlyAMMMintingAndBurning",
            "type": "t_bool",
            "src": "contracts/Positions/PositionalMarketManager.sol:76"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketCreationMonthLimit",
            "type": "t_uint256",
            "src": "contracts/Positions/PositionalMarketManager.sol:78"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "allowedDate1",
            "type": "t_uint256",
            "src": "contracts/Positions/PositionalMarketManager.sol:80"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "allowedDate2",
            "type": "t_uint256",
            "src": "contracts/Positions/PositionalMarketManager.sol:81"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketExistsByOracleKeyDateAndStrikePrice",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))",
            "src": "contracts/Positions/PositionalMarketManager.sol:83"
          }
        ],
        "types": {
          "t_struct(Durations)28949_storage": {
            "label": "struct PositionalMarketManager.Durations",
            "members": [
              {
                "label": "expiryDuration",
                "type": "t_uint256"
              },
              {
                "label": "maxTimeToMaturity",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(AddressSet)79719_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(PositionalMarketManager)30542": {
            "label": "contract PositionalMarketManager"
          },
          "t_contract(IPriceFeed)74046": {
            "label": "contract IPriceFeed"
          },
          "t_contract(IERC20)4879": {
            "label": "contract IERC20"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_array(t_address)dyn_storage))": {
            "label": "mapping(bytes32 => mapping(uint256 => address[]))"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))": {
            "label": "mapping(bytes32 => mapping(uint256 => mapping(uint256 => address)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint256 => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          }
        }
      }
    },
    "17d504fca0f12115f565411e41c84b1a12543dd85b6e8ca16941c4c8e9d98a74": {
      "address": "0x68d8d0C1738905814C786351918986ec50BcD7b9",
      "txHash": "0xce92d0fefd8bddab6c4dcb8e141fb1698a7d9d87c37efd2811d71350c42f9f3a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "durations",
            "type": "t_struct(Durations)28949_storage",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:47"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "capitalRequirement",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:48"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketCreationEnabled",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:50"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "customMarketCreationEnabled",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:51"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "onlyWhitelistedAddressesCanCreateMarkets",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:53"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:54"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:56"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)79706_storage",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:58"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)79706_storage",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:59"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "_migratingManager",
            "type": "t_contract(PositionalMarketManager)30529",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:61"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)74033",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:63"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "sUSD",
            "type": "t_contract(IERC20)4879",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:64"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "positionalMarketFactory",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:66"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:68"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "timeframeBuffer",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:70"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "priceBuffer",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:71"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketsPerOracleKey",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_array(t_address)dyn_storage))",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:73"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketsStrikePrice",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:74"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "onlyAMMMintingAndBurning",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:76"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketCreationMonthLimit",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:78"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "allowedDate1",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:80"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "allowedDate2",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:81"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketExistsByOracleKeyDateAndStrikePrice",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:83"
          }
        ],
        "types": {
          "t_struct(Durations)28949_storage": {
            "label": "struct PositionalMarketManager.Durations",
            "members": [
              {
                "label": "expiryDuration",
                "type": "t_uint256"
              },
              {
                "label": "maxTimeToMaturity",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(AddressSet)79706_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(PositionalMarketManager)30529": {
            "label": "contract PositionalMarketManager"
          },
          "t_contract(IPriceFeed)74033": {
            "label": "contract IPriceFeed"
          },
          "t_contract(IERC20)4879": {
            "label": "contract IERC20"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_array(t_address)dyn_storage))": {
            "label": "mapping(bytes32 => mapping(uint256 => address[]))"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))": {
            "label": "mapping(bytes32 => mapping(uint256 => mapping(uint256 => address)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint256 => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          }
        }
      }
    },
    "69969fe717b962316c1cd73c6e3da4b28d84e82d2047814b1fd8c8858060f918": {
      "address": "0x463ebE08f61feCfAc5f2D5dCbdB2293d96CE6db7",
      "txHash": "0xfb25066ef84d7b99f848844130cd76b81adff58196a855114f9081c3e7200685",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "thalesAMM",
            "type": "t_contract(IThalesAMM)74975",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:41"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:42"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:44"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:46"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:47"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:48"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:50"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:52"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:53"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:55"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:56"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:58"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:60"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:61"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:63"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:64"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:66"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:67"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:68"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:69"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:71"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)74845",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:73"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:75"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:77"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:79"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:81"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "onlyWhitelistedStakersAllowed",
            "type": "t_bool",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:83"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "whitelistedStakers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:85"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:87"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "marketAlreadyExercisedInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:89"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "roundClosingPrepared",
            "type": "t_bool",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:91"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "usersProcessedInRound",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:93"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "marketsProcessedInRound",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:95"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "withdrawalShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:97"
          }
        ],
        "types": {
          "t_contract(IThalesAMM)74975": {
            "label": "contract IThalesAMM"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)74845": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "07349126864a489de114d1eca4b56e61fe6129b395f1afc17de003f399ee4187": {
      "address": "0x40b8F4852eB5394c1EcABc1bEf09016a868f90FC",
      "txHash": "0x02035218f46a575fb7e8300c85c7e7530917c9f4643f0ad007e3e62fc0325b05",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "thalesAMM",
            "type": "t_contract(IThalesAMM)74942",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:41"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:42"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:44"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:46"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:47"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:48"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:50"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:52"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:53"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:55"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:56"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:58"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:60"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:61"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:63"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:64"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:66"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:67"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:68"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:69"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:71"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)74812",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:73"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:75"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:77"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:79"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:81"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "onlyWhitelistedStakersAllowed",
            "type": "t_bool",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:83"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "whitelistedStakers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:85"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:87"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "marketAlreadyExercisedInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:89"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "roundClosingPrepared",
            "type": "t_bool",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:91"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "usersProcessedInRound",
            "type": "t_uint256",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:93"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "marketsProcessedInRound",
            "type": "t_uint256",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:95"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "withdrawalShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/AMM/LiquidityPool/ThalesAMMLiquidityPool.sol:97"
          }
        ],
        "types": {
          "t_contract(IThalesAMM)74942": {
            "label": "contract IThalesAMM"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)74812": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7206402cf47a9d785ea088c28ee652281ab00ae6ebe36e53e9b1be12a36da82a": {
      "address": "0x7ce099733e08f6e2c18251278D0E195a697d3016",
      "txHash": "0xfcaf8b75d0deef4fb9c1738fd5ffe79c3a1858d1225ca9415408efc9431261dc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "f7d4ec6be99aa9e7fb8128c109f8ca5e4f2b781a3a3b3fe091d4a6f9a87af28b": {
      "address": "0xa1C8b7821377Aeb51E37EB9Fb4374adF1111FbFF",
      "txHash": "0x7693f16d70a4dadab4f6c888c01a1946ddacf8d88da7e173dda212d0fcad0cf8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:59"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:60"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:63"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:64"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:65"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)45394_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:68"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)45405_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:69"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)45414_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:70"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:71"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:72"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:73"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:76"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:77"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:78"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:79"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)68058",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:82"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:83"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:84"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:85"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:86"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)45346",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:89"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:90"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:94"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:95"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:96"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:97"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOnADate",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:98"
          },
          {
            "contract": "TherundownConsumer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)68946",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:100"
          },
          {
            "contract": "TherundownConsumer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)45414_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:101"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsObtainer",
            "type": "t_contract(IGamesOddsObtainer)67054",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:102"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)45394_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)45394_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)45405_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)45405_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)45414_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)45414_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)68058": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)45346": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          },
          "t_contract(ITherundownConsumerVerifier)68946": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(IGamesOddsObtainer)67054": {
            "label": "contract IGamesOddsObtainer"
          }
        }
      }
    },
    "8092378d0ddd5eb625b955093b0d0d9bbfe684f833f1eaa3de38c75b2c75e60a": {
      "address": "0x3c81607588AD6A99C31BBFaB9Aa3C430dA9b4e3a",
      "txHash": "0xbb5048e19f621a562878b7507495e840eafbaeb74d8289cc4877924b4215af42",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)68755",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:32"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)68883",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:33"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)68002",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:34"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)66795_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:37"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)66795_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:38"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:39"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:40"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:41"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "doesSportSupportSpreadAndTotal",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:42"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:45"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:46"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketSpreadChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_int16,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:47"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketTotalChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_uint24,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:48"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:49"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketSread",
            "type": "t_mapping(t_address,t_int16)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:50"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketTotal",
            "type": "t_mapping(t_address,t_uint24)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:51"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveTotalChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:52"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveSpreadChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:53"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "isSpreadChildMarket",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:54"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:55"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "normalizedOddsForMarketFulfilled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:56"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "normalizedOddsForMarket",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:57"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsReceiver",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:58"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)68755": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)68883": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)68002": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)66795_storage)": {
            "label": "mapping(bytes32 => struct IGamesOddsObtainer.GameOdds)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(GameOdds)66795_storage": {
            "label": "struct IGamesOddsObtainer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadHome",
                "type": "t_int16"
              },
              {
                "label": "spreadHomeOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadAway",
                "type": "t_int16"
              },
              {
                "label": "spreadAwayOdds",
                "type": "t_int24"
              },
              {
                "label": "totalOver",
                "type": "t_uint24"
              },
              {
                "label": "totalOverOdds",
                "type": "t_int24"
              },
              {
                "label": "totalUnder",
                "type": "t_uint24"
              },
              {
                "label": "totalUnderOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_int24": {
            "label": "int24"
          },
          "t_int16": {
            "label": "int16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_int16,t_address))": {
            "label": "mapping(address => mapping(int16 => address))"
          },
          "t_mapping(t_int16,t_address)": {
            "label": "mapping(int16 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint24,t_address))": {
            "label": "mapping(address => mapping(uint24 => address))"
          },
          "t_mapping(t_uint24,t_address)": {
            "label": "mapping(uint24 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_int16)": {
            "label": "mapping(address => int16)"
          },
          "t_mapping(t_address,t_uint24)": {
            "label": "mapping(address => uint24)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "c0b8de00f05634c18e5505a586383de90379d588f8fd169c7c030cb761d83a4c": {
      "address": "0xD3749bed5F3Be45676362607Da9f4AABCfdcc807",
      "txHash": "0x5d7aaea348b1a4733fee4843e7f7e76621f4c0aa05e413361b738d63b6184af0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts/SportMarkets/SportsAMM.sol:39"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:42"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:46"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:49"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:52"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:56"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:65"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:68"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:71"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:74"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)68110",
            "src": "contracts/SportMarkets/SportsAMM.sol:77"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:80"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:83"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)66510",
            "src": "contracts/SportMarkets/SportsAMM.sol:86"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:89"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:92"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:95"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportsAMM.sol:98"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:101"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:104"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:107"
          },
          {
            "contract": "SportsAMM",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:110"
          },
          {
            "contract": "SportsAMM",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:113"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:116"
          },
          {
            "contract": "SportsAMM",
            "label": "sportAmmUtils",
            "type": "t_contract(SportsAMMUtils)62434",
            "src": "contracts/SportMarkets/SportsAMM.sol:118"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:121"
          },
          {
            "contract": "SportsAMM",
            "label": "thresholdForOddsUpdate",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:125"
          },
          {
            "contract": "SportsAMM",
            "label": "wrapper",
            "type": "t_contract(ITherundownConsumerWrapper)68724",
            "src": "contracts/SportMarkets/SportsAMM.sol:128"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:131"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:134"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSportAndChild",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/SportMarkets/SportsAMM.sol:137"
          },
          {
            "contract": "SportsAMM",
            "label": "liquidityPool",
            "type": "t_contract(SportAMMLiquidityPool)33865",
            "src": "contracts/SportMarkets/SportsAMM.sol:157"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spreadPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:160"
          },
          {
            "contract": "SportsAMM",
            "label": "minSpreadPerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/SportMarkets/SportsAMM.sol:163"
          },
          {
            "contract": "SportsAMM",
            "label": "isMarketForSportOnePositional",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/SportsAMM.sol:166"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)68110": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)66510": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(SportsAMMUtils)62434": {
            "label": "contract SportsAMMUtils"
          },
          "t_contract(ITherundownConsumerWrapper)68724": {
            "label": "contract ITherundownConsumerWrapper"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(SportAMMLiquidityPool)33865": {
            "label": "contract SportAMMLiquidityPool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "96cd8ee3f36e2601312f4eedfa1dbdef9b58d86926a7c330cfa04fd5aa238028": {
      "address": "0xF281CB21C9F0E9349bDfd7DbdAbAa958381fbdF4",
      "txHash": "0x08b208c7e97b8809984bdd781b0de8fe40cf064380759cc462eaeb9a38d2887f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:59"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:60"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:63"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:64"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:65"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)917_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:68"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)928_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:69"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)937_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:70"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:71"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:72"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:73"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:76"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:77"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:78"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:79"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)4379",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:82"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:83"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:84"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:85"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:86"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)869",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:89"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:90"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:94"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:95"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:96"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:97"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOnADate",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:98"
          },
          {
            "contract": "TherundownConsumer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)4507",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:100"
          },
          {
            "contract": "TherundownConsumer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)937_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:101"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsObtainer",
            "type": "t_contract(IGamesOddsObtainer)3693",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:102"
          },
          {
            "contract": "TherundownConsumer",
            "label": "maxNumberOfMarketsToResolve",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:103"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)917_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)917_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)928_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)928_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)937_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)937_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)4379": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)869": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          },
          "t_contract(ITherundownConsumerVerifier)4507": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(IGamesOddsObtainer)3693": {
            "label": "contract IGamesOddsObtainer"
          }
        }
      }
    },
    "6da0226c5ee779c788297e9b1f1fdf0335e9fbf23f663996f91193d8dbe295e1": {
      "address": "0xde0e98D7A46D16Ea51D0825b6d972C71BD2d260F",
      "txHash": "0x8ee9e59a7abcffb2f8b242cf1f2c270945317670884d375ddd7d4b0849fef8ed",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesQueue",
            "label": "gamesCreateQueue",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:16"
          },
          {
            "contract": "GamesQueue",
            "label": "existingGamesInCreatedQueue",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:17"
          },
          {
            "contract": "GamesQueue",
            "label": "firstCreated",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:18"
          },
          {
            "contract": "GamesQueue",
            "label": "lastCreated",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:19"
          },
          {
            "contract": "GamesQueue",
            "label": "gameStartPerGameId",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:20"
          },
          {
            "contract": "GamesQueue",
            "label": "unproccessedGames",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:23"
          },
          {
            "contract": "GamesQueue",
            "label": "unproccessedGamesIndex",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:24"
          },
          {
            "contract": "GamesQueue",
            "label": "gamesResolvedQueue",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:25"
          },
          {
            "contract": "GamesQueue",
            "label": "existingGamesInResolvedQueue",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:26"
          },
          {
            "contract": "GamesQueue",
            "label": "firstResolved",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:27"
          },
          {
            "contract": "GamesQueue",
            "label": "lastResolved",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:28"
          },
          {
            "contract": "GamesQueue",
            "label": "consumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:30"
          },
          {
            "contract": "GamesQueue",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:31"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "3af2cfeb136679a9da1d3f10d3d8777ec9e5e79cebc126ac7549f340dbda71de": {
      "address": "0xF03bD45756838e0Bf9c37c52f9661b0E096e2D12",
      "txHash": "0xee8d858134712356a864da6bbfb83277ce4cec99290495e9eb4393a538a09479",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)77946",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:32"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)78074",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:33"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)77077",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:34"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)75816_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:37"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)75816_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:38"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:39"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:40"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:41"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "doesSportSupportSpreadAndTotal",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:42"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:45"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:46"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketSpreadChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_int16,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:47"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketTotalChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_uint24,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:48"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:49"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketSread",
            "type": "t_mapping(t_address,t_int16)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:50"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketTotal",
            "type": "t_mapping(t_address,t_uint24)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:51"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveTotalChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:52"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveSpreadChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:53"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "isSpreadChildMarket",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:54"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:55"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "normalizedOddsForMarketFulfilled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:56"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "normalizedOddsForMarket",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:57"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsReceiver",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:58"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)77946": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)78074": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)77077": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)75816_storage)": {
            "label": "mapping(bytes32 => struct IGamesOddsObtainer.GameOdds)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(GameOdds)75816_storage": {
            "label": "struct IGamesOddsObtainer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadHome",
                "type": "t_int16"
              },
              {
                "label": "spreadHomeOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadAway",
                "type": "t_int16"
              },
              {
                "label": "spreadAwayOdds",
                "type": "t_int24"
              },
              {
                "label": "totalOver",
                "type": "t_uint24"
              },
              {
                "label": "totalOverOdds",
                "type": "t_int24"
              },
              {
                "label": "totalUnder",
                "type": "t_uint24"
              },
              {
                "label": "totalUnderOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_int24": {
            "label": "int24"
          },
          "t_int16": {
            "label": "int16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_int16,t_address))": {
            "label": "mapping(address => mapping(int16 => address))"
          },
          "t_mapping(t_int16,t_address)": {
            "label": "mapping(int16 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint24,t_address))": {
            "label": "mapping(address => mapping(uint24 => address))"
          },
          "t_mapping(t_uint24,t_address)": {
            "label": "mapping(uint24 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_int16)": {
            "label": "mapping(address => int16)"
          },
          "t_mapping(t_address,t_uint24)": {
            "label": "mapping(address => uint24)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "b36159dbb23bccecae28a8e092b6741fab6b95aaa9e2fab30bdb5eff0eddff8e": {
      "address": "0xF6ea86a971af8fDe94B9E50A806fC21cB02639B3",
      "txHash": "0x8da13f02cb5c1aa9fc94ec21d636d9d61ec3c0626791913c587f20375ba7e592",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:88"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:89"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "oddsObtainer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:90"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "consumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:91"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "voucherEscrow",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:92"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a2ca5a5f10f292a2d95d07e6d9a7b6eb44ba1bced1695cd52647c443ac9e92b5": {
      "address": "0x76615f03AfFA958eB781Df4a76D43eecd92a5197",
      "txHash": "0xd264fc96fa9c001dd3ca1754a8466fe3e95ec624a49da612172a9eba0afdda84",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketData.sol:88"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketData.sol:89"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "oddsObtainer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketData.sol:90"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "consumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketData.sol:91"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "voucherEscrow",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketData.sol:92"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "fca9217f068ff8f5b150f5b4934155f80e91c7810435e11844bd0106cdba939c": {
      "address": "0x1657b9F7A6B3946d0F97e0301ff1215569021308",
      "txHash": "0x2ebde68c12a268901d3962db1c1d48b09761948aa10cf03ceeb174d2fe1af2e7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ParlayMarketData",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)12700_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:16"
          },
          {
            "contract": "ParlayMarketData",
            "label": "_parlaysInGamePosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)12700_storage))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:29"
          },
          {
            "contract": "ParlayMarketData",
            "label": "gameAddressPositionParlay",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:31"
          },
          {
            "contract": "ParlayMarketData",
            "label": "numOfParlaysInGamePosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:32"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayDetails",
            "type": "t_mapping(t_address,t_struct(ParlayDetails)3111_storage)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:34"
          },
          {
            "contract": "ParlayMarketData",
            "label": "userParlays",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:35"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayOwner",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:36"
          },
          {
            "contract": "ParlayMarketData",
            "label": "userNumOfParlays",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:37"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayMarketsAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:38"
          }
        ],
        "types": {
          "t_struct(AddressSet)12700_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)12700_storage))": {
            "label": "mapping(address => mapping(uint256 => struct AddressSetLib.AddressSet))"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)12700_storage)": {
            "label": "mapping(uint256 => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))": {
            "label": "mapping(address => mapping(uint256 => mapping(uint256 => address)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint256 => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(ParlayDetails)3111_storage)": {
            "label": "mapping(address => struct ParlayMarketData.ParlayDetails)"
          },
          "t_struct(ParlayDetails)3111_storage": {
            "label": "struct ParlayMarketData.ParlayDetails",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "sUSDPaid",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b511f157ac86e77c348a1017ecce86867708f23415fdd7d5ac75bd2cb01e6256": {
      "address": "0x68AB05C73Ad09D62eFd74a9DD1A0f9f87233374d",
      "txHash": "0xfd6c0970b5f6b8e6b81d73a48fc126e1fa3d110d47833f58337cf0efab0272da",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ParlayMarketData",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)12783_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:16"
          },
          {
            "contract": "ParlayMarketData",
            "label": "_parlaysInGamePosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)12783_storage))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:29"
          },
          {
            "contract": "ParlayMarketData",
            "label": "gameAddressPositionParlay",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:31"
          },
          {
            "contract": "ParlayMarketData",
            "label": "numOfParlaysInGamePosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:32"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayDetails",
            "type": "t_mapping(t_address,t_struct(ParlayDetails)3111_storage)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:34"
          },
          {
            "contract": "ParlayMarketData",
            "label": "userParlays",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:35"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayOwner",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:36"
          },
          {
            "contract": "ParlayMarketData",
            "label": "userNumOfParlays",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:37"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayMarketsAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:38"
          }
        ],
        "types": {
          "t_struct(AddressSet)12783_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)12783_storage))": {
            "label": "mapping(address => mapping(uint256 => struct AddressSetLib.AddressSet))"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)12783_storage)": {
            "label": "mapping(uint256 => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))": {
            "label": "mapping(address => mapping(uint256 => mapping(uint256 => address)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint256 => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(ParlayDetails)3111_storage)": {
            "label": "mapping(address => struct ParlayMarketData.ParlayDetails)"
          },
          "t_struct(ParlayDetails)3111_storage": {
            "label": "struct ParlayMarketData.ParlayDetails",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "sUSDPaid",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "be3132707c747bb755f64753955da11740cf89fa8455457e5fd59637a574f716": {
      "address": "0xe853992cd52a0ca85cE90C5DD3Db6703aB4aCdd5",
      "txHash": "0x29f1f1945d125c4bf4f72c0b601c4b14b2c50bed76e6b55785bb2597cb46c8dd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ParlayMarketData",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)12769_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:16"
          },
          {
            "contract": "ParlayMarketData",
            "label": "_parlaysInGamePosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)12769_storage))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:29"
          },
          {
            "contract": "ParlayMarketData",
            "label": "gameAddressPositionParlay",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:31"
          },
          {
            "contract": "ParlayMarketData",
            "label": "numOfParlaysInGamePosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:32"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayDetails",
            "type": "t_mapping(t_address,t_struct(ParlayDetails)3111_storage)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:34"
          },
          {
            "contract": "ParlayMarketData",
            "label": "userParlays",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:35"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayOwner",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:36"
          },
          {
            "contract": "ParlayMarketData",
            "label": "userNumOfParlays",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:37"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayMarketsAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:38"
          }
        ],
        "types": {
          "t_struct(AddressSet)12769_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)12769_storage))": {
            "label": "mapping(address => mapping(uint256 => struct AddressSetLib.AddressSet))"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)12769_storage)": {
            "label": "mapping(uint256 => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))": {
            "label": "mapping(address => mapping(uint256 => mapping(uint256 => address)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint256 => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(ParlayDetails)3111_storage)": {
            "label": "mapping(address => struct ParlayMarketData.ParlayDetails)"
          },
          "t_struct(ParlayDetails)3111_storage": {
            "label": "struct ParlayMarketData.ParlayDetails",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "sUSDPaid",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e4e62574b44f9de1354dcebaf135b70e32f65ba7a604302c550559398124e8c9": {
      "address": "0xfA540c198D59235a514c2a701589781A584C6119",
      "txHash": "0xb6d215dc4ec505dd16de2f1a77b3af8128cca60f16d2965308387e9eddf26fd5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ParlayMarketData",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)81107_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:16"
          },
          {
            "contract": "ParlayMarketData",
            "label": "_parlaysInGamePosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)81107_storage))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:29"
          },
          {
            "contract": "ParlayMarketData",
            "label": "gameAddressPositionParlay",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:31"
          },
          {
            "contract": "ParlayMarketData",
            "label": "numOfParlaysInGamePosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:32"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayDetails",
            "type": "t_mapping(t_address,t_struct(ParlayDetails)44072_storage)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:34"
          },
          {
            "contract": "ParlayMarketData",
            "label": "userParlays",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:35"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayOwner",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:36"
          },
          {
            "contract": "ParlayMarketData",
            "label": "userNumOfParlays",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:37"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayMarketsAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:38"
          }
        ],
        "types": {
          "t_struct(AddressSet)81107_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)81107_storage))": {
            "label": "mapping(address => mapping(uint256 => struct AddressSetLib.AddressSet))"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)81107_storage)": {
            "label": "mapping(uint256 => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))": {
            "label": "mapping(address => mapping(uint256 => mapping(uint256 => address)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint256 => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(ParlayDetails)44072_storage)": {
            "label": "mapping(address => struct ParlayMarketData.ParlayDetails)"
          },
          "t_struct(ParlayDetails)44072_storage": {
            "label": "struct ParlayMarketData.ParlayDetails",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "sUSDPaid",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "fb8dbecd0fbc35ec0104082abfd5e081ed94551e2ea881c74992505cb23bd950": {
      "address": "0xABD3cF065911054201DC162cD4f6a25d42eE4681",
      "txHash": "0xc9bf41f70d7a4a62a243897095cc389d15561224c72bcb9dbe4f9aeb2510039e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "PositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:102"
          },
          {
            "contract": "PositionalMarketData",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:103"
          },
          {
            "contract": "PositionalMarketData",
            "label": "rangedMarketsAMM",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:104"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "28065080cdb6538d06a57d1454b39036ff0fb5c663eb04448b1a205e998cef47": {
      "address": "0x3061921C6cb1e61F2C8f9d75EC767187a88784f6",
      "txHash": "0x6139606e8d3153f93732bea46bea996006e8fad8139691d2fec3976567f69cfd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:88"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:89"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "oddsObtainer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:90"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "consumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:91"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "voucherEscrow",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:92"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5e3daf60e88b5e877a2f5efa2b9f82f5ecc85be80fa1796ad869c4a7f1cbee96": {
      "address": "0x73E5563375c94207c86623358708e3ff61D1bF65",
      "txHash": "0xe1e509190eaaf8978190bec6f3ac5dcd7857a1153e007203bd37495000975b69",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)77282",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:37"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)77087",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:38"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:39"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)77369",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)75706",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:44"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:52"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:55"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:60"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)82348_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:63"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)50534",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:69"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:70"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerGameCombination",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:73"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:77"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:79"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerPackedGamesCombination",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:81"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "SGPfeePerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:83"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "SGPFeePerCombination",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:85"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)77282": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)77087": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)77369": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)75706": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)82348_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)50534": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => uint256))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          }
        }
      }
    },
    "a07edbf3b71696ff193cc4145ce497277a8246144d54b8e27f911a2f3693fa87": {
      "address": "0xCEb5D113c96Ec7bC1eB9C450136E726C63AEffE5",
      "txHash": "0xb4ac30ff2bc2abf82d8f3165887a969168bf9cade112ce46f335fed3638ba661",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)78181",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:32"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)78309",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:33"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)77312",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:34"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)76051_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:37"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)76051_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:38"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:39"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:40"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:41"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "doesSportSupportSpreadAndTotal",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:42"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:45"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:46"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketSpreadChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_int16,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:47"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketTotalChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_uint24,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:48"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:49"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketSread",
            "type": "t_mapping(t_address,t_int16)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:50"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketTotal",
            "type": "t_mapping(t_address,t_uint24)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:51"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveTotalChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:52"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveSpreadChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:53"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "isSpreadChildMarket",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:54"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:55"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "normalizedOddsForMarketFulfilled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:56"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "normalizedOddsForMarket",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:57"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsReceiver",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:58"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)78181": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)78309": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)77312": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)76051_storage)": {
            "label": "mapping(bytes32 => struct IGamesOddsObtainer.GameOdds)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(GameOdds)76051_storage": {
            "label": "struct IGamesOddsObtainer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadHome",
                "type": "t_int16"
              },
              {
                "label": "spreadHomeOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadAway",
                "type": "t_int16"
              },
              {
                "label": "spreadAwayOdds",
                "type": "t_int24"
              },
              {
                "label": "totalOver",
                "type": "t_uint24"
              },
              {
                "label": "totalOverOdds",
                "type": "t_int24"
              },
              {
                "label": "totalUnder",
                "type": "t_uint24"
              },
              {
                "label": "totalUnderOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_int24": {
            "label": "int24"
          },
          "t_int16": {
            "label": "int16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_int16,t_address))": {
            "label": "mapping(address => mapping(int16 => address))"
          },
          "t_mapping(t_int16,t_address)": {
            "label": "mapping(int16 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint24,t_address))": {
            "label": "mapping(address => mapping(uint24 => address))"
          },
          "t_mapping(t_uint24,t_address)": {
            "label": "mapping(uint24 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_int16)": {
            "label": "mapping(address => int16)"
          },
          "t_mapping(t_address,t_uint24)": {
            "label": "mapping(address => uint24)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "2cfecb4eeb99cb38c253f0e22261afe762fe4bfa7c6535b2b8651466ef2fa771": {
      "address": "0x6d11AAFA41144EC3420B0d515A88186ddFfFbD11",
      "txHash": "0x3978cf23f00e6b89c642cabfb2f12eae294ff7b20cd56896fb76ac74b2c39044",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "parlayAMM",
            "type": "t_contract(IParlayMarketsAMM)80226",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:44"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:45"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:47"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:49"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:50"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:51"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:53"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:55"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:56"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:58"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:59"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:61"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:63"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:64"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:66"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:67"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:69"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:70"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:71"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:72"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:74"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)81276",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:76"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:78"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:80"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:82"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:84"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "onlyWhitelistedStakersAllowed",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:86"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "whitelistedStakers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:88"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:90"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "marketAlreadyExercisedInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:92"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "roundClosingPrepared",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:94"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "usersProcessedInRound",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:96"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "withdrawalShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:98"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "parlayMarketRound",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:100"
          }
        ],
        "types": {
          "t_contract(IParlayMarketsAMM)80226": {
            "label": "contract IParlayMarketsAMM"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)81276": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b3f57758bd18eab9f293156b85b84b936b2a2fd49b29a83acee03f9541af21b2": {
      "address": "0xa01a9f8b3Ae18dDF755166F7eD93A2796Cd3fF27",
      "txHash": "0x755e783ca8f423f6f8b23940b827330a89de8d7ca5ca354c9fbfcef10eaadf8a",
      "layout": {
        "storage": [
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "DefaultLiquidityProvider",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts/SportMarkets/LiquidityPool/DefaultLiquidityProvider.sol:14"
          },
          {
            "contract": "DefaultLiquidityProvider",
            "label": "liquidityPool",
            "type": "t_address",
            "src": "contracts/SportMarkets/LiquidityPool/DefaultLiquidityProvider.sol:19"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4b1ac1ba855a683c1622d66ac1d70ce16f5cd54029209e60e8253c8d8c6cb819": {
      "address": "0x182589cAef55F795D84F120e30AEB2D17655a347",
      "txHash": "0x359478021f862db3465c0b05cf75c7c845daa7d2418c6836949ba678a302e277",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "parlayAMM",
            "type": "t_contract(IParlayMarketsAMM)80087",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:43"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:44"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:46"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:48"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:49"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:50"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:52"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:54"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:55"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:57"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:58"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:60"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:62"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:63"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:65"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:66"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:68"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:69"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:70"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:71"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:73"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)81137",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:75"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:77"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:79"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:81"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:83"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "onlyWhitelistedStakersAllowed",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:85"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "whitelistedStakers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:87"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:89"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "marketAlreadyExercisedInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:91"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "roundClosingPrepared",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:93"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "usersProcessedInRound",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:95"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "withdrawalShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:97"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "parlayMarketRound",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:99"
          }
        ],
        "types": {
          "t_contract(IParlayMarketsAMM)80087": {
            "label": "contract IParlayMarketsAMM"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)81137": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ad6b9432a182af49ac93e91cd2318f177b512e57ad0cbaed67b19252529cea79": {
      "address": "0x6CF1cEa4ce114345c76F1Ff22e0E194Cdc80c614",
      "txHash": "0x3a79342383e41f5fc86022cdf78a59428ae24ad44788a090b33a1e7d97705f67",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyPausable.sol:12"
          },
          {
            "contract": "StakingThales",
            "label": "iEscrowThales",
            "type": "t_contract(IEscrowThales)6995",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:35"
          },
          {
            "contract": "StakingThales",
            "label": "stakingToken",
            "type": "t_contract(IERC20)10012",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:36"
          },
          {
            "contract": "StakingThales",
            "label": "feeToken",
            "type": "t_contract(IERC20)10012",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:37"
          },
          {
            "contract": "StakingThales",
            "label": "SNXRewards",
            "type": "t_contract(ISNXRewards)7403",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:38"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRoyale",
            "type": "t_contract(IThalesRoyale)7690",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:39"
          },
          {
            "contract": "StakingThales",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)7365",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:40"
          },
          {
            "contract": "StakingThales",
            "label": "periodsOfStaking",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:42"
          },
          {
            "contract": "StakingThales",
            "label": "lastPeriodTimeStamp",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:43"
          },
          {
            "contract": "StakingThales",
            "label": "durationPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:44"
          },
          {
            "contract": "StakingThales",
            "label": "unstakeDurationPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:45"
          },
          {
            "contract": "StakingThales",
            "label": "startTimeStamp",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:46"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodRewards",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:47"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodFees",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:48"
          },
          {
            "contract": "StakingThales",
            "label": "distributeFeesEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:49"
          },
          {
            "contract": "StakingThales",
            "label": "fixedPeriodReward",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:50"
          },
          {
            "contract": "StakingThales",
            "label": "periodExtraReward",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:51"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXRewardsInPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:52"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXFeesInPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:53"
          },
          {
            "contract": "StakingThales",
            "label": "claimEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:54"
          },
          {
            "contract": "StakingThales",
            "label": "stakerLifetimeRewardsClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:56"
          },
          {
            "contract": "StakingThales",
            "label": "stakerFeesClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:57"
          },
          {
            "contract": "StakingThales",
            "label": "_totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:59"
          },
          {
            "contract": "StakingThales",
            "label": "_totalEscrowedAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:60"
          },
          {
            "contract": "StakingThales",
            "label": "_totalPendingStakeAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:61"
          },
          {
            "contract": "StakingThales",
            "label": "_totalUnclaimedRewards",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:62"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardsClaimed",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:63"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardFeesClaimed",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:64"
          },
          {
            "contract": "StakingThales",
            "label": "lastUnstakeTime",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:66"
          },
          {
            "contract": "StakingThales",
            "label": "unstaking",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:67"
          },
          {
            "contract": "StakingThales",
            "label": "unstakingAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:68"
          },
          {
            "contract": "StakingThales",
            "label": "_stakedBalances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:69"
          },
          {
            "contract": "StakingThales",
            "label": "_lastRewardsClaimedPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:70"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:71"
          },
          {
            "contract": "StakingThales",
            "label": "lastAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:80"
          },
          {
            "contract": "StakingThales",
            "label": "stakerAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3521_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:81"
          },
          {
            "contract": "StakingThales",
            "label": "extraRewardsActive",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:83"
          },
          {
            "contract": "StakingThales",
            "label": "ThalesStakingRewardsPool",
            "type": "t_contract(IThalesStakingRewardsPool)7700",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:84"
          },
          {
            "contract": "StakingThales",
            "label": "maxSNXRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:86"
          },
          {
            "contract": "StakingThales",
            "label": "maxAMMVolumeRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:87"
          },
          {
            "contract": "StakingThales",
            "label": "AMMVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:88"
          },
          {
            "contract": "StakingThales",
            "label": "maxThalesRoyaleRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:89"
          },
          {
            "contract": "StakingThales",
            "label": "SNXVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:94"
          },
          {
            "contract": "StakingThales",
            "label": "_lastStakingPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:96"
          },
          {
            "contract": "StakingThales",
            "label": "totalStakedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:98"
          },
          {
            "contract": "StakingThales",
            "label": "totalEscrowedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:99"
          },
          {
            "contract": "StakingThales",
            "label": "exoticBonds",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:100"
          },
          {
            "contract": "StakingThales",
            "label": "addressResolver",
            "type": "t_contract(IAddressResolver)6902",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:102"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:104"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:105"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:107"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3521_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:108"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesRangedAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:109"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3521_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:110"
          },
          {
            "contract": "StakingThales",
            "label": "lastExoticMarketsUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:111"
          },
          {
            "contract": "StakingThales",
            "label": "exoticMarketsVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3521_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:112"
          },
          {
            "contract": "StakingThales",
            "label": "lastSportsAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:113"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3521_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:114"
          },
          {
            "contract": "StakingThales",
            "label": "canClaimOnBehalf",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:116"
          },
          {
            "contract": "StakingThales",
            "label": "mergeAccountEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:118"
          },
          {
            "contract": "StakingThales",
            "label": "delegatedVolume",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:120"
          },
          {
            "contract": "StakingThales",
            "label": "supportedSportVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:121"
          },
          {
            "contract": "StakingThales",
            "label": "supportedAMMVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:122"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMLiquidityPool",
            "type": "t_contract(ISportsAMMLiquidityPool)7413",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:124"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMMLiquidityPool",
            "type": "t_contract(IThalesAMMLiquidityPool)7621",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:125"
          },
          {
            "contract": "StakingThales",
            "label": "parlayAMMLiquidityPool",
            "type": "t_contract(IParlayAMMLiquidityPool)7033",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:126"
          }
        ],
        "types": {
          "t_contract(IEscrowThales)6995": {
            "label": "contract IEscrowThales"
          },
          "t_contract(IERC20)10012": {
            "label": "contract IERC20"
          },
          "t_contract(ISNXRewards)7403": {
            "label": "contract ISNXRewards"
          },
          "t_contract(IThalesRoyale)7690": {
            "label": "contract IThalesRoyale"
          },
          "t_contract(IPriceFeed)7365": {
            "label": "contract IPriceFeed"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3521_storage)4_storage)": {
            "label": "mapping(address => struct StakingThales.AMMVolumeEntry[4])"
          },
          "t_array(t_struct(AMMVolumeEntry)3521_storage)4_storage": {
            "label": "struct StakingThales.AMMVolumeEntry[4]"
          },
          "t_struct(AMMVolumeEntry)3521_storage": {
            "label": "struct StakingThales.AMMVolumeEntry",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "period",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IThalesStakingRewardsPool)7700": {
            "label": "contract IThalesStakingRewardsPool"
          },
          "t_contract(IAddressResolver)6902": {
            "label": "contract IAddressResolver"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_contract(ISportsAMMLiquidityPool)7413": {
            "label": "contract ISportsAMMLiquidityPool"
          },
          "t_contract(IThalesAMMLiquidityPool)7621": {
            "label": "contract IThalesAMMLiquidityPool"
          },
          "t_contract(IParlayAMMLiquidityPool)7033": {
            "label": "contract IParlayAMMLiquidityPool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1f0967a9453b00057562d2b84a030317b575e369251e5cc19dd9c8d122592c89": {
      "address": "0x57Fa7693Dcf796DD0f3330C32AAE31495168b857",
      "txHash": "0xea778c48d2887a7265b634bfc58251f895967dd02f08ffbe155a6407134eb259",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)81046",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:38"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)80851",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:39"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)81133",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)79432",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:62"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)86112_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)54247",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:70"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:71"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerGameCombination",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:74"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:78"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:80"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerPackedGamesCombination",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:82"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "SGPfeePerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:84"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "SGPFeePerCombination",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:86"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayLP",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:88"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)81046": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)80851": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)81133": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)79432": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)86112_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)54247": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => uint256))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          }
        }
      }
    },
    "0a6574fb8349950de4e97a6b5f72a42c6d741fa2036759ea82352bdf1a8d2771": {
      "address": "0x8ACc32241d52576f9eFAd6fD5744111205F2177a",
      "txHash": "0x11c9d24dcfa4f04fc2775f08d34d89cb3892767818300d7ac0e41356ec1609b9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "parlayAMM",
            "type": "t_contract(IParlayMarketsAMM)80191",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:42"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:43"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:45"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:47"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:48"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:50"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:52"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:54"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:55"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:57"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:58"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:60"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:62"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:63"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:65"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:66"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:68"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:69"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:70"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:71"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:73"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)81241",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:75"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:77"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:79"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:81"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:83"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "onlyWhitelistedStakersAllowed",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:85"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "whitelistedStakers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:87"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:89"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "marketAlreadyExercisedInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:91"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "roundClosingPrepared",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:93"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "usersProcessedInRound",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:95"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "withdrawalShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:97"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "parlayMarketRound",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:99"
          }
        ],
        "types": {
          "t_contract(IParlayMarketsAMM)80191": {
            "label": "contract IParlayMarketsAMM"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)81241": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "add6e01205b549f642963aa770ad172bf2a62fdd831bc619b97b84673b83352f": {
      "address": "0x8f73e225Df3cacD7e6F62AE75538E72feA52d58F",
      "txHash": "0x542f8b60fb92c256a28ac9563987b3dcdb91d889041bdda91d8ba3b2a59a2ae5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketData.sol:88"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketData.sol:89"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "oddsObtainer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketData.sol:90"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "consumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketData.sol:91"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "voucherEscrow",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketData.sol:92"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e7f9a334d2d67ac249674fc97345d0728b4601b857de14b9a3d5c49e8051160e": {
      "address": "0xCF838a74708f814B97a2B2Cac338e8596ED554Db",
      "txHash": "0xd48ec84fdc6dd7170b145598792d244cf7be102731e24cc1529d2860c058e14f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketData.sol:88"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketData.sol:89"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "oddsObtainer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketData.sol:90"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "consumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketData.sol:91"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "voucherEscrow",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketData.sol:92"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "700c3536e6b281f8889428662a48d666483f16d2e7826f33abcc83615e63fff3": {
      "address": "0xCd9c0E99396627C7746b4363B880939Ac2828d3E",
      "txHash": "0xc15a222e5a8bd316288d74992f1764ce6ac39ce3c3fec710d1a0139dbab21eaa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "PositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:124"
          },
          {
            "contract": "PositionalMarketData",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:125"
          },
          {
            "contract": "PositionalMarketData",
            "label": "rangedMarketsAMM",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:126"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
