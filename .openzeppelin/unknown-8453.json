{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x8FE726b27e89Cd484981B2D27160186920Af2d17",
    "txHash": "0x94c8417eb78f0eb2edb9c36e813d3dcceda739aac0d1985859c8cbb50ea60fda",
    "deployTransaction": {
      "hash": "0x94c8417eb78f0eb2edb9c36e813d3dcceda739aac0d1985859c8cbb50ea60fda",
      "type": 0,
      "accessList": null,
      "blockHash": "0x53203fa2e45d45191c5b18ac15c6c1a8fcdf9364e878964361f261fce199d317",
      "blockNumber": 2245559,
      "transactionIndex": 3,
      "confirmations": 2,
      "from": "0x9841484A4a6C0B61C4EEa71376D76453fd05eC9C",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x3b9aca00"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 2,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x44d4f4f7a314a39150050e535e3ec537efd1c99eaf794e50020e191273803428",
      "s": "0x1d836eedd4239f625fccf97beb2fb8483fd4b87038d59075bea3d76d9028c419",
      "v": 16941,
      "creates": "0x8FE726b27e89Cd484981B2D27160186920Af2d17",
      "chainId": 8453
    }
  },
  "proxies": [
    {
      "address": "0x85b827d133FEDC36B844b20f4a198dA583B25BAA",
      "txHash": "0x07c54c1789b24fe9aabb52306caf7cc986832d2ea43e130007e8dd06b3f024ea",
      "kind": "transparent"
    }
  ],
  "impls": {
    "4ee4608867a4f3eb50922a70a34c0640761566038f951b1d3aa47dd157f9ab6e": {
      "address": "0x72ca0765d4bE0529377d656c9645600606214610",
      "txHash": "0x6bb5d3732291b66dc22215dd7b97c59ad3c8dcc4dea4a20ee81fd00760749df7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)3633_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:34"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)3633_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:35"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)470",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:39"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:41"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:43"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFee",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:44"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:46"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "supportedAsset",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:48"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minimalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:50"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:51"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:53"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:54"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:56"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:57"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "assetToPythId",
            "type": "t_mapping(t_bytes32,t_bytes32)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:59"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "pyth",
            "type": "t_contract(IPyth)1502",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:62"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelay",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:64"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)3623",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:67"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)3633_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:69"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)3633_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:70"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:85"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)3546",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:86"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:87"
          }
        ],
        "types": {
          "t_struct(AddressSet)3633_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)470": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_contract(IPyth)1502": {
            "label": "contract IPyth"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(IStakingThales)3623": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_struct(AddressSet)3633_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(IMultiCollateralOnOffRamp)3546": {
            "label": "contract IMultiCollateralOnOffRamp"
          }
        }
      }
    },
    "f65f704df0bcab4480625000387e773c695b18bcf9dfb81b250716608c4b653b": {
      "address": "0x24505B4b0a31A2765FC861dd4D8Dc6157d759b73",
      "txHash": "0xcb98a768646f7a1e2c4b1b01211942cf52689b59d23c6ec10e014a0b2f25995a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)92041_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:34"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)92041_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:35"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:39"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:41"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:43"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFee",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:44"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:46"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "supportedAsset",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:48"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minimalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:50"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:51"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:53"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:54"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:56"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:57"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "assetToPythId",
            "type": "t_mapping(t_bytes32,t_bytes32)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:59"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "pyth",
            "type": "t_contract(IPyth)12062",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:62"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelay",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:64"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)86174",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:67"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)92041_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:69"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)92041_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:70"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:85"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)84815",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:86"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:87"
          }
        ],
        "types": {
          "t_struct(AddressSet)92041_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_contract(IPyth)12062": {
            "label": "contract IPyth"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(IStakingThales)86174": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_struct(AddressSet)92041_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(IMultiCollateralOnOffRamp)84815": {
            "label": "contract IMultiCollateralOnOffRamp"
          }
        }
      }
    }
  }
}
