{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xDC7bAe4cA7b83CCa28B40fd281d8bc4d5402D1f2",
    "txHash": "0xa3b44cc9f0870753a4daad4635f77ec917c9912c139ffa47253af53ef18d2efc",
    "deployTransaction": {
      "hash": "0xa3b44cc9f0870753a4daad4635f77ec917c9912c139ffa47253af53ef18d2efc",
      "type": 0,
      "accessList": null,
      "blockHash": "0xe4e9a0f53793b76dac6de7d2d056dedce83f57c4bc31b8af64f6e795616474a3",
      "blockNumber": 11686722,
      "transactionIndex": 7,
      "confirmations": 1,
      "from": "0xd866b2332d4383C1Bf719732177e2D9109c99DBc",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x0f4eca"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0776c2"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 3035,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0xe4288572b46074da19358115761675000d92e8ea1669cf109d087298c770b69a",
      "s": "0x1b57cdef82508cbc62cc02e933e0b607584b5f38dcac440446410a7041eadcc1",
      "v": 22310876,
      "creates": "0xDC7bAe4cA7b83CCa28B40fd281d8bc4d5402D1f2",
      "chainId": 11155420
    }
  },
  "proxies": [
    {
      "address": "0xc3DF62752CeF27Cd449A196421e54d22C7BFadfa",
      "txHash": "0xc3e9f93df8518e2631a75cb077d0bccd8b6a1b08796ccf51559b2702459a3cf9",
      "kind": "transparent"
    },
    {
      "address": "0xc5614017CC2d336a0B3EcC2C4A795FeeF063dbbc",
      "txHash": "0x1b36a9760205ebd3d5e5b9cdef3c6c34d3b4bd2d7245409a32fb754fd5dee4f4",
      "kind": "transparent"
    },
    {
      "address": "0xE114677AaBf957d5EeE55f73C6b93fdEDfC849C3",
      "txHash": "0x7535d01c923625b1c1eb5057306b73020a63da002e8c006f711ea4314a9300a0",
      "kind": "transparent"
    },
    {
      "address": "0xc856372F3dD1cEb8bdbBB5f51e0de364A451Ba4c",
      "txHash": "0xf3a32c60a805bd7c507ed9fa408460c6f9fe10e545094fd3cb236e9d5e22d70e",
      "kind": "transparent"
    },
    {
      "address": "0xb009cfd69aA2682e42E9e2e7dbdA1f2C5c21b38F",
      "txHash": "0x71fa41ee59bdcd2bc7a8438b3d307ef192d161ed02af5b3e5e14aa5312add681",
      "kind": "transparent"
    },
    {
      "address": "0x796B1316f7e68B379AFCfDB63E374E3d5165b317",
      "txHash": "0xdcc751a43bd517c0a90427a93218822b76724aa96f46a70d9b9af17276d24002",
      "kind": "transparent"
    },
    {
      "address": "0xc3A5BD668a4518d3B86f1E92C11045705B5130E8",
      "txHash": "0x46a9872c4d13ff005cd150e52bfeba8e70c4349b15c12aeec91e3192b60e7a04",
      "kind": "transparent"
    },
    {
      "address": "0x447A25bF33ff9eB6e381B0D01769b772B4309fD8",
      "txHash": "0xe1a34752e738ab9cee004a1a425743228c1d58efc2cdb4e34d78c5138ab3f2f7",
      "kind": "transparent"
    },
    {
      "address": "0xBe33636c44A45560145076FBf07b07BA62E72688",
      "txHash": "0x9aaa60b24c8fe8c4b2dab5b45c34403379eedaaaf627540d02b04337ce23c3c9",
      "kind": "transparent"
    },
    {
      "address": "0x1D825d2d976Ac113782496ab862d9dBFA78BA8E3",
      "txHash": "0x1e4ffa9e377c208ae498c7f8199024520f58d0d4b1c42d2c2100482e1f13d370",
      "kind": "transparent"
    },
    {
      "address": "0x02b9aE5a116450BE67AABF0d7EF5D06bda9dc962",
      "txHash": "0x1d73cf64c8b6cb8dad39a8d4832dee999f40f3806d958a8e2b69e48b103f8481",
      "kind": "transparent"
    },
    {
      "address": "0x7B4e53DFA265cdF4782caf407f5ACF394a06951e",
      "txHash": "0x8a9a2345c6d7429b03ee44a8cac66f54a0846ec18862b9d90f1488e0203e0956",
      "kind": "transparent"
    },
    {
      "address": "0x0FecC86FE9A5e88eA8220e981b45f0645e2F6973",
      "txHash": "0x48f175fa6c4fd21e19b055dd4b8a693983fc2fcbf9f27a0a9036458b4bf92511",
      "kind": "transparent"
    },
    {
      "address": "0xCF2c4Db7da0a99C88888d153e788EF720A437720",
      "txHash": "0xb865b6771918214da851998a1d7cfb0c95b01d4bdfa8fc87ecf8088ae8d2193f",
      "kind": "transparent"
    },
    {
      "address": "0x00892Daa2fc47ADc0d74Ebb6634cDa9f0d966e6E",
      "txHash": "0xea329a87bb4787e8ff53160f7e6dc8179b6e655dd16ec6f640b7ae4e18dfbea6",
      "kind": "transparent"
    },
    {
      "address": "0x7f2B26AD4Cf0811247A74B0a7dC5959D80321572",
      "txHash": "0x72ff97bda47ae0e0b07bf0225764a988a8a4d88f8f36e49dbc4b8fab881dc39f",
      "kind": "transparent"
    },
    {
      "address": "0x4a405D04D4954785ED5b356568f947346503da71",
      "txHash": "0xf4892bd1d7290f592973fad33e2b18313d52af86c75cace948cc1d5f92d27661",
      "kind": "transparent"
    },
    {
      "address": "0x3c86173F8aE3238b2C70A1C76e67c814f7a209B2",
      "txHash": "0xd92d7417fe4866717a818b7f43358202e5897ea86f6391a99937e72bd097c984",
      "kind": "transparent"
    }
  ],
  "impls": {
    "aa91f69c7f5299d0d3f4b22102d04d1a58dddb1b77eda9ef4397ec9821d4fe5f": {
      "address": "0x902d23A7ABc4D19a3B84B35999e4DB253609BaED",
      "txHash": "0xc8f3862508effaeda976a06199e4a9a6f683718c6ea0b222a1ee146c012e2f8d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)7027_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:38"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)7027_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:39"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)470",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:44"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:46"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:48"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFee",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:49"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:51"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "supportedAsset",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:53"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minimalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:55"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:56"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:58"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:59"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:61"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:62"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "assetToPythId",
            "type": "t_mapping(t_bytes32,t_bytes32)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:64"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "pyth",
            "type": "t_contract(IPyth)1502",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:66"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelay",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:68"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)7017",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:70"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)7027_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:72"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)7027_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:73"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:75"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)6720",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:76"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:77"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)3828,t_uint256))",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:79"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)3828,t_uint256))",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:80"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelayForResolving",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:82"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "marketHasCreatedAtAttribute",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:84"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:86"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "timeThresholdsForFees",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:88"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFees",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:89"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketsAMMUtils",
            "type": "t_contract(SpeedMarketsAMMUtils)6482",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:91"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "marketHasFeeAttribute",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:93"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)6557",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:96"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxSkewImpact",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:98"
          }
        ],
        "types": {
          "t_struct(AddressSet)7027_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)470": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_contract(IPyth)1502": {
            "label": "contract IPyth"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(IStakingThales)7017": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_struct(AddressSet)7027_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(IMultiCollateralOnOffRamp)6720": {
            "label": "contract IMultiCollateralOnOffRamp"
          },
          "t_mapping(t_bytes32,t_mapping(t_enum(Direction)3828,t_uint256))": {
            "label": "mapping(bytes32 => mapping(enum SpeedMarket.Direction => uint256))"
          },
          "t_mapping(t_enum(Direction)3828,t_uint256)": {
            "label": "mapping(enum SpeedMarket.Direction => uint256)"
          },
          "t_enum(Direction)3828": {
            "label": "enum SpeedMarket.Direction",
            "members": [
              "Up",
              "Down"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(SpeedMarketsAMMUtils)6482": {
            "label": "contract SpeedMarketsAMMUtils"
          },
          "t_contract(IAddressManager)6557": {
            "label": "contract IAddressManager"
          }
        }
      }
    },
    "00bfcbee5af28c1e9ce28fbd92b89642624e86ee5af603313bfc1e4d4f684e75": {
      "address": "0x0DF9c3bD38Da0384f9e008Ee6B3d3c47030c8c65",
      "txHash": "0x2554131f794290cefb386ed86729e8134123b24fe2600942e517c8718f67239c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SpeedMarketsAMMData",
            "label": "speedMarketsAMM",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMMData.sol:19"
          },
          {
            "contract": "SpeedMarketsAMMData",
            "label": "chainedSpeedMarketsAMM",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMMData.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "953b96240b66435b021c0dc5287b339265bef1ed15ac776086841f7e9849f523": {
      "address": "0x2CF6E476916500e4d476af808089288614f436aD",
      "txHash": "0xc9520277727f424847a6358dd244708375941b707c0a4259766e5414c52f7d11",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SpeedMarketsAMMCreator",
            "label": "maxCreationDelay",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMMCreator.sol:79"
          },
          {
            "contract": "SpeedMarketsAMMCreator",
            "label": "pendingSpeedMarkets",
            "type": "t_array(t_struct(PendingSpeedMarket)51995_storage)dyn_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMMCreator.sol:81"
          },
          {
            "contract": "SpeedMarketsAMMCreator",
            "label": "pendingChainedSpeedMarkets",
            "type": "t_array(t_struct(PendingChainedSpeedMarket)52037_storage)dyn_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMMCreator.sol:82"
          },
          {
            "contract": "SpeedMarketsAMMCreator",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)107616",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMMCreator.sol:84"
          }
        ],
        "types": {
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_struct(PendingSpeedMarket)51995_storage)dyn_storage": {
            "label": "struct SpeedMarketsAMMCreator.PendingSpeedMarket[]"
          },
          "t_struct(PendingSpeedMarket)51995_storage": {
            "label": "struct SpeedMarketsAMMCreator.PendingSpeedMarket",
            "members": [
              {
                "label": "user",
                "type": "t_address"
              },
              {
                "label": "asset",
                "type": "t_bytes32"
              },
              {
                "label": "strikeTime",
                "type": "t_uint64"
              },
              {
                "label": "delta",
                "type": "t_uint64"
              },
              {
                "label": "strikePrice",
                "type": "t_uint256"
              },
              {
                "label": "strikePriceSlippage",
                "type": "t_uint256"
              },
              {
                "label": "direction",
                "type": "t_enum(Direction)46789"
              },
              {
                "label": "collateral",
                "type": "t_address"
              },
              {
                "label": "buyinAmount",
                "type": "t_uint256"
              },
              {
                "label": "referrer",
                "type": "t_address"
              },
              {
                "label": "skewImpact",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_enum(Direction)46789": {
            "label": "enum SpeedMarket.Direction",
            "members": [
              "Up",
              "Down"
            ]
          },
          "t_array(t_struct(PendingChainedSpeedMarket)52037_storage)dyn_storage": {
            "label": "struct SpeedMarketsAMMCreator.PendingChainedSpeedMarket[]"
          },
          "t_struct(PendingChainedSpeedMarket)52037_storage": {
            "label": "struct SpeedMarketsAMMCreator.PendingChainedSpeedMarket",
            "members": [
              {
                "label": "user",
                "type": "t_address"
              },
              {
                "label": "asset",
                "type": "t_bytes32"
              },
              {
                "label": "timeFrame",
                "type": "t_uint64"
              },
              {
                "label": "strikePrice",
                "type": "t_uint256"
              },
              {
                "label": "strikePriceSlippage",
                "type": "t_uint256"
              },
              {
                "label": "directions",
                "type": "t_array(t_enum(Direction)46789)dyn_storage"
              },
              {
                "label": "collateral",
                "type": "t_address"
              },
              {
                "label": "buyinAmount",
                "type": "t_uint256"
              },
              {
                "label": "referrer",
                "type": "t_address"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_enum(Direction)46789)dyn_storage": {
            "label": "enum SpeedMarket.Direction[]"
          },
          "t_contract(IAddressManager)107616": {
            "label": "contract IAddressManager"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "176b941c7349b2a66dbe99f557b2dd2c99615aab6af154266f97c975c610e06b": {
      "address": "0x9c59E9a9947386D6EDDaFDeF2435f746E7530bd2",
      "txHash": "0xb1ebade4586c63af872c753a96a0ff4b49df304d7d9ab851ff9e975b9114adfa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)470",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:41"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)7027_storage",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:43"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)7027_storage",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:44"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)7027_storage)",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:46"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)7027_storage)",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:47"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minChainedMarkets",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:49"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxChainedMarkets",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:50"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minTimeFrame",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:52"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxTimeFrame",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:53"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:55"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:56"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxProfitPerIndividualMarket",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:58"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "payoutMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:60"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxRisk",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:62"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "currentRisk",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:63"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "chainedSpeedMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:65"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:67"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)6557",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:70"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "payoutMultipliers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:74"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)470": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(AddressSet)7027_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(AddressSet)7027_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IAddressManager)6557": {
            "label": "contract IAddressManager"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "2ece03a1e6430e262b796620226a3d97c4f18153a5434d795b4e9ade4045ee51": {
      "address": "0x567b4eee851317c8E82AAdFDE5DFCe0eBF08832C",
      "txHash": "0x3fc3a3a6a3d739bb6ffe491c2a8c332a24ab6a5a39cea3b9f533b225047579da",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "AddressManager",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\AddressManager\\AddressManager.sol:15"
          },
          {
            "contract": "AddressManager",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\AddressManager\\AddressManager.sol:17"
          },
          {
            "contract": "AddressManager",
            "label": "stakingThales",
            "type": "t_address",
            "src": "contracts\\AddressManager\\AddressManager.sol:19"
          },
          {
            "contract": "AddressManager",
            "label": "multiCollateralOnOffRamp",
            "type": "t_address",
            "src": "contracts\\AddressManager\\AddressManager.sol:21"
          },
          {
            "contract": "AddressManager",
            "label": "pyth",
            "type": "t_address",
            "src": "contracts\\AddressManager\\AddressManager.sol:23"
          },
          {
            "contract": "AddressManager",
            "label": "speedMarketsAMM",
            "type": "t_address",
            "src": "contracts\\AddressManager\\AddressManager.sol:25"
          },
          {
            "contract": "AddressManager",
            "label": "addressBook",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "src": "contracts\\AddressManager\\AddressManager.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "11787398d9c2734ddb844cbea6a20f82905c66e7ede0b355bbabd38544217f80": {
      "address": "0xbEC297E1fb0BEACEe29829F162F7281D4B8Dcb7C",
      "txHash": "0x383d1a4b015761ccc1ff8061d31cc41f62be2d5b8f4e38b9cb7c24daaf65fab0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "Referrals",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\Referrals.sol:23"
          },
          {
            "contract": "Referrals",
            "label": "referrals",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts\\AMM\\Referrals.sol:24"
          },
          {
            "contract": "Referrals",
            "label": "referralStarted",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\Referrals.sol:25"
          },
          {
            "contract": "Referrals",
            "label": "tradedBefore",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\Referrals.sol:27"
          },
          {
            "contract": "Referrals",
            "label": "sportReferrals",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts\\AMM\\Referrals.sol:29"
          },
          {
            "contract": "Referrals",
            "label": "sportReferralStarted",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\Referrals.sol:30"
          },
          {
            "contract": "Referrals",
            "label": "sportTradedBefore",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\Referrals.sol:31"
          },
          {
            "contract": "Referrals",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts\\AMM\\Referrals.sol:32"
          },
          {
            "contract": "Referrals",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts\\AMM\\Referrals.sol:33"
          },
          {
            "contract": "Referrals",
            "label": "referrerFeeDefault",
            "type": "t_uint256",
            "src": "contracts\\AMM\\Referrals.sol:35"
          },
          {
            "contract": "Referrals",
            "label": "referrerFeeSilver",
            "type": "t_uint256",
            "src": "contracts\\AMM\\Referrals.sol:36"
          },
          {
            "contract": "Referrals",
            "label": "referrerFeeGold",
            "type": "t_uint256",
            "src": "contracts\\AMM\\Referrals.sol:37"
          },
          {
            "contract": "Referrals",
            "label": "silverAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\Referrals.sol:39"
          },
          {
            "contract": "Referrals",
            "label": "goldAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\Referrals.sol:40"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "a325680e34606e03da311786a3b79d5658116c4f7ae5b350b4352bd54f43652c": {
      "address": "0xCCC711c5D20A132671F3C9628531962E47AD0550",
      "txHash": "0x0c864ec507970cf5f6f489ee186d43cc9f23a2612778bfa0d62e74bcc043ec4c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8368",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:41"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)117655_storage",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:43"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)117655_storage",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:44"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)117655_storage)",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:46"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)117655_storage)",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:47"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minChainedMarkets",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:49"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxChainedMarkets",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:50"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minTimeFrame",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:52"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxTimeFrame",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:53"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:55"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:56"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxProfitPerIndividualMarket",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:58"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "payoutMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:60"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxRisk",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:62"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "currentRisk",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:63"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "chainedSpeedMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:65"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:67"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)108461",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:70"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "payoutMultipliers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:74"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)8368": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(AddressSet)117655_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(AddressSet)117655_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IAddressManager)108461": {
            "label": "contract IAddressManager"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "101466e24b890c4632be0a7a63d708417bab4d2fea5d0714616f02d48e6bddf1": {
      "address": "0xAa4e58bC101D7B402540746B06b8e1ef6c5D240b",
      "txHash": "0x5842cb7a07ceb806f2450146cb982a7507ff449d90d8f9f26efa44ffe4fc02f8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SpeedMarketsAMMCreator",
            "label": "maxCreationDelay",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMMCreator.sol:79"
          },
          {
            "contract": "SpeedMarketsAMMCreator",
            "label": "pendingSpeedMarkets",
            "type": "t_array(t_struct(PendingSpeedMarket)6491_storage)dyn_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMMCreator.sol:81"
          },
          {
            "contract": "SpeedMarketsAMMCreator",
            "label": "pendingChainedSpeedMarkets",
            "type": "t_array(t_struct(PendingChainedSpeedMarket)6533_storage)dyn_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMMCreator.sol:82"
          },
          {
            "contract": "SpeedMarketsAMMCreator",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)7638",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMMCreator.sol:84"
          },
          {
            "contract": "SpeedMarketsAMMCreator",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMMCreator.sol:86"
          }
        ],
        "types": {
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_struct(PendingSpeedMarket)6491_storage)dyn_storage": {
            "label": "struct SpeedMarketsAMMCreator.PendingSpeedMarket[]"
          },
          "t_struct(PendingSpeedMarket)6491_storage": {
            "label": "struct SpeedMarketsAMMCreator.PendingSpeedMarket",
            "members": [
              {
                "label": "user",
                "type": "t_address"
              },
              {
                "label": "asset",
                "type": "t_bytes32"
              },
              {
                "label": "strikeTime",
                "type": "t_uint64"
              },
              {
                "label": "delta",
                "type": "t_uint64"
              },
              {
                "label": "strikePrice",
                "type": "t_uint256"
              },
              {
                "label": "strikePriceSlippage",
                "type": "t_uint256"
              },
              {
                "label": "direction",
                "type": "t_enum(Direction)3828"
              },
              {
                "label": "collateral",
                "type": "t_address"
              },
              {
                "label": "buyinAmount",
                "type": "t_uint256"
              },
              {
                "label": "referrer",
                "type": "t_address"
              },
              {
                "label": "skewImpact",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_enum(Direction)3828": {
            "label": "enum SpeedMarket.Direction",
            "members": [
              "Up",
              "Down"
            ]
          },
          "t_array(t_struct(PendingChainedSpeedMarket)6533_storage)dyn_storage": {
            "label": "struct SpeedMarketsAMMCreator.PendingChainedSpeedMarket[]"
          },
          "t_struct(PendingChainedSpeedMarket)6533_storage": {
            "label": "struct SpeedMarketsAMMCreator.PendingChainedSpeedMarket",
            "members": [
              {
                "label": "user",
                "type": "t_address"
              },
              {
                "label": "asset",
                "type": "t_bytes32"
              },
              {
                "label": "timeFrame",
                "type": "t_uint64"
              },
              {
                "label": "strikePrice",
                "type": "t_uint256"
              },
              {
                "label": "strikePriceSlippage",
                "type": "t_uint256"
              },
              {
                "label": "directions",
                "type": "t_array(t_enum(Direction)3828)dyn_storage"
              },
              {
                "label": "collateral",
                "type": "t_address"
              },
              {
                "label": "buyinAmount",
                "type": "t_uint256"
              },
              {
                "label": "referrer",
                "type": "t_address"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_enum(Direction)3828)dyn_storage": {
            "label": "enum SpeedMarket.Direction[]"
          },
          "t_contract(IAddressManager)7638": {
            "label": "contract IAddressManager"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "6e38f30eb0fb1607b9892ed0bbe9262415248e81325484561c81555c51995428": {
      "address": "0xD8170e7b3ffA688f0C89454356e2F6D67a242489",
      "txHash": "0x33282a6e1846059c80f1c762e2f0b8019befc45a2b7933519e29810c72da6861",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SpeedMarketsAMMCreator",
            "label": "maxCreationDelay",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMMCreator.sol:79"
          },
          {
            "contract": "SpeedMarketsAMMCreator",
            "label": "pendingSpeedMarkets",
            "type": "t_array(t_struct(PendingSpeedMarket)6491_storage)dyn_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMMCreator.sol:81"
          },
          {
            "contract": "SpeedMarketsAMMCreator",
            "label": "pendingChainedSpeedMarkets",
            "type": "t_array(t_struct(PendingChainedSpeedMarket)6533_storage)dyn_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMMCreator.sol:82"
          },
          {
            "contract": "SpeedMarketsAMMCreator",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)7636",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMMCreator.sol:84"
          },
          {
            "contract": "SpeedMarketsAMMCreator",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMMCreator.sol:86"
          }
        ],
        "types": {
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_struct(PendingSpeedMarket)6491_storage)dyn_storage": {
            "label": "struct SpeedMarketsAMMCreator.PendingSpeedMarket[]"
          },
          "t_struct(PendingSpeedMarket)6491_storage": {
            "label": "struct SpeedMarketsAMMCreator.PendingSpeedMarket",
            "members": [
              {
                "label": "user",
                "type": "t_address"
              },
              {
                "label": "asset",
                "type": "t_bytes32"
              },
              {
                "label": "strikeTime",
                "type": "t_uint64"
              },
              {
                "label": "delta",
                "type": "t_uint64"
              },
              {
                "label": "strikePrice",
                "type": "t_uint256"
              },
              {
                "label": "strikePriceSlippage",
                "type": "t_uint256"
              },
              {
                "label": "direction",
                "type": "t_enum(Direction)3828"
              },
              {
                "label": "collateral",
                "type": "t_address"
              },
              {
                "label": "buyinAmount",
                "type": "t_uint256"
              },
              {
                "label": "referrer",
                "type": "t_address"
              },
              {
                "label": "skewImpact",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_enum(Direction)3828": {
            "label": "enum SpeedMarket.Direction",
            "members": [
              "Up",
              "Down"
            ]
          },
          "t_array(t_struct(PendingChainedSpeedMarket)6533_storage)dyn_storage": {
            "label": "struct SpeedMarketsAMMCreator.PendingChainedSpeedMarket[]"
          },
          "t_struct(PendingChainedSpeedMarket)6533_storage": {
            "label": "struct SpeedMarketsAMMCreator.PendingChainedSpeedMarket",
            "members": [
              {
                "label": "user",
                "type": "t_address"
              },
              {
                "label": "asset",
                "type": "t_bytes32"
              },
              {
                "label": "timeFrame",
                "type": "t_uint64"
              },
              {
                "label": "strikePrice",
                "type": "t_uint256"
              },
              {
                "label": "strikePriceSlippage",
                "type": "t_uint256"
              },
              {
                "label": "directions",
                "type": "t_array(t_enum(Direction)3828)dyn_storage"
              },
              {
                "label": "collateral",
                "type": "t_address"
              },
              {
                "label": "buyinAmount",
                "type": "t_uint256"
              },
              {
                "label": "referrer",
                "type": "t_address"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_enum(Direction)3828)dyn_storage": {
            "label": "enum SpeedMarket.Direction[]"
          },
          "t_contract(IAddressManager)7636": {
            "label": "contract IAddressManager"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "fd34fcafe8d8f47c489dff5e2b31aa1eeb9a67fc5e88cc047e32b8cede59bd5c": {
      "address": "0xBC2e4C0538BFeF35AC1650489D2f216B4ec3CcD3",
      "txHash": "0x43f07750e4f754f3cadc5b02213db8e086eb1b07f159960a0fefd20509284498",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)117655_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:38"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)117655_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:39"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8368",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:44"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:46"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:48"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFee",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:49"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:51"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "supportedAsset",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:53"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minimalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:55"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:56"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:58"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:59"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:61"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:62"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "assetToPythId",
            "type": "t_mapping(t_bytes32,t_bytes32)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:64"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "pyth",
            "type": "t_contract(IPyth)12196",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:66"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelay",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:68"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)111355",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:70"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)117655_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:72"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)117655_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:73"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:75"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)109282",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:76"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:77"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)47504,t_uint256))",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:79"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)47504,t_uint256))",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:80"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelayForResolving",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:82"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "marketHasCreatedAtAttribute",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:84"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:86"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "timeThresholdsForFees",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:88"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFees",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:89"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketsAMMUtils",
            "type": "t_contract(SpeedMarketsAMMUtils)54960",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:91"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "marketHasFeeAttribute",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:93"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)108461",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:96"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxSkewImpact",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:98"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "skewSlippage",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:99"
          }
        ],
        "types": {
          "t_struct(AddressSet)117655_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)8368": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_contract(IPyth)12196": {
            "label": "contract IPyth"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(IStakingThales)111355": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_struct(AddressSet)117655_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(IMultiCollateralOnOffRamp)109282": {
            "label": "contract IMultiCollateralOnOffRamp"
          },
          "t_mapping(t_bytes32,t_mapping(t_enum(Direction)47504,t_uint256))": {
            "label": "mapping(bytes32 => mapping(enum SpeedMarket.Direction => uint256))"
          },
          "t_mapping(t_enum(Direction)47504,t_uint256)": {
            "label": "mapping(enum SpeedMarket.Direction => uint256)"
          },
          "t_enum(Direction)47504": {
            "label": "enum SpeedMarket.Direction",
            "members": [
              "Up",
              "Down"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(SpeedMarketsAMMUtils)54960": {
            "label": "contract SpeedMarketsAMMUtils"
          },
          "t_contract(IAddressManager)108461": {
            "label": "contract IAddressManager"
          }
        }
      }
    },
    "98bb1b5d2056200395ecf8c97683a3e1a9134a3f04b3c96c37162174d20eac2c": {
      "address": "0xBD28AEE75aE3824dADFeD1cC650DA0B739283D0f",
      "txHash": "0x75de8b09be55cfbc8a25121b2d8c07712265cb0964a950e7afa972ada377f3a3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)4729_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:38"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)4729_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:39"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)470",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:44"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:46"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:48"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFee",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:49"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:51"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "supportedAsset",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:53"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minimalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:55"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:56"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:58"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:59"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:61"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:62"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "assetToPythId",
            "type": "t_mapping(t_bytes32,t_bytes32)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:64"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "pyth",
            "type": "t_contract(IPyth)1502",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:66"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelay",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:68"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)4719",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:70"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)4729_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:72"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)4729_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:73"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:75"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)4422",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:76"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:77"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)1579,t_uint256))",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:79"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)1579,t_uint256))",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:80"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelayForResolving",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:82"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "marketHasCreatedAtAttribute",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:84"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:86"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "timeThresholdsForFees",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:88"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFees",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:89"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketsAMMUtils",
            "type": "t_contract(SpeedMarketsAMMUtils)4264",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:91"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "marketHasFeeAttribute",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:93"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)4339",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:96"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxSkewImpact",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:98"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "skewSlippage",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:99"
          }
        ],
        "types": {
          "t_struct(AddressSet)4729_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)470": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_contract(IPyth)1502": {
            "label": "contract IPyth"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(IStakingThales)4719": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_struct(AddressSet)4729_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(IMultiCollateralOnOffRamp)4422": {
            "label": "contract IMultiCollateralOnOffRamp"
          },
          "t_mapping(t_bytes32,t_mapping(t_enum(Direction)1579,t_uint256))": {
            "label": "mapping(bytes32 => mapping(enum SpeedMarket.Direction => uint256))"
          },
          "t_mapping(t_enum(Direction)1579,t_uint256)": {
            "label": "mapping(enum SpeedMarket.Direction => uint256)"
          },
          "t_enum(Direction)1579": {
            "label": "enum SpeedMarket.Direction",
            "members": [
              "Up",
              "Down"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(SpeedMarketsAMMUtils)4264": {
            "label": "contract SpeedMarketsAMMUtils"
          },
          "t_contract(IAddressManager)4339": {
            "label": "contract IAddressManager"
          }
        }
      }
    },
    "c2e3ddfe723d6b747a52f8bf62064bc08b4cd2e332469fb3cc85c2a9ec8e8a55": {
      "address": "0xD5a3516610B6076c165a412787ECA81562c4a02f",
      "txHash": "0xd6e675eb9624a6fdd336ceb56018af130f1cb1b5f7a33bb0fe766ebc242abe23",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8368",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:41"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)117174_storage",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:43"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)117174_storage",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:44"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)117174_storage)",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:46"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)117174_storage)",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:47"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minChainedMarkets",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:49"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxChainedMarkets",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:50"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minTimeFrame",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:52"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxTimeFrame",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:53"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:55"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:56"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxProfitPerIndividualMarket",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:58"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "payoutMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:60"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxRisk",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:62"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "currentRisk",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:63"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "chainedSpeedMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:65"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:67"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)107980",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:70"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "payoutMultipliers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:74"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)8368": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(AddressSet)117174_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(AddressSet)117174_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IAddressManager)107980": {
            "label": "contract IAddressManager"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "d7cd7fb3b9ab6c1e29f301f6ef13edf2653094f7eac279686aafb0adb04d45a8": {
      "address": "0x70E24D1a6D7aE15803548F8a6b90eFFf5D070aC3",
      "txHash": "0x22e0b427641fae4b43e9069958ab1767a75832e17d0de5117a22d01159877447",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyPausable.sol:12"
          },
          {
            "contract": "EscrowThales",
            "label": "vestingToken",
            "type": "t_contract(IERC20)9619",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:22"
          },
          {
            "contract": "EscrowThales",
            "label": "iStakingThales",
            "type": "t_contract(IStakingThales)6867",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:23"
          },
          {
            "contract": "EscrowThales",
            "label": "airdropContract",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:24"
          },
          {
            "contract": "EscrowThales",
            "label": "totalEscrowedRewards",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:27"
          },
          {
            "contract": "EscrowThales",
            "label": "totalEscrowBalanceNotIncludedInStaking",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:28"
          },
          {
            "contract": "EscrowThales",
            "label": "currentVestingPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:29"
          },
          {
            "contract": "EscrowThales",
            "label": "_totalVested",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:31"
          },
          {
            "contract": "EscrowThales",
            "label": "vestingEntries",
            "type": "t_mapping(t_address,t_array(t_struct(VestingEntry)395_storage)10_storage)",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:38"
          },
          {
            "contract": "EscrowThales",
            "label": "totalAccountEscrowedAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:39"
          },
          {
            "contract": "EscrowThales",
            "label": "lastPeriodAddedReward",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:41"
          },
          {
            "contract": "EscrowThales",
            "label": "testMode",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:43"
          },
          {
            "contract": "EscrowThales",
            "label": "ThalesStakingRewardsPool",
            "type": "t_contract(IThalesStakingRewardsPool)7123",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:44"
          }
        ],
        "types": {
          "t_contract(IERC20)9619": {
            "label": "contract IERC20"
          },
          "t_contract(IStakingThales)6867": {
            "label": "contract IStakingThales"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_struct(VestingEntry)395_storage)10_storage)": {
            "label": "mapping(address => struct EscrowThales.VestingEntry[10])"
          },
          "t_array(t_struct(VestingEntry)395_storage)10_storage": {
            "label": "struct EscrowThales.VestingEntry[10]"
          },
          "t_struct(VestingEntry)395_storage": {
            "label": "struct EscrowThales.VestingEntry",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "vesting_period",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IThalesStakingRewardsPool)7123": {
            "label": "contract IThalesStakingRewardsPool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "775e42458290c4e11d238a4e5c76c4ce300a7988ba5cd7f6cb9ea0b7c510978c": {
      "address": "0x8b6d508399ea89287c18828040C372B85964b21d",
      "txHash": "0x8dc219644f7f819b27e56e132609b4db26d7a80d86a7910d984ad2120337d408",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyPausable.sol:12"
          },
          {
            "contract": "StakingThales",
            "label": "iEscrowThales",
            "type": "t_contract(IEscrowThales)6340",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:37"
          },
          {
            "contract": "StakingThales",
            "label": "stakingToken",
            "type": "t_contract(IERC20)9619",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:38"
          },
          {
            "contract": "StakingThales",
            "label": "feeToken",
            "type": "t_contract(IERC20)9619",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:39"
          },
          {
            "contract": "StakingThales",
            "label": "SNXRewards",
            "type": "t_contract(ISNXRewards)6748",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:40"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRoyale",
            "type": "t_contract(IThalesRoyale)7113",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:41"
          },
          {
            "contract": "StakingThales",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)6710",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:42"
          },
          {
            "contract": "StakingThales",
            "label": "periodsOfStaking",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:44"
          },
          {
            "contract": "StakingThales",
            "label": "lastPeriodTimeStamp",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:45"
          },
          {
            "contract": "StakingThales",
            "label": "durationPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:46"
          },
          {
            "contract": "StakingThales",
            "label": "unstakeDurationPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:47"
          },
          {
            "contract": "StakingThales",
            "label": "startTimeStamp",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:48"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodRewards",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:49"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodFees",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:50"
          },
          {
            "contract": "StakingThales",
            "label": "distributeFeesEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:51"
          },
          {
            "contract": "StakingThales",
            "label": "fixedPeriodReward",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:52"
          },
          {
            "contract": "StakingThales",
            "label": "periodExtraReward",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:53"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXRewardsInPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:54"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXFeesInPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:55"
          },
          {
            "contract": "StakingThales",
            "label": "claimEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:56"
          },
          {
            "contract": "StakingThales",
            "label": "stakerLifetimeRewardsClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:58"
          },
          {
            "contract": "StakingThales",
            "label": "stakerFeesClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:59"
          },
          {
            "contract": "StakingThales",
            "label": "_totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:61"
          },
          {
            "contract": "StakingThales",
            "label": "_totalEscrowedAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:62"
          },
          {
            "contract": "StakingThales",
            "label": "_totalPendingStakeAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:63"
          },
          {
            "contract": "StakingThales",
            "label": "_totalUnclaimedRewards",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:64"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardsClaimed",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:65"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardFeesClaimed",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:66"
          },
          {
            "contract": "StakingThales",
            "label": "lastUnstakeTime",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:68"
          },
          {
            "contract": "StakingThales",
            "label": "unstaking",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:69"
          },
          {
            "contract": "StakingThales",
            "label": "unstakingAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:70"
          },
          {
            "contract": "StakingThales",
            "label": "_stakedBalances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:71"
          },
          {
            "contract": "StakingThales",
            "label": "_lastRewardsClaimedPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:72"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:73"
          },
          {
            "contract": "StakingThales",
            "label": "lastAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:82"
          },
          {
            "contract": "StakingThales",
            "label": "stakerAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3456_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:83"
          },
          {
            "contract": "StakingThales",
            "label": "extraRewardsActive",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:85"
          },
          {
            "contract": "StakingThales",
            "label": "ThalesStakingRewardsPool",
            "type": "t_contract(IThalesStakingRewardsPool)7123",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:86"
          },
          {
            "contract": "StakingThales",
            "label": "maxSNXRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:88"
          },
          {
            "contract": "StakingThales",
            "label": "maxAMMVolumeRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:89"
          },
          {
            "contract": "StakingThales",
            "label": "AMMVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:90"
          },
          {
            "contract": "StakingThales",
            "label": "maxThalesRoyaleRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:91"
          },
          {
            "contract": "StakingThales",
            "label": "SNXVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:96"
          },
          {
            "contract": "StakingThales",
            "label": "_lastStakingPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:98"
          },
          {
            "contract": "StakingThales",
            "label": "totalStakedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:100"
          },
          {
            "contract": "StakingThales",
            "label": "totalEscrowedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:101"
          },
          {
            "contract": "StakingThales",
            "label": "exoticBonds",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:102"
          },
          {
            "contract": "StakingThales",
            "label": "addressResolver",
            "type": "t_contract(IAddressResolver)6223",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:104"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:106"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:107"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:109"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3456_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:110"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesRangedAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:111"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3456_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:112"
          },
          {
            "contract": "StakingThales",
            "label": "lastExoticMarketsUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:113"
          },
          {
            "contract": "StakingThales",
            "label": "exoticMarketsVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3456_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:114"
          },
          {
            "contract": "StakingThales",
            "label": "lastSportsAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:115"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3456_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:116"
          },
          {
            "contract": "StakingThales",
            "label": "canClaimOnBehalf",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:118"
          },
          {
            "contract": "StakingThales",
            "label": "mergeAccountEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:120"
          },
          {
            "contract": "StakingThales",
            "label": "delegatedVolume",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:122"
          },
          {
            "contract": "StakingThales",
            "label": "supportedSportVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:123"
          },
          {
            "contract": "StakingThales",
            "label": "supportedAMMVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:124"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMLiquidityPool",
            "type": "t_contract(ISportsAMMLiquidityPool)6758",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:126"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMMLiquidityPool",
            "type": "t_contract(IThalesAMMLiquidityPool)7044",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:127"
          },
          {
            "contract": "StakingThales",
            "label": "stakingThalesBonusRewardsManager",
            "type": "t_contract(IStakingThalesBonusRewardsManager)6902",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:129"
          },
          {
            "contract": "StakingThales",
            "label": "parlayAMMLiquidityPool",
            "type": "t_contract(IParlayAMMLiquidityPool)6378",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:130"
          },
          {
            "contract": "StakingThales",
            "label": "readOnlyMode",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:132"
          },
          {
            "contract": "StakingThales",
            "label": "closingPeriodInProgress",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:133"
          },
          {
            "contract": "StakingThales",
            "label": "closingPeriodPauseTime",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:134"
          },
          {
            "contract": "StakingThales",
            "label": "sendCCIPMessage",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:136"
          },
          {
            "contract": "StakingThales",
            "label": "stakingThalesBettingProxy",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:138"
          }
        ],
        "types": {
          "t_contract(IEscrowThales)6340": {
            "label": "contract IEscrowThales"
          },
          "t_contract(IERC20)9619": {
            "label": "contract IERC20"
          },
          "t_contract(ISNXRewards)6748": {
            "label": "contract ISNXRewards"
          },
          "t_contract(IThalesRoyale)7113": {
            "label": "contract IThalesRoyale"
          },
          "t_contract(IPriceFeed)6710": {
            "label": "contract IPriceFeed"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3456_storage)4_storage)": {
            "label": "mapping(address => struct StakingThales.AMMVolumeEntry[4])"
          },
          "t_array(t_struct(AMMVolumeEntry)3456_storage)4_storage": {
            "label": "struct StakingThales.AMMVolumeEntry[4]"
          },
          "t_struct(AMMVolumeEntry)3456_storage": {
            "label": "struct StakingThales.AMMVolumeEntry",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "period",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IThalesStakingRewardsPool)7123": {
            "label": "contract IThalesStakingRewardsPool"
          },
          "t_contract(IAddressResolver)6223": {
            "label": "contract IAddressResolver"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_contract(ISportsAMMLiquidityPool)6758": {
            "label": "contract ISportsAMMLiquidityPool"
          },
          "t_contract(IThalesAMMLiquidityPool)7044": {
            "label": "contract IThalesAMMLiquidityPool"
          },
          "t_contract(IStakingThalesBonusRewardsManager)6902": {
            "label": "contract IStakingThalesBonusRewardsManager"
          },
          "t_contract(IParlayAMMLiquidityPool)6378": {
            "label": "contract IParlayAMMLiquidityPool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1933e4abc0a73b8f40242dd81baf1e4764cb3db0f3b67e07e9278b451fe36ab8": {
      "address": "0xfB835Bcf4ADe96007805Db3873B67a30f2b38653",
      "txHash": "0x9e854a887ac480d077ec348ffdb7fe9270b88c2ac79a53cdb7c43c4b225f6942",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyPausable.sol:12"
          },
          {
            "contract": "ThalesStakingRewardsPool",
            "label": "iStakingThales",
            "type": "t_contract(IStakingThales)6867",
            "src": "contracts/EscrowAndStaking/ThalesStakingRewardsPool.sol:28"
          },
          {
            "contract": "ThalesStakingRewardsPool",
            "label": "iEscrowThales",
            "type": "t_contract(IEscrowThales)6340",
            "src": "contracts/EscrowAndStaking/ThalesStakingRewardsPool.sol:29"
          },
          {
            "contract": "ThalesStakingRewardsPool",
            "label": "rewardToken",
            "type": "t_contract(IERC20)9619",
            "src": "contracts/EscrowAndStaking/ThalesStakingRewardsPool.sol:30"
          },
          {
            "contract": "ThalesStakingRewardsPool",
            "label": "lifetimeClaimedRewards",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/ThalesStakingRewardsPool.sol:32"
          }
        ],
        "types": {
          "t_contract(IStakingThales)6867": {
            "label": "contract IStakingThales"
          },
          "t_contract(IEscrowThales)6340": {
            "label": "contract IEscrowThales"
          },
          "t_contract(IERC20)9619": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b0cce2107835b85d461acfaf4ceda4283911ac71ce3dbb1d9eeff1e0e5a9ea6a": {
      "address": "0x004cF41dbe301984dd6BA22B51d20e9B2Ce6f573",
      "txHash": "0xa4f745240d0cc8b913c2b9b97228fdb3d7332660dc896b4a7dd95b73a8a6b4d0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyPausable.sol:12"
          },
          {
            "contract": "StakingThales",
            "label": "iEscrowThales",
            "type": "t_contract(IEscrowThales)2830",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:38"
          },
          {
            "contract": "StakingThales",
            "label": "stakingToken",
            "type": "t_contract(IERC20)4078",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:39"
          },
          {
            "contract": "StakingThales",
            "label": "feeToken",
            "type": "t_contract(IERC20)4078",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:40"
          },
          {
            "contract": "StakingThales",
            "label": "SNXRewards",
            "type": "t_contract(ISNXRewards)3238",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:41"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRoyale",
            "type": "t_contract(IThalesRoyale)3613",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:42"
          },
          {
            "contract": "StakingThales",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)3200",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:43"
          },
          {
            "contract": "StakingThales",
            "label": "periodsOfStaking",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:45"
          },
          {
            "contract": "StakingThales",
            "label": "lastPeriodTimeStamp",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:46"
          },
          {
            "contract": "StakingThales",
            "label": "durationPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:47"
          },
          {
            "contract": "StakingThales",
            "label": "unstakeDurationPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:48"
          },
          {
            "contract": "StakingThales",
            "label": "startTimeStamp",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:49"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodRewards",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:50"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodFees",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:51"
          },
          {
            "contract": "StakingThales",
            "label": "distributeFeesEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:52"
          },
          {
            "contract": "StakingThales",
            "label": "fixedPeriodReward",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:53"
          },
          {
            "contract": "StakingThales",
            "label": "periodExtraReward",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:54"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXRewardsInPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:55"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXFeesInPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:56"
          },
          {
            "contract": "StakingThales",
            "label": "claimEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:57"
          },
          {
            "contract": "StakingThales",
            "label": "stakerLifetimeRewardsClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:59"
          },
          {
            "contract": "StakingThales",
            "label": "stakerFeesClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:60"
          },
          {
            "contract": "StakingThales",
            "label": "_totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:62"
          },
          {
            "contract": "StakingThales",
            "label": "_totalEscrowedAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:63"
          },
          {
            "contract": "StakingThales",
            "label": "_totalPendingStakeAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:64"
          },
          {
            "contract": "StakingThales",
            "label": "_totalUnclaimedRewards",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:65"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardsClaimed",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:66"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardFeesClaimed",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:67"
          },
          {
            "contract": "StakingThales",
            "label": "lastUnstakeTime",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:69"
          },
          {
            "contract": "StakingThales",
            "label": "unstaking",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:70"
          },
          {
            "contract": "StakingThales",
            "label": "unstakingAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:71"
          },
          {
            "contract": "StakingThales",
            "label": "_stakedBalances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:72"
          },
          {
            "contract": "StakingThales",
            "label": "_lastRewardsClaimedPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:73"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:74"
          },
          {
            "contract": "StakingThales",
            "label": "lastAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:83"
          },
          {
            "contract": "StakingThales",
            "label": "stakerAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)198_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:84"
          },
          {
            "contract": "StakingThales",
            "label": "extraRewardsActive",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:86"
          },
          {
            "contract": "StakingThales",
            "label": "ThalesStakingRewardsPool",
            "type": "t_contract(IThalesStakingRewardsPool)3623",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:87"
          },
          {
            "contract": "StakingThales",
            "label": "maxSNXRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:89"
          },
          {
            "contract": "StakingThales",
            "label": "maxAMMVolumeRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:90"
          },
          {
            "contract": "StakingThales",
            "label": "AMMVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:91"
          },
          {
            "contract": "StakingThales",
            "label": "maxThalesRoyaleRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:92"
          },
          {
            "contract": "StakingThales",
            "label": "SNXVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:97"
          },
          {
            "contract": "StakingThales",
            "label": "_lastStakingPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:99"
          },
          {
            "contract": "StakingThales",
            "label": "totalStakedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:101"
          },
          {
            "contract": "StakingThales",
            "label": "totalEscrowedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:102"
          },
          {
            "contract": "StakingThales",
            "label": "exoticBonds",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:103"
          },
          {
            "contract": "StakingThales",
            "label": "addressResolver",
            "type": "t_contract(IAddressResolver)2713",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:105"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:107"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:108"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:110"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)198_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:111"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesRangedAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:112"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)198_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:113"
          },
          {
            "contract": "StakingThales",
            "label": "lastExoticMarketsUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:114"
          },
          {
            "contract": "StakingThales",
            "label": "exoticMarketsVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)198_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:115"
          },
          {
            "contract": "StakingThales",
            "label": "lastSportsAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:116"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)198_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:117"
          },
          {
            "contract": "StakingThales",
            "label": "canClaimOnBehalf",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:119"
          },
          {
            "contract": "StakingThales",
            "label": "mergeAccountEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:121"
          },
          {
            "contract": "StakingThales",
            "label": "delegatedVolume",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:123"
          },
          {
            "contract": "StakingThales",
            "label": "supportedSportVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:124"
          },
          {
            "contract": "StakingThales",
            "label": "supportedAMMVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:125"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMLiquidityPool",
            "type": "t_contract(ISportsAMMLiquidityPool)3248",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:127"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMMLiquidityPool",
            "type": "t_contract(IThalesAMMLiquidityPool)3544",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:128"
          },
          {
            "contract": "StakingThales",
            "label": "stakingThalesBonusRewardsManager",
            "type": "t_contract(IStakingThalesBonusRewardsManager)3402",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:130"
          },
          {
            "contract": "StakingThales",
            "label": "parlayAMMLiquidityPool",
            "type": "t_contract(IParlayAMMLiquidityPool)2868",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:131"
          },
          {
            "contract": "StakingThales",
            "label": "readOnlyMode",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:133"
          },
          {
            "contract": "StakingThales",
            "label": "closingPeriodInProgress",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:134"
          },
          {
            "contract": "StakingThales",
            "label": "closingPeriodPauseTime",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:135"
          },
          {
            "contract": "StakingThales",
            "label": "sendCCIPMessage",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:137"
          },
          {
            "contract": "StakingThales",
            "label": "stakingThalesBettingProxy",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:139"
          }
        ],
        "types": {
          "t_contract(IEscrowThales)2830": {
            "label": "contract IEscrowThales"
          },
          "t_contract(IERC20)4078": {
            "label": "contract IERC20"
          },
          "t_contract(ISNXRewards)3238": {
            "label": "contract ISNXRewards"
          },
          "t_contract(IThalesRoyale)3613": {
            "label": "contract IThalesRoyale"
          },
          "t_contract(IPriceFeed)3200": {
            "label": "contract IPriceFeed"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)198_storage)4_storage)": {
            "label": "mapping(address => struct StakingThales.AMMVolumeEntry[4])"
          },
          "t_array(t_struct(AMMVolumeEntry)198_storage)4_storage": {
            "label": "struct StakingThales.AMMVolumeEntry[4]"
          },
          "t_struct(AMMVolumeEntry)198_storage": {
            "label": "struct StakingThales.AMMVolumeEntry",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "period",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IThalesStakingRewardsPool)3623": {
            "label": "contract IThalesStakingRewardsPool"
          },
          "t_contract(IAddressResolver)2713": {
            "label": "contract IAddressResolver"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_contract(ISportsAMMLiquidityPool)3248": {
            "label": "contract ISportsAMMLiquidityPool"
          },
          "t_contract(IThalesAMMLiquidityPool)3544": {
            "label": "contract IThalesAMMLiquidityPool"
          },
          "t_contract(IStakingThalesBonusRewardsManager)3402": {
            "label": "contract IStakingThalesBonusRewardsManager"
          },
          "t_contract(IParlayAMMLiquidityPool)2868": {
            "label": "contract IParlayAMMLiquidityPool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0870930fc7d61693880b0de19974526b91f55b674bde511ae94b72818db792ac": {
      "address": "0xD3EdE0993632E67097A5423C49b5C5d6af26ecfd",
      "txHash": "0x48a8a6cbff5e2b1350080757d7bc25f9d2f304f8e9a6c170f9933908627c6492",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyPausable.sol:12"
          },
          {
            "contract": "StakingThales",
            "label": "iEscrowThales",
            "type": "t_contract(IEscrowThales)6385",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:38"
          },
          {
            "contract": "StakingThales",
            "label": "stakingToken",
            "type": "t_contract(IERC20)9674",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:39"
          },
          {
            "contract": "StakingThales",
            "label": "feeToken",
            "type": "t_contract(IERC20)9674",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:40"
          },
          {
            "contract": "StakingThales",
            "label": "SNXRewards",
            "type": "t_contract(ISNXRewards)6793",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:41"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRoyale",
            "type": "t_contract(IThalesRoyale)7168",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:42"
          },
          {
            "contract": "StakingThales",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)6755",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:43"
          },
          {
            "contract": "StakingThales",
            "label": "periodsOfStaking",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:45"
          },
          {
            "contract": "StakingThales",
            "label": "lastPeriodTimeStamp",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:46"
          },
          {
            "contract": "StakingThales",
            "label": "durationPeriod",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:47"
          },
          {
            "contract": "StakingThales",
            "label": "unstakeDurationPeriod",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:48"
          },
          {
            "contract": "StakingThales",
            "label": "startTimeStamp",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:49"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodRewards",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:50"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodFees",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:51"
          },
          {
            "contract": "StakingThales",
            "label": "distributeFeesEnabled",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:52"
          },
          {
            "contract": "StakingThales",
            "label": "fixedPeriodReward",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:53"
          },
          {
            "contract": "StakingThales",
            "label": "periodExtraReward",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:54"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXRewardsInPeriod",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:55"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXFeesInPeriod",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:56"
          },
          {
            "contract": "StakingThales",
            "label": "claimEnabled",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:57"
          },
          {
            "contract": "StakingThales",
            "label": "stakerLifetimeRewardsClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:59"
          },
          {
            "contract": "StakingThales",
            "label": "stakerFeesClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:60"
          },
          {
            "contract": "StakingThales",
            "label": "_totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:62"
          },
          {
            "contract": "StakingThales",
            "label": "_totalEscrowedAmount",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:63"
          },
          {
            "contract": "StakingThales",
            "label": "_totalPendingStakeAmount",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:64"
          },
          {
            "contract": "StakingThales",
            "label": "_totalUnclaimedRewards",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:65"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardsClaimed",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:66"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardFeesClaimed",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:67"
          },
          {
            "contract": "StakingThales",
            "label": "lastUnstakeTime",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:69"
          },
          {
            "contract": "StakingThales",
            "label": "unstaking",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:70"
          },
          {
            "contract": "StakingThales",
            "label": "unstakingAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:71"
          },
          {
            "contract": "StakingThales",
            "label": "_stakedBalances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:72"
          },
          {
            "contract": "StakingThales",
            "label": "_lastRewardsClaimedPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:73"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:74"
          },
          {
            "contract": "StakingThales",
            "label": "lastAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:83"
          },
          {
            "contract": "StakingThales",
            "label": "stakerAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3457_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:84"
          },
          {
            "contract": "StakingThales",
            "label": "extraRewardsActive",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:86"
          },
          {
            "contract": "StakingThales",
            "label": "ThalesStakingRewardsPool",
            "type": "t_contract(IThalesStakingRewardsPool)7178",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:87"
          },
          {
            "contract": "StakingThales",
            "label": "maxSNXRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:89"
          },
          {
            "contract": "StakingThales",
            "label": "maxAMMVolumeRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:90"
          },
          {
            "contract": "StakingThales",
            "label": "AMMVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:91"
          },
          {
            "contract": "StakingThales",
            "label": "maxThalesRoyaleRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:92"
          },
          {
            "contract": "StakingThales",
            "label": "SNXVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:97"
          },
          {
            "contract": "StakingThales",
            "label": "_lastStakingPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:99"
          },
          {
            "contract": "StakingThales",
            "label": "totalStakedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:101"
          },
          {
            "contract": "StakingThales",
            "label": "totalEscrowedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:102"
          },
          {
            "contract": "StakingThales",
            "label": "exoticBonds",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:103"
          },
          {
            "contract": "StakingThales",
            "label": "addressResolver",
            "type": "t_contract(IAddressResolver)6268",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:105"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMM",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:107"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:108"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:110"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3457_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:111"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesRangedAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:112"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3457_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:113"
          },
          {
            "contract": "StakingThales",
            "label": "lastExoticMarketsUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:114"
          },
          {
            "contract": "StakingThales",
            "label": "exoticMarketsVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3457_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:115"
          },
          {
            "contract": "StakingThales",
            "label": "lastSportsAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:116"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3457_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:117"
          },
          {
            "contract": "StakingThales",
            "label": "canClaimOnBehalf",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:119"
          },
          {
            "contract": "StakingThales",
            "label": "mergeAccountEnabled",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:121"
          },
          {
            "contract": "StakingThales",
            "label": "delegatedVolume",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:123"
          },
          {
            "contract": "StakingThales",
            "label": "supportedSportVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:124"
          },
          {
            "contract": "StakingThales",
            "label": "supportedAMMVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:125"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMLiquidityPool",
            "type": "t_contract(ISportsAMMLiquidityPool)6803",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:127"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMMLiquidityPool",
            "type": "t_contract(IThalesAMMLiquidityPool)7099",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:128"
          },
          {
            "contract": "StakingThales",
            "label": "stakingThalesBonusRewardsManager",
            "type": "t_contract(IStakingThalesBonusRewardsManager)6957",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:130"
          },
          {
            "contract": "StakingThales",
            "label": "parlayAMMLiquidityPool",
            "type": "t_contract(IParlayAMMLiquidityPool)6423",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:131"
          },
          {
            "contract": "StakingThales",
            "label": "readOnlyMode",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:133"
          },
          {
            "contract": "StakingThales",
            "label": "closingPeriodInProgress",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:134"
          },
          {
            "contract": "StakingThales",
            "label": "closingPeriodPauseTime",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:135"
          },
          {
            "contract": "StakingThales",
            "label": "sendCCIPMessage",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:137"
          },
          {
            "contract": "StakingThales",
            "label": "stakingThalesBettingProxy",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:139"
          }
        ],
        "types": {
          "t_contract(IEscrowThales)6385": {
            "label": "contract IEscrowThales"
          },
          "t_contract(IERC20)9674": {
            "label": "contract IERC20"
          },
          "t_contract(ISNXRewards)6793": {
            "label": "contract ISNXRewards"
          },
          "t_contract(IThalesRoyale)7168": {
            "label": "contract IThalesRoyale"
          },
          "t_contract(IPriceFeed)6755": {
            "label": "contract IPriceFeed"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3457_storage)4_storage)": {
            "label": "mapping(address => struct StakingThales.AMMVolumeEntry[4])"
          },
          "t_array(t_struct(AMMVolumeEntry)3457_storage)4_storage": {
            "label": "struct StakingThales.AMMVolumeEntry[4]"
          },
          "t_struct(AMMVolumeEntry)3457_storage": {
            "label": "struct StakingThales.AMMVolumeEntry",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "period",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IThalesStakingRewardsPool)7178": {
            "label": "contract IThalesStakingRewardsPool"
          },
          "t_contract(IAddressResolver)6268": {
            "label": "contract IAddressResolver"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_contract(ISportsAMMLiquidityPool)6803": {
            "label": "contract ISportsAMMLiquidityPool"
          },
          "t_contract(IThalesAMMLiquidityPool)7099": {
            "label": "contract IThalesAMMLiquidityPool"
          },
          "t_contract(IStakingThalesBonusRewardsManager)6957": {
            "label": "contract IStakingThalesBonusRewardsManager"
          },
          "t_contract(IParlayAMMLiquidityPool)6423": {
            "label": "contract IParlayAMMLiquidityPool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "df59e2fceed6306331727303d451de125c2afd937e43d1b937278d86684b99aa": {
      "address": "0xce05F7481Fe2F6668189D941563b560772068f13",
      "txHash": "0x0c3c552fb9c187c31d186de5e3690ada56b661e3126f20ec3d5b21357542ee05",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyPausable.sol:12"
          },
          {
            "contract": "StakingData",
            "label": "stakingThales",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingData.sol:50"
          },
          {
            "contract": "StakingData",
            "label": "escrowThales",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingData.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7d8561ee5bb276a0d7c54114339b904e76c110fb797fefdfce062c311421734d": {
      "address": "0x86295F399B21e37EA3792b0201E4d395F6328f45",
      "txHash": "0x7172bf1a707b9bed80f1f5c4f801f2a96b57c561b1c9e9a38f93b9c7cc79879b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyPausable.sol:12"
          },
          {
            "contract": "StakingThales",
            "label": "iEscrowThales",
            "type": "t_contract(IEscrowThales)6340",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:38"
          },
          {
            "contract": "StakingThales",
            "label": "stakingToken",
            "type": "t_contract(IERC20)9629",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:39"
          },
          {
            "contract": "StakingThales",
            "label": "feeToken",
            "type": "t_contract(IERC20)9629",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:40"
          },
          {
            "contract": "StakingThales",
            "label": "SNXRewards",
            "type": "t_contract(ISNXRewards)6748",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:41"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRoyale",
            "type": "t_contract(IThalesRoyale)7123",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:42"
          },
          {
            "contract": "StakingThales",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)6710",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:43"
          },
          {
            "contract": "StakingThales",
            "label": "periodsOfStaking",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:45"
          },
          {
            "contract": "StakingThales",
            "label": "lastPeriodTimeStamp",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:46"
          },
          {
            "contract": "StakingThales",
            "label": "durationPeriod",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:47"
          },
          {
            "contract": "StakingThales",
            "label": "unstakeDurationPeriod",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:48"
          },
          {
            "contract": "StakingThales",
            "label": "startTimeStamp",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:49"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodRewards",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:50"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodFees",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:51"
          },
          {
            "contract": "StakingThales",
            "label": "distributeFeesEnabled",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:52"
          },
          {
            "contract": "StakingThales",
            "label": "fixedPeriodReward",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:53"
          },
          {
            "contract": "StakingThales",
            "label": "periodExtraReward",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:54"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXRewardsInPeriod",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:55"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXFeesInPeriod",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:56"
          },
          {
            "contract": "StakingThales",
            "label": "claimEnabled",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:57"
          },
          {
            "contract": "StakingThales",
            "label": "stakerLifetimeRewardsClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:59"
          },
          {
            "contract": "StakingThales",
            "label": "stakerFeesClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:60"
          },
          {
            "contract": "StakingThales",
            "label": "_totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:62"
          },
          {
            "contract": "StakingThales",
            "label": "_totalEscrowedAmount",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:63"
          },
          {
            "contract": "StakingThales",
            "label": "_totalPendingStakeAmount",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:64"
          },
          {
            "contract": "StakingThales",
            "label": "_totalUnclaimedRewards",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:65"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardsClaimed",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:66"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardFeesClaimed",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:67"
          },
          {
            "contract": "StakingThales",
            "label": "lastUnstakeTime",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:69"
          },
          {
            "contract": "StakingThales",
            "label": "unstaking",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:70"
          },
          {
            "contract": "StakingThales",
            "label": "unstakingAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:71"
          },
          {
            "contract": "StakingThales",
            "label": "_stakedBalances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:72"
          },
          {
            "contract": "StakingThales",
            "label": "_lastRewardsClaimedPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:73"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:74"
          },
          {
            "contract": "StakingThales",
            "label": "lastAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:83"
          },
          {
            "contract": "StakingThales",
            "label": "stakerAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3457_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:84"
          },
          {
            "contract": "StakingThales",
            "label": "extraRewardsActive",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:86"
          },
          {
            "contract": "StakingThales",
            "label": "ThalesStakingRewardsPool",
            "type": "t_contract(IThalesStakingRewardsPool)7133",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:87"
          },
          {
            "contract": "StakingThales",
            "label": "maxSNXRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:89"
          },
          {
            "contract": "StakingThales",
            "label": "maxAMMVolumeRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:90"
          },
          {
            "contract": "StakingThales",
            "label": "AMMVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:91"
          },
          {
            "contract": "StakingThales",
            "label": "maxThalesRoyaleRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:92"
          },
          {
            "contract": "StakingThales",
            "label": "SNXVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:97"
          },
          {
            "contract": "StakingThales",
            "label": "_lastStakingPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:99"
          },
          {
            "contract": "StakingThales",
            "label": "totalStakedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:101"
          },
          {
            "contract": "StakingThales",
            "label": "totalEscrowedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:102"
          },
          {
            "contract": "StakingThales",
            "label": "exoticBonds",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:103"
          },
          {
            "contract": "StakingThales",
            "label": "addressResolver",
            "type": "t_contract(IAddressResolver)6223",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:105"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMM",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:107"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:108"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:110"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3457_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:111"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesRangedAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:112"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3457_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:113"
          },
          {
            "contract": "StakingThales",
            "label": "lastExoticMarketsUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:114"
          },
          {
            "contract": "StakingThales",
            "label": "exoticMarketsVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3457_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:115"
          },
          {
            "contract": "StakingThales",
            "label": "lastSportsAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:116"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3457_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:117"
          },
          {
            "contract": "StakingThales",
            "label": "canClaimOnBehalf",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:119"
          },
          {
            "contract": "StakingThales",
            "label": "mergeAccountEnabled",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:121"
          },
          {
            "contract": "StakingThales",
            "label": "delegatedVolume",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:123"
          },
          {
            "contract": "StakingThales",
            "label": "supportedSportVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:124"
          },
          {
            "contract": "StakingThales",
            "label": "supportedAMMVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:125"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMLiquidityPool",
            "type": "t_contract(ISportsAMMLiquidityPool)6758",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:127"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMMLiquidityPool",
            "type": "t_contract(IThalesAMMLiquidityPool)7054",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:128"
          },
          {
            "contract": "StakingThales",
            "label": "stakingThalesBonusRewardsManager",
            "type": "t_contract(IStakingThalesBonusRewardsManager)6912",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:130"
          },
          {
            "contract": "StakingThales",
            "label": "parlayAMMLiquidityPool",
            "type": "t_contract(IParlayAMMLiquidityPool)6378",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:131"
          },
          {
            "contract": "StakingThales",
            "label": "readOnlyMode",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:133"
          },
          {
            "contract": "StakingThales",
            "label": "closingPeriodInProgress",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:134"
          },
          {
            "contract": "StakingThales",
            "label": "closingPeriodPauseTime",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:135"
          },
          {
            "contract": "StakingThales",
            "label": "sendCCIPMessage",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:137"
          },
          {
            "contract": "StakingThales",
            "label": "stakingThalesBettingProxy",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:139"
          }
        ],
        "types": {
          "t_contract(IEscrowThales)6340": {
            "label": "contract IEscrowThales"
          },
          "t_contract(IERC20)9629": {
            "label": "contract IERC20"
          },
          "t_contract(ISNXRewards)6748": {
            "label": "contract ISNXRewards"
          },
          "t_contract(IThalesRoyale)7123": {
            "label": "contract IThalesRoyale"
          },
          "t_contract(IPriceFeed)6710": {
            "label": "contract IPriceFeed"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3457_storage)4_storage)": {
            "label": "mapping(address => struct StakingThales.AMMVolumeEntry[4])"
          },
          "t_array(t_struct(AMMVolumeEntry)3457_storage)4_storage": {
            "label": "struct StakingThales.AMMVolumeEntry[4]"
          },
          "t_struct(AMMVolumeEntry)3457_storage": {
            "label": "struct StakingThales.AMMVolumeEntry",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "period",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IThalesStakingRewardsPool)7133": {
            "label": "contract IThalesStakingRewardsPool"
          },
          "t_contract(IAddressResolver)6223": {
            "label": "contract IAddressResolver"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_contract(ISportsAMMLiquidityPool)6758": {
            "label": "contract ISportsAMMLiquidityPool"
          },
          "t_contract(IThalesAMMLiquidityPool)7054": {
            "label": "contract IThalesAMMLiquidityPool"
          },
          "t_contract(IStakingThalesBonusRewardsManager)6912": {
            "label": "contract IStakingThalesBonusRewardsManager"
          },
          "t_contract(IParlayAMMLiquidityPool)6378": {
            "label": "contract IParlayAMMLiquidityPool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "83eaff16f33395a35bfeef1d34aa22465328fc68db43a03c0e6e3a6471b8beb1": {
      "address": "0x7d920CCfc93386fb23dC73641a039fb29D32D89C",
      "txHash": "0x16f60b1713e395d1d12cd30e522b5dfcf14a08684492ac7f5fe340a6f5dc6239",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "PriceFeed",
            "label": "aggregators",
            "type": "t_mapping(t_bytes32,t_contract(AggregatorV2V3Interface)141)",
            "src": "contracts/PriceFeed/PriceFeed.sol:23"
          },
          {
            "contract": "PriceFeed",
            "label": "currencyKeyDecimals",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "contracts/PriceFeed/PriceFeed.sol:25"
          },
          {
            "contract": "PriceFeed",
            "label": "aggregatorKeys",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/PriceFeed/PriceFeed.sol:27"
          },
          {
            "contract": "PriceFeed",
            "label": "currencyKeys",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/PriceFeed/PriceFeed.sol:30"
          },
          {
            "contract": "PriceFeed",
            "label": "pools",
            "type": "t_mapping(t_bytes32,t_contract(IUniswapV3Pool)840)",
            "src": "contracts/PriceFeed/PriceFeed.sol:31"
          },
          {
            "contract": "PriceFeed",
            "label": "twapInterval",
            "type": "t_int56",
            "src": "contracts/PriceFeed/PriceFeed.sol:33"
          },
          {
            "contract": "PriceFeed",
            "label": "_ETH",
            "type": "t_address",
            "src": "contracts/PriceFeed/PriceFeed.sol:40"
          },
          {
            "contract": "PriceFeed",
            "label": "_wETH",
            "type": "t_address",
            "src": "contracts/PriceFeed/PriceFeed.sol:41"
          },
          {
            "contract": "PriceFeed",
            "label": "useLastTickForTWAP",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/PriceFeed/PriceFeed.sol:43"
          },
          {
            "contract": "PriceFeed",
            "label": "staticPricePerAsset",
            "type": "t_mapping(t_bytes32,t_struct(RateAndUpdatedTime)1302_storage)",
            "src": "contracts/PriceFeed/PriceFeed.sol:45"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_contract(AggregatorV2V3Interface)141)": {
            "label": "mapping(bytes32 => contract AggregatorV2V3Interface)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(AggregatorV2V3Interface)141": {
            "label": "contract AggregatorV2V3Interface"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_contract(IUniswapV3Pool)840)": {
            "label": "mapping(bytes32 => contract IUniswapV3Pool)"
          },
          "t_contract(IUniswapV3Pool)840": {
            "label": "contract IUniswapV3Pool"
          },
          "t_int56": {
            "label": "int56"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RateAndUpdatedTime)1302_storage)": {
            "label": "mapping(bytes32 => struct PriceFeed.RateAndUpdatedTime)"
          },
          "t_struct(RateAndUpdatedTime)1302_storage": {
            "label": "struct PriceFeed.RateAndUpdatedTime",
            "members": [
              {
                "label": "rate",
                "type": "t_uint216"
              },
              {
                "label": "time",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint216": {
            "label": "uint216"
          },
          "t_uint40": {
            "label": "uint40"
          }
        }
      }
    },
    "78119d93160794839ee37e52ade62f571837a5103f42057d06730b8852a443a0": {
      "address": "0xeb55C82Bed4262a0E151ea2021824c1457980E40",
      "txHash": "0x08da99edfd520257b9c856ae95652f349be8e37c4185b026d26d339967cdbb6d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "PriceFeed",
            "label": "aggregators",
            "type": "t_mapping(t_bytes32,t_contract(AggregatorV2V3Interface)141)",
            "src": "contracts/PriceFeed/PriceFeed.sol:23"
          },
          {
            "contract": "PriceFeed",
            "label": "currencyKeyDecimals",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "contracts/PriceFeed/PriceFeed.sol:25"
          },
          {
            "contract": "PriceFeed",
            "label": "aggregatorKeys",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/PriceFeed/PriceFeed.sol:27"
          },
          {
            "contract": "PriceFeed",
            "label": "currencyKeys",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/PriceFeed/PriceFeed.sol:30"
          },
          {
            "contract": "PriceFeed",
            "label": "pools",
            "type": "t_mapping(t_bytes32,t_contract(IUniswapV3Pool)840)",
            "src": "contracts/PriceFeed/PriceFeed.sol:31"
          },
          {
            "contract": "PriceFeed",
            "label": "twapInterval",
            "type": "t_int56",
            "src": "contracts/PriceFeed/PriceFeed.sol:33"
          },
          {
            "contract": "PriceFeed",
            "label": "_ETH",
            "type": "t_address",
            "src": "contracts/PriceFeed/PriceFeed.sol:40"
          },
          {
            "contract": "PriceFeed",
            "label": "_wETH",
            "type": "t_address",
            "src": "contracts/PriceFeed/PriceFeed.sol:41"
          },
          {
            "contract": "PriceFeed",
            "label": "useLastTickForTWAP",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/PriceFeed/PriceFeed.sol:43"
          },
          {
            "contract": "PriceFeed",
            "label": "staticPricePerAsset",
            "type": "t_mapping(t_bytes32,t_struct(RateAndUpdatedTime)1302_storage)",
            "src": "contracts/PriceFeed/PriceFeed.sol:45"
          },
          {
            "contract": "PriceFeed",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/PriceFeed/PriceFeed.sol:47"
          },
          {
            "contract": "PriceFeed",
            "label": "rateUpdateInterval",
            "type": "t_uint256",
            "src": "contracts/PriceFeed/PriceFeed.sol:53"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_contract(AggregatorV2V3Interface)141)": {
            "label": "mapping(bytes32 => contract AggregatorV2V3Interface)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(AggregatorV2V3Interface)141": {
            "label": "contract AggregatorV2V3Interface"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_contract(IUniswapV3Pool)840)": {
            "label": "mapping(bytes32 => contract IUniswapV3Pool)"
          },
          "t_contract(IUniswapV3Pool)840": {
            "label": "contract IUniswapV3Pool"
          },
          "t_int56": {
            "label": "int56"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RateAndUpdatedTime)1302_storage)": {
            "label": "mapping(bytes32 => struct PriceFeed.RateAndUpdatedTime)"
          },
          "t_struct(RateAndUpdatedTime)1302_storage": {
            "label": "struct PriceFeed.RateAndUpdatedTime",
            "members": [
              {
                "label": "rate",
                "type": "t_uint216"
              },
              {
                "label": "time",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint216": {
            "label": "uint216"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "6b676dfe8b53c33273b43e830bf32ee0bddd7d7161b5588e6619b8a9ccaf6ce3": {
      "address": "0x80E9a792Ee9150299b09211d8BDb87a66F6770f6",
      "txHash": "0x7faac544b10096d6de84d60711f61ef86b4a31952466d0dc20d190243f97bb7f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "PriceFeed",
            "label": "aggregators",
            "type": "t_mapping(t_bytes32,t_contract(AggregatorV2V3Interface)141)",
            "src": "contracts/PriceFeed/PriceFeed.sol:23"
          },
          {
            "contract": "PriceFeed",
            "label": "currencyKeyDecimals",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "contracts/PriceFeed/PriceFeed.sol:25"
          },
          {
            "contract": "PriceFeed",
            "label": "aggregatorKeys",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/PriceFeed/PriceFeed.sol:27"
          },
          {
            "contract": "PriceFeed",
            "label": "currencyKeys",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/PriceFeed/PriceFeed.sol:30"
          },
          {
            "contract": "PriceFeed",
            "label": "pools",
            "type": "t_mapping(t_bytes32,t_contract(IUniswapV3Pool)12445)",
            "src": "contracts/PriceFeed/PriceFeed.sol:31"
          },
          {
            "contract": "PriceFeed",
            "label": "twapInterval",
            "type": "t_int56",
            "src": "contracts/PriceFeed/PriceFeed.sol:33"
          },
          {
            "contract": "PriceFeed",
            "label": "_ETH",
            "type": "t_address",
            "src": "contracts/PriceFeed/PriceFeed.sol:40"
          },
          {
            "contract": "PriceFeed",
            "label": "_wETH",
            "type": "t_address",
            "src": "contracts/PriceFeed/PriceFeed.sol:41"
          },
          {
            "contract": "PriceFeed",
            "label": "useLastTickForTWAP",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/PriceFeed/PriceFeed.sol:43"
          },
          {
            "contract": "PriceFeed",
            "label": "staticPricePerAsset",
            "type": "t_mapping(t_bytes32,t_struct(RateAndUpdatedTime)35552_storage)",
            "src": "contracts/PriceFeed/PriceFeed.sol:45"
          },
          {
            "contract": "PriceFeed",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/PriceFeed/PriceFeed.sol:47"
          },
          {
            "contract": "PriceFeed",
            "label": "rateUpdateInterval",
            "type": "t_uint256",
            "src": "contracts/PriceFeed/PriceFeed.sol:53"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_contract(AggregatorV2V3Interface)141)": {
            "label": "mapping(bytes32 => contract AggregatorV2V3Interface)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(AggregatorV2V3Interface)141": {
            "label": "contract AggregatorV2V3Interface"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_contract(IUniswapV3Pool)12445)": {
            "label": "mapping(bytes32 => contract IUniswapV3Pool)"
          },
          "t_contract(IUniswapV3Pool)12445": {
            "label": "contract IUniswapV3Pool"
          },
          "t_int56": {
            "label": "int56"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RateAndUpdatedTime)35552_storage)": {
            "label": "mapping(bytes32 => struct PriceFeed.RateAndUpdatedTime)"
          },
          "t_struct(RateAndUpdatedTime)35552_storage": {
            "label": "struct PriceFeed.RateAndUpdatedTime",
            "members": [
              {
                "label": "rate",
                "type": "t_uint216"
              },
              {
                "label": "time",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint216": {
            "label": "uint216"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "4962f22f1953e40155128be213a6c48c9a5111ec3193ae31deb3da58d0a761a7": {
      "address": "0x225D9b533F7886D9C9f9192E654C5BB7c9fbabF2",
      "txHash": "0x91b135c0f9255162fc73da8575f95c9f608fe5cd923ac16140d48016b94a756f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "PriceFeed",
            "label": "aggregators",
            "type": "t_mapping(t_bytes32,t_contract(AggregatorV2V3Interface)141)",
            "src": "contracts/PriceFeed/PriceFeed.sol:23"
          },
          {
            "contract": "PriceFeed",
            "label": "currencyKeyDecimals",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "contracts/PriceFeed/PriceFeed.sol:25"
          },
          {
            "contract": "PriceFeed",
            "label": "aggregatorKeys",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/PriceFeed/PriceFeed.sol:27"
          },
          {
            "contract": "PriceFeed",
            "label": "currencyKeys",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/PriceFeed/PriceFeed.sol:30"
          },
          {
            "contract": "PriceFeed",
            "label": "pools",
            "type": "t_mapping(t_bytes32,t_contract(IUniswapV3Pool)12445)",
            "src": "contracts/PriceFeed/PriceFeed.sol:31"
          },
          {
            "contract": "PriceFeed",
            "label": "twapInterval",
            "type": "t_int56",
            "src": "contracts/PriceFeed/PriceFeed.sol:33"
          },
          {
            "contract": "PriceFeed",
            "label": "_ETH",
            "type": "t_address",
            "src": "contracts/PriceFeed/PriceFeed.sol:40"
          },
          {
            "contract": "PriceFeed",
            "label": "_wETH",
            "type": "t_address",
            "src": "contracts/PriceFeed/PriceFeed.sol:41"
          },
          {
            "contract": "PriceFeed",
            "label": "useLastTickForTWAP",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/PriceFeed/PriceFeed.sol:43"
          },
          {
            "contract": "PriceFeed",
            "label": "staticPricePerAsset",
            "type": "t_mapping(t_bytes32,t_struct(RateAndUpdatedTime)35552_storage)",
            "src": "contracts/PriceFeed/PriceFeed.sol:45"
          },
          {
            "contract": "PriceFeed",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/PriceFeed/PriceFeed.sol:47"
          },
          {
            "contract": "PriceFeed",
            "label": "allowedRateUpdatePercentage",
            "type": "t_uint256",
            "src": "contracts/PriceFeed/PriceFeed.sol:51"
          },
          {
            "contract": "PriceFeed",
            "label": "rateUpdateInterval",
            "type": "t_uint256",
            "src": "contracts/PriceFeed/PriceFeed.sol:53"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_contract(AggregatorV2V3Interface)141)": {
            "label": "mapping(bytes32 => contract AggregatorV2V3Interface)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(AggregatorV2V3Interface)141": {
            "label": "contract AggregatorV2V3Interface"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_contract(IUniswapV3Pool)12445)": {
            "label": "mapping(bytes32 => contract IUniswapV3Pool)"
          },
          "t_contract(IUniswapV3Pool)12445": {
            "label": "contract IUniswapV3Pool"
          },
          "t_int56": {
            "label": "int56"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RateAndUpdatedTime)35552_storage)": {
            "label": "mapping(bytes32 => struct PriceFeed.RateAndUpdatedTime)"
          },
          "t_struct(RateAndUpdatedTime)35552_storage": {
            "label": "struct PriceFeed.RateAndUpdatedTime",
            "members": [
              {
                "label": "rate",
                "type": "t_uint216"
              },
              {
                "label": "time",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint216": {
            "label": "uint216"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "0ca0734326a51af59cddbfcc795ecbd42d738e263972746a05103c9e4f8bfa6d": {
      "address": "0xf55b63C7A692be226EddBEe56EF2b84a25f3212F",
      "txHash": "0xb900b6274b2adec6dba0aced7e5405eee03925af15e8d4e8ae2cd8b903005395",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "PriceFeed",
            "label": "aggregators",
            "type": "t_mapping(t_bytes32,t_contract(AggregatorV2V3Interface)141)",
            "src": "contracts/PriceFeed/PriceFeed.sol:23"
          },
          {
            "contract": "PriceFeed",
            "label": "currencyKeyDecimals",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "contracts/PriceFeed/PriceFeed.sol:25"
          },
          {
            "contract": "PriceFeed",
            "label": "aggregatorKeys",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/PriceFeed/PriceFeed.sol:27"
          },
          {
            "contract": "PriceFeed",
            "label": "currencyKeys",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/PriceFeed/PriceFeed.sol:30"
          },
          {
            "contract": "PriceFeed",
            "label": "pools",
            "type": "t_mapping(t_bytes32,t_contract(IUniswapV3Pool)12445)",
            "src": "contracts/PriceFeed/PriceFeed.sol:31"
          },
          {
            "contract": "PriceFeed",
            "label": "twapInterval",
            "type": "t_int56",
            "src": "contracts/PriceFeed/PriceFeed.sol:33"
          },
          {
            "contract": "PriceFeed",
            "label": "_ETH",
            "type": "t_address",
            "src": "contracts/PriceFeed/PriceFeed.sol:40"
          },
          {
            "contract": "PriceFeed",
            "label": "_wETH",
            "type": "t_address",
            "src": "contracts/PriceFeed/PriceFeed.sol:41"
          },
          {
            "contract": "PriceFeed",
            "label": "useLastTickForTWAP",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/PriceFeed/PriceFeed.sol:43"
          },
          {
            "contract": "PriceFeed",
            "label": "staticPricePerAsset",
            "type": "t_mapping(t_bytes32,t_struct(RateAndUpdatedTime)35552_storage)",
            "src": "contracts/PriceFeed/PriceFeed.sol:45"
          },
          {
            "contract": "PriceFeed",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/PriceFeed/PriceFeed.sol:47"
          },
          {
            "contract": "PriceFeed",
            "label": "allowedRateUpdatePercentage",
            "type": "t_uint256",
            "src": "contracts/PriceFeed/PriceFeed.sol:51"
          },
          {
            "contract": "PriceFeed",
            "label": "rateUpdateInterval",
            "type": "t_uint256",
            "src": "contracts/PriceFeed/PriceFeed.sol:53"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_contract(AggregatorV2V3Interface)141)": {
            "label": "mapping(bytes32 => contract AggregatorV2V3Interface)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(AggregatorV2V3Interface)141": {
            "label": "contract AggregatorV2V3Interface"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_contract(IUniswapV3Pool)12445)": {
            "label": "mapping(bytes32 => contract IUniswapV3Pool)"
          },
          "t_contract(IUniswapV3Pool)12445": {
            "label": "contract IUniswapV3Pool"
          },
          "t_int56": {
            "label": "int56"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RateAndUpdatedTime)35552_storage)": {
            "label": "mapping(bytes32 => struct PriceFeed.RateAndUpdatedTime)"
          },
          "t_struct(RateAndUpdatedTime)35552_storage": {
            "label": "struct PriceFeed.RateAndUpdatedTime",
            "members": [
              {
                "label": "rate",
                "type": "t_uint216"
              },
              {
                "label": "time",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint216": {
            "label": "uint216"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "04e662eb899f7df8a8f6d1ee3ad89ae8400f82c4feeae0d3ec3cdd598ccdab77": {
      "address": "0xc8B67aA144E419C71a50e656a76BB7b77E73Bf72",
      "txHash": "0xd4e7f89d1ced0e3d0db598ab164f1b6b9a17fe2f037afcd4f671db05f5c63136",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SpeedMarketsAMMResolver",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)109694",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMMResolver.sol:43"
          },
          {
            "contract": "SpeedMarketsAMMResolver",
            "label": "speedMarketsAMM",
            "type": "t_contract(ISpeedMarketsAMM)111730",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMMResolver.sol:44"
          },
          {
            "contract": "SpeedMarketsAMMResolver",
            "label": "chainedSpeedMarketsAMM",
            "type": "t_contract(IChainedSpeedMarketsAMM)109825",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMMResolver.sol:45"
          }
        ],
        "types": {
          "t_contract(IAddressManager)109694": {
            "label": "contract IAddressManager"
          },
          "t_contract(ISpeedMarketsAMM)111730": {
            "label": "contract ISpeedMarketsAMM"
          },
          "t_contract(IChainedSpeedMarketsAMM)109825": {
            "label": "contract IChainedSpeedMarketsAMM"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "f5636ee47f600185eec2b56fa215336fe60bcdc0fdccbc19789daaf4f6af2935": {
      "address": "0x1ABfffb4b4E348e7e77b6b47dF2B7583Cd296E79",
      "txHash": "0xb046f07220d473ef3d32bbe99d2cd0f9bb469b59d266569818108be98aa79dff",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)6857_storage",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:38"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)6857_storage",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:39"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)470",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:67"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:69"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:71"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFee",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:72"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:74"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "supportedAsset",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:76"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minimalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:78"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:79"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:81"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:82"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:84"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:85"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "assetToPythId",
            "type": "t_mapping(t_bytes32,t_bytes32)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:87"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "pyth",
            "type": "t_contract(IPyth)1502",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:89"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelay",
            "type": "t_uint64",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:91"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)6847",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:93"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)6857_storage)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:95"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)6857_storage)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:96"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:98"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)6496",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:99"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:100"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)3666,t_uint256))",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:102"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)3666,t_uint256))",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:103"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelayForResolving",
            "type": "t_uint64",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:105"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "marketHasCreatedAtAttribute",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:107"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:109"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "timeThresholdsForFees",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:111"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFees",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:112"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketsAMMUtils",
            "type": "t_contract(SpeedMarketsAMMUtils)6231",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:114"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "marketHasFeeAttribute",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:116"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)6306",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:119"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxSkewImpact",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:121"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "skewSlippage",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:122"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "supportedNativeCollateral",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:124"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "bonusPerCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:127"
          }
        ],
        "types": {
          "t_struct(AddressSet)6857_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)470": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_contract(IPyth)1502": {
            "label": "contract IPyth"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(IStakingThales)6847": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_struct(AddressSet)6857_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(IMultiCollateralOnOffRamp)6496": {
            "label": "contract IMultiCollateralOnOffRamp"
          },
          "t_mapping(t_bytes32,t_mapping(t_enum(Direction)3666,t_uint256))": {
            "label": "mapping(bytes32 => mapping(enum SpeedMarket.Direction => uint256))"
          },
          "t_mapping(t_enum(Direction)3666,t_uint256)": {
            "label": "mapping(enum SpeedMarket.Direction => uint256)"
          },
          "t_enum(Direction)3666": {
            "label": "enum SpeedMarket.Direction",
            "members": [
              "Up",
              "Down"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(SpeedMarketsAMMUtils)6231": {
            "label": "contract SpeedMarketsAMMUtils"
          },
          "t_contract(IAddressManager)6306": {
            "label": "contract IAddressManager"
          }
        }
      }
    },
    "a6794557ecd20e0c97c62f0a676180e144b9fa33967194ec4fad8c2957e6e02c": {
      "address": "0x7d5f6ac365f5f812279baAFA4639f605F563bdf5",
      "txHash": "0xca88fa4cddccff0be4d250477ce4bffb46549a28cff1648f8a623420ee4655a7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8368",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:55"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)119377_storage",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:57"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)119377_storage",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:58"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)119377_storage)",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:60"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)119377_storage)",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:61"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minChainedMarkets",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:63"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxChainedMarkets",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:64"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minTimeFrame",
            "type": "t_uint64",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:66"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxTimeFrame",
            "type": "t_uint64",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:67"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:69"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:70"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxProfitPerIndividualMarket",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:72"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "payoutMultiplier",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:74"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxRisk",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:76"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "currentRisk",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:77"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "chainedSpeedMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:79"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:81"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)110001",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:84"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "payoutMultipliers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:88"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)8368": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(AddressSet)119377_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(AddressSet)119377_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IAddressManager)110001": {
            "label": "contract IAddressManager"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "69d466a498fcf5ca7a279cf9300af84a4c8d16773bd8e81fcc7da96da810b138": {
      "address": "0xB399df8e3Ae5630ca9622760eDd6e587834D2e66",
      "txHash": "0xb6257a6edcea5bd8fd538b74a588f94eda5cec61e7b53730bf90e749b9f4bfb2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SpeedMarketsAMMUtils",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)4557",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMMUtils.sol:27"
          },
          {
            "contract": "SpeedMarketsAMMUtils",
            "label": "collateralKey",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMMUtils.sol:30"
          }
        ],
        "types": {
          "t_contract(IAddressManager)4557": {
            "label": "contract IAddressManager"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "79d3b7087bc46fae093c79323ede80445a0cf92650aec4a40908a4740236c489": {
      "address": "0xb0937e9f12Af16911112597b4E73e08752201291",
      "txHash": "0xf3dc74b8840a4b6a539399519afa960132c8c2bfbe7755d42c584f2dedf8adae",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)5093_storage",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:38"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)5093_storage",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:39"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)470",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:66"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:68"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:70"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFee",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:71"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:73"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "supportedAsset",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:75"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minimalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:77"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:78"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:80"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:81"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:83"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:84"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "assetToPythId",
            "type": "t_mapping(t_bytes32,t_bytes32)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:86"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "pyth",
            "type": "t_contract(IPyth)1502",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:88"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelay",
            "type": "t_uint64",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:90"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)5083",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:92"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)5093_storage)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:94"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)5093_storage)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:95"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:97"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)4640",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:98"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:99"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)1581,t_uint256))",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:101"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)1581,t_uint256))",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:102"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelayForResolving",
            "type": "t_uint64",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:104"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "marketHasCreatedAtAttribute",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:106"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:108"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "timeThresholdsForFees",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:110"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFees",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:111"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketsAMMUtils",
            "type": "t_contract(ISpeedMarketsAMMUtils)4974",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:113"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "marketHasFeeAttribute",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:115"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)4557",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:118"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxSkewImpact",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:120"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "skewSlippage",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:121"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "supportedNativeCollateral",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:123"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "bonusPerCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:126"
          }
        ],
        "types": {
          "t_struct(AddressSet)5093_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)470": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_contract(IPyth)1502": {
            "label": "contract IPyth"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(IStakingThales)5083": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_struct(AddressSet)5093_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(IMultiCollateralOnOffRamp)4640": {
            "label": "contract IMultiCollateralOnOffRamp"
          },
          "t_mapping(t_bytes32,t_mapping(t_enum(Direction)1581,t_uint256))": {
            "label": "mapping(bytes32 => mapping(enum SpeedMarket.Direction => uint256))"
          },
          "t_mapping(t_enum(Direction)1581,t_uint256)": {
            "label": "mapping(enum SpeedMarket.Direction => uint256)"
          },
          "t_enum(Direction)1581": {
            "label": "enum SpeedMarket.Direction",
            "members": [
              "Up",
              "Down"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(ISpeedMarketsAMMUtils)4974": {
            "label": "contract ISpeedMarketsAMMUtils"
          },
          "t_contract(IAddressManager)4557": {
            "label": "contract IAddressManager"
          }
        }
      }
    },
    "586bd985aa746e6738824c6b31545a489e9dbc7cd63fba9ae09ff544c69826f5": {
      "address": "0x8C506C5d4119cC740Af32290398BE687c74D598d",
      "txHash": "0x873c1ada5bbacc4a92e72f854d987935568f6aa79e7ce9e991da662666ef0c74",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SpeedMarketsAMMUtils",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)110013",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMMUtils.sol:27"
          },
          {
            "contract": "SpeedMarketsAMMUtils",
            "label": "collateralKey",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMMUtils.sol:30"
          }
        ],
        "types": {
          "t_contract(IAddressManager)110013": {
            "label": "contract IAddressManager"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "796f64838eb5e29e740130f038f50aeb7733aea5bfc657c64dfd5bf419c14284": {
      "address": "0x37f2fc424278EcBa751f0c1920DCda907f074D59",
      "txHash": "0x2e80fee7f11fce4541b6693783846a9ec603b468829598cfddd2d99bb7840227",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)8217_storage",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:38"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)8217_storage",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:39"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)470",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:67"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:69"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:71"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFee",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:72"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:74"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "supportedAsset",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:76"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minimalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:78"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:79"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:81"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:82"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:84"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:85"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "assetToPythId",
            "type": "t_mapping(t_bytes32,t_bytes32)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:87"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "pyth",
            "type": "t_contract(IPyth)1502",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:89"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelay",
            "type": "t_uint64",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:91"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)8207",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:93"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)8217_storage)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:95"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)8217_storage)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:96"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:98"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)7812",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:99"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:100"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)3649,t_uint256))",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:102"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)3649,t_uint256))",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:103"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelayForResolving",
            "type": "t_uint64",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:105"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "marketHasCreatedAtAttribute",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:107"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:109"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "timeThresholdsForFees",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:111"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFees",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:112"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketsAMMUtils",
            "type": "t_contract(ISpeedMarketsAMMUtils)8098",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:114"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "marketHasFeeAttribute",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:116"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)7622",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:119"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxSkewImpact",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:121"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "skewSlippage",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:122"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "supportedNativeCollateral",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:124"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "bonusPerCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:127"
          }
        ],
        "types": {
          "t_struct(AddressSet)8217_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)470": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_contract(IPyth)1502": {
            "label": "contract IPyth"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(IStakingThales)8207": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_struct(AddressSet)8217_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(IMultiCollateralOnOffRamp)7812": {
            "label": "contract IMultiCollateralOnOffRamp"
          },
          "t_mapping(t_bytes32,t_mapping(t_enum(Direction)3649,t_uint256))": {
            "label": "mapping(bytes32 => mapping(enum SpeedMarket.Direction => uint256))"
          },
          "t_mapping(t_enum(Direction)3649,t_uint256)": {
            "label": "mapping(enum SpeedMarket.Direction => uint256)"
          },
          "t_enum(Direction)3649": {
            "label": "enum SpeedMarket.Direction",
            "members": [
              "Up",
              "Down"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(ISpeedMarketsAMMUtils)8098": {
            "label": "contract ISpeedMarketsAMMUtils"
          },
          "t_contract(IAddressManager)7622": {
            "label": "contract IAddressManager"
          }
        }
      }
    },
    "2af45e7274d8f8558add86daa19dc33a4f6e356fd62ab3d9d00f8fee07a8c18a": {
      "address": "0x8ea889470b5888aF4833063862022D0ad28037eA",
      "txHash": "0x655f8607937b5a6064884908bae9bb061d27f2e87d7ac6185844033cde7c789c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SpeedMarketsAMMData",
            "label": "speedMarketsAMM",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMMData.sol:19"
          },
          {
            "contract": "SpeedMarketsAMMData",
            "label": "chainedSpeedMarketsAMM",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMMData.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9bdc6988318d0a4ebbc37573c7d1d481fd1dd8029a22025de4b076e95f711009": {
      "address": "0x5a6CCEaE57Ff3B8f113f4eBBcabB77DD42Bed511",
      "txHash": "0xebacf5fb40f6fc504e8a1328e7e4e12c63f9aec96e0756585f4bbac40fb98b54",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SpeedMarketsAMMData",
            "label": "speedMarketsAMM",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMMData.sol:19"
          },
          {
            "contract": "SpeedMarketsAMMData",
            "label": "chainedSpeedMarketsAMM",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMMData.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "2837806d090232bdd25a792d37342bdccf5f6564f1dbcf34718d865b61139365": {
      "address": "0x43136d7fb582A0520A0405b2abA7146da6aE3c12",
      "txHash": "0x1661e676f31129a7e76cdf2e8980b9f10476b1042fc09b10e1b66aeb9ebf95e3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SpeedMarketsAMMData",
            "label": "speedMarketsAMM",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMMData.sol:19"
          },
          {
            "contract": "SpeedMarketsAMMData",
            "label": "chainedSpeedMarketsAMM",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMMData.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a4d5fc9b95a51b88d6bf8454b3ad7d3482a1f552647567b346ca353cd360a06d": {
      "address": "0x03C855C4e7563c8779Cb313F509aE34D3bc0ffC1",
      "txHash": "0x7ca0fcb7839d0168f303db0c828f51b337005af14978a3a1c3590c121db19973",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8368",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:55"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)119787_storage",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:57"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)119787_storage",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:58"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)119787_storage)",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:60"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)119787_storage)",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:61"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minChainedMarkets",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:63"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxChainedMarkets",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:64"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minTimeFrame",
            "type": "t_uint64",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:66"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxTimeFrame",
            "type": "t_uint64",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:67"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:69"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:70"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxProfitPerIndividualMarket",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:72"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "payoutMultiplier",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:74"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxRisk",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:76"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "currentRisk",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:77"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "chainedSpeedMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:79"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:81"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)110404",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:84"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "payoutMultipliers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:88"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)8368": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(AddressSet)119787_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(AddressSet)119787_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IAddressManager)110404": {
            "label": "contract IAddressManager"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "0d8c6d9c240d60f8023b7631575304f0a1713dc5c205ffd1337a66681000e406": {
      "address": "0x38948bcB7cD6Ec020AA14007D64eF90521CE1F85",
      "txHash": "0xfedac5fe6badadaf3e5cf5180ca9441297faf6080c19f73046d359e02fd3666a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)4706_storage",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:38"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)4706_storage",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:39"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)470",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:67"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:69"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:71"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFee",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:72"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:74"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "supportedAsset",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:76"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minimalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:78"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:79"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:81"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:82"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:84"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:85"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "assetToPythId",
            "type": "t_mapping(t_bytes32,t_bytes32)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:87"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "pyth",
            "type": "t_contract(IPyth)1502",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:89"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelay",
            "type": "t_uint64",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:91"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)4696",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:93"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)4706_storage)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:95"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)4706_storage)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:96"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:98"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)4294",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:99"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:100"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)1581,t_uint256))",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:102"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)1581,t_uint256))",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:103"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelayForResolving",
            "type": "t_uint64",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:105"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "marketHasCreatedAtAttribute",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:107"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:109"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "timeThresholdsForFees",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:111"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFees",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:112"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketsAMMUtils",
            "type": "t_contract(ISpeedMarketsAMMUtils)4587",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:114"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "marketHasFeeAttribute",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:116"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)4211",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:119"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxSkewImpact",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:121"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "skewSlippage",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:122"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "supportedNativeCollateral",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:124"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "bonusPerCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:127"
          }
        ],
        "types": {
          "t_struct(AddressSet)4706_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)470": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_contract(IPyth)1502": {
            "label": "contract IPyth"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(IStakingThales)4696": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_struct(AddressSet)4706_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(IMultiCollateralOnOffRamp)4294": {
            "label": "contract IMultiCollateralOnOffRamp"
          },
          "t_mapping(t_bytes32,t_mapping(t_enum(Direction)1581,t_uint256))": {
            "label": "mapping(bytes32 => mapping(enum SpeedMarket.Direction => uint256))"
          },
          "t_mapping(t_enum(Direction)1581,t_uint256)": {
            "label": "mapping(enum SpeedMarket.Direction => uint256)"
          },
          "t_enum(Direction)1581": {
            "label": "enum SpeedMarket.Direction",
            "members": [
              "Up",
              "Down"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(ISpeedMarketsAMMUtils)4587": {
            "label": "contract ISpeedMarketsAMMUtils"
          },
          "t_contract(IAddressManager)4211": {
            "label": "contract IAddressManager"
          }
        }
      }
    },
    "5e92a89afe90ae79828bb2d96c9a55c80a42c108b84bd23eb2640b13b48dc63f": {
      "address": "0xbaE098553b1c20EF3c2881c2Df79441782a09DcC",
      "txHash": "0xc7c155b20aa84f1a0d5977577da0e172257c11f8c78c4f063550b17e13b5915d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)119787_storage",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:38"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)119787_storage",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:39"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8368",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:67"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:69"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:71"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFee",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:72"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:74"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "supportedAsset",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:76"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minimalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:78"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:79"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:81"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:82"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:84"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:85"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "assetToPythId",
            "type": "t_mapping(t_bytes32,t_bytes32)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:87"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "pyth",
            "type": "t_contract(IPyth)12196",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:89"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelay",
            "type": "t_uint64",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:91"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)113430",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:93"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)119787_storage)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:95"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)119787_storage)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:96"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:98"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)111252",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:99"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:100"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)47696,t_uint256))",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:102"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)47696,t_uint256))",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:103"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelayForResolving",
            "type": "t_uint64",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:105"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "marketHasCreatedAtAttribute",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:107"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:109"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "timeThresholdsForFees",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:111"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFees",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:112"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketsAMMUtils",
            "type": "t_contract(ISpeedMarketsAMMUtils)112491",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:114"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "marketHasFeeAttribute",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:116"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)110404",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:119"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxSkewImpact",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:121"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "skewSlippage",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:122"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "supportedNativeCollateral",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:124"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "bonusPerCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:127"
          }
        ],
        "types": {
          "t_struct(AddressSet)119787_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)8368": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_contract(IPyth)12196": {
            "label": "contract IPyth"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(IStakingThales)113430": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_struct(AddressSet)119787_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(IMultiCollateralOnOffRamp)111252": {
            "label": "contract IMultiCollateralOnOffRamp"
          },
          "t_mapping(t_bytes32,t_mapping(t_enum(Direction)47696,t_uint256))": {
            "label": "mapping(bytes32 => mapping(enum SpeedMarket.Direction => uint256))"
          },
          "t_mapping(t_enum(Direction)47696,t_uint256)": {
            "label": "mapping(enum SpeedMarket.Direction => uint256)"
          },
          "t_enum(Direction)47696": {
            "label": "enum SpeedMarket.Direction",
            "members": [
              "Up",
              "Down"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(ISpeedMarketsAMMUtils)112491": {
            "label": "contract ISpeedMarketsAMMUtils"
          },
          "t_contract(IAddressManager)110404": {
            "label": "contract IAddressManager"
          }
        }
      }
    },
    "d16b01a564117133c22f05d3ca50376941f31b4b6915f6fa69532f561e43ebf6": {
      "address": "0xA46D47dc61D3842539b20FE679e54D3488E3F443",
      "txHash": "0xe5a63f40bb8d8294e8ad5c5afb4f267a5b353fa7e721ef0992f116e2b24a830b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)470",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:55"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)7003_storage",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:57"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)7003_storage",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:58"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)7003_storage)",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:60"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)7003_storage)",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:61"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minChainedMarkets",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:63"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxChainedMarkets",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:64"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minTimeFrame",
            "type": "t_uint64",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:66"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxTimeFrame",
            "type": "t_uint64",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:67"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:69"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:70"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxProfitPerIndividualMarket",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:72"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "payoutMultiplier",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:74"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxRisk",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:76"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "currentRisk",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:77"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "chainedSpeedMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:79"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:81"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)6401",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:84"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "payoutMultipliers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:88"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)470": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(AddressSet)7003_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(AddressSet)7003_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IAddressManager)6401": {
            "label": "contract IAddressManager"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    }
  }
}
