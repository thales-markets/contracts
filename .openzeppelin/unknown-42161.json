{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x57fAaDA9E5A3098a38151E4DE8426135B0fA4fd0",
    "txHash": "0xe49b854e0c60247e11f1f6833db14a4e1d30b24dc89c460d3f0aba3eccafda3f",
    "deployTransaction": {
      "hash": "0xe49b854e0c60247e11f1f6833db14a4e1d30b24dc89c460d3f0aba3eccafda3f",
      "type": 0,
      "accessList": null,
      "blockHash": "0xf7002fbcaf2a90c65c68b5b4bfd7e2e74338594278467986f3dbcf8de0ff6a7d",
      "blockNumber": 21293807,
      "transactionIndex": 0,
      "confirmations": 1,
      "from": "0x8314125C8B68aF2AfD0D151eb4A551E88128A2aE",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x0c849c76"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x433f0d"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 1,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0xc1b6db7653b2cc1759ef6cb731c5d0acb74c33245d43e1752b5e464d67fd327f",
      "s": "0x3b18293e217d9aafd4e90ade39c0f9d0a22b9b010cbc7b5c7cc2e2017ddebcc4",
      "v": 84358,
      "creates": "0x57fAaDA9E5A3098a38151E4DE8426135B0fA4fd0",
      "chainId": 42161
    }
  },
  "proxies": [
    {
      "address": "0xCd9c0E99396627C7746b4363B880939Ac2828d3E",
      "txHash": "0xd6e749573572bff36e4609784ad06c1dca3ee4a96a201311cac76f4896e07713",
      "kind": "transparent"
    },
    {
      "address": "0x563cCaBfBaCCb1a2e00d21704570cFc1AF21f47f",
      "txHash": "0xab5ecf3d09a9f6ffbcca17e4c9d7fbf5cae776638664d876167574837ef31625",
      "kind": "transparent"
    },
    {
      "address": "0x95d93c88c1b5190fA7FA4350844e0663e5a11fF0",
      "txHash": "0xdf6458000cbeb8cd39887884b77e49d62098b9ba659a26efadf083db611c1107",
      "kind": "transparent"
    },
    {
      "address": "0xE2881cAd27db4C27fB3814AD97ccA694B80c0fA0",
      "txHash": "0x4e92e74e6af87f66b7c3f694fc03edf2bf69e4a6631f2ea09e8f7160bb8b5109",
      "kind": "transparent"
    },
    {
      "address": "0x5ae7454827D83526261F3871C1029792644Ef1B1",
      "txHash": "0xb863c7d69dba7f57cc99e490f422295e181b758344923d58e3b5f72b9a1a1615",
      "kind": "transparent"
    },
    {
      "address": "0x5cf3b1882357BB66Cf3cd2c85b81AbBc85553962",
      "txHash": "0x718375ce6650a28ef63efbe9232d50900e2eebd60ae0e9e2f43fff37d608e766",
      "kind": "transparent"
    },
    {
      "address": "0x22d23b6ba1086D495fd950Ed503e89158318136A",
      "txHash": "0xc8ef00884024fcac984e4e10673996b7927b3686cd6229bc2dbacefc2eb9111b",
      "kind": "transparent"
    },
    {
      "address": "0x5E7d36342C0F3115A418d650CAE745fAC94551e3",
      "txHash": "0xfd44afd800a66bf198700f358b9789b4e7895865f91fc27497f47d35a0037ef4",
      "kind": "transparent"
    },
    {
      "address": "0x2b89275efB9509c33d9AD92A4586bdf8c4d21505",
      "txHash": "0xd15203b3e4dd133428c18b4616ee2d1e9099f23b33890067b081f2fbd8d7b867",
      "kind": "transparent"
    },
    {
      "address": "0x72ca0765d4bE0529377d656c9645600606214610",
      "txHash": "0x74557bacb11457faeed77c41f8c7409baeeb6252e395f40862fa5ecc43161d0a",
      "kind": "transparent"
    },
    {
      "address": "0x85b827d133FEDC36B844b20f4a198dA583B25BAA",
      "txHash": "0xc2dd6f2558c63f82e47738524e654d8f37072551c90c6a35e682f505fa559c14",
      "kind": "transparent"
    },
    {
      "address": "0xae56177e405929c95E5d4b04C0C87E428cB6432B",
      "txHash": "0x98ea2a003de8b1c54012392ab3011b64da27a1cecfdff76e4dc3c7f50416f8b8",
      "kind": "transparent"
    },
    {
      "address": "0x503e7F2C19384Ff68B445E21850fDC61f34434e6",
      "txHash": "0xcb02107992efa294e51e10623b619e93df8c6529c271309a74d440954e350d5e",
      "kind": "transparent"
    },
    {
      "address": "0x2Bb7D689780e7a34dD365359bD7333ab24903268",
      "txHash": "0xea6b026ec1de2a21d4be316337f6784d95ceefae5541a8a3c2a34d51fbdca7c0",
      "kind": "transparent"
    },
    {
      "address": "0xff9d1B34f369CAf91c6b69761e2A06f78ed3cd9d",
      "txHash": "0x71f11dd050414668794ed4b12a3ddb9024d4bfda0d27808c1a3e122c4a86ef0b",
      "kind": "transparent"
    },
    {
      "address": "0xb233aa4cBa1C6F24974a4A7F9E32D054E4a51342",
      "txHash": "0x86ce51c92655ef3b67dd34974a118e898fba02f64ca1be11eb4f682f875b8893",
      "kind": "transparent"
    },
    {
      "address": "0x0aBdaF0c4cFF91F96F817809d4735929fCA75B80",
      "txHash": "0x0287f8ea91b9d7f230a001567b36b9f2f4b3d72640182a840904e10fb6016fb3",
      "kind": "transparent"
    },
    {
      "address": "0xAf3335f531B4Dd876EABF611A7E371AD7e84aa7d",
      "txHash": "0x63c742a9af454e98c44b3d48314d89f99402b9aba61b355d9aade24ac8435975",
      "kind": "transparent"
    },
    {
      "address": "0xd7C5dF8F490e0eFe8c043F888a39Ea247D4D3e10",
      "txHash": "0x2bcd7ae829c9ae676101b98a1539a64406cbfe41efcf1d69470629c5f31fc57f",
      "kind": "transparent"
    },
    {
      "address": "0x036adEA6bc1fD0247c2796f8D201B28C0dC2a67d",
      "txHash": "0xedfae798c5a78742edc0684133c0102d023dfce0e007b4a645cac82949a1d5c0",
      "kind": "transparent"
    },
    {
      "address": "0x391a45F31c1837E3d837c23e05F42A098329D50d",
      "txHash": "0x87c06060fe71dfd6094224e44fbada9b8b606c1e30fd134baabcb897c2688a63",
      "kind": "transparent"
    },
    {
      "address": "0x160Ca569999601bca06109D42d561D85D6Bb4b57",
      "txHash": "0xc8d88b6198e38d93cf1b910a85451d02c4dd4b2b4eefc84591811de574c22007",
      "kind": "transparent"
    },
    {
      "address": "0x739d25922010A727B1fc842C483494d4D7a4C90e",
      "txHash": "0x9387625ab41fe7542b458284124520e75cac37a6e425d354401c29c7689e31b2",
      "kind": "transparent"
    },
    {
      "address": "0x8e9018b48456202aA9bb3E485192B8475822B874",
      "txHash": "0xefb24bac2110680377fbc4be223708413637c92886e38a93dd95abdfbad8c29f",
      "kind": "transparent"
    },
    {
      "address": "0x2FE737c9c14eA857eca2E9BD6C09be96532E5188",
      "txHash": "0xf9a69129b449fc6060bd0ef6d3226290ed830a2c9a598f0d0654ce4dc17217f6",
      "kind": "transparent"
    },
    {
      "address": "0xE26374c7aFe71a2a6AB4A61080772547C43B87E6",
      "txHash": "0x00f301243874c58f05ae714ada686a6219084386c1b3f13ced2a33d5ac167a3a",
      "kind": "transparent"
    },
    {
      "address": "0xAb9E5fc491c743AE0b45f7100fAf611Deb8FeC4A",
      "txHash": "0x5d12dc9f2c93191a7ee79a0f42311ecc9fb5609cd79502b1df722b41570362db",
      "kind": "transparent"
    },
    {
      "address": "0x652F74591683CdAbA32A21ac87f2D4Cb840C252A",
      "txHash": "0x1cd5668019275fa7cec569a93d4d7a4c4c863fc1ba4a68d17fb620ec485904a0",
      "kind": "transparent"
    },
    {
      "address": "0xfF7AEA98740fA1e2a9eB81680583e62aaFf1e3Ad",
      "txHash": "0xe0be68825c327fba23ba89f370a0b53b671c9a3d0ebb2e2943de3cb2ee27cf35",
      "kind": "transparent"
    },
    {
      "address": "0xA852a651377fbE23f3d3acF5919c3D092aD4b77d",
      "txHash": "0xc55f068842056ec80c2175daf440fff3207cb353ef24bac9201f1faacbb14e1a",
      "kind": "transparent"
    },
    {
      "address": "0x640c34D9595AD5351Da8c5C833Bbd1AfD20519ea",
      "txHash": "0xe25fcd41e65f29fb4e8e42bd844b9bbc56e645e8cfaef92eabf46b1d33750fab",
      "kind": "transparent"
    },
    {
      "address": "0x0A29CddbdAAf56342507574820864dAc967D2683",
      "txHash": "0x539851ea0ba87188a0ba82af892bbb0104f042904da18520bff662b4c5a8c26d",
      "kind": "transparent"
    },
    {
      "address": "0x008A4e30A8b41781F5cb017b197aA9Aa4Cd53b46",
      "txHash": "0xc63921159ddb754049455a5d25334c66a6104ee129d25759b27f2f872047f72b",
      "kind": "transparent"
    },
    {
      "address": "0x655db6C7848655f832ff105fd12AA14FaE8FcEAF",
      "txHash": "0x4a6c66990d5c1125bc00e658b52bba6513bdd6420e197f90a72d1e00cc9322d9",
      "kind": "transparent"
    },
    {
      "address": "0xbd39d496EEBA3842521e8886a04312795c2bC799",
      "txHash": "0xbde1dd2a5355b22e9c8fb629f409c74e1e2bc8c855fb0bfc6632256af6257f3f",
      "kind": "transparent"
    },
    {
      "address": "0x4830853AC480A7ee1a86E1B4Fa909f0665858f01",
      "txHash": "0x266e6ee4aadd0b5760e04dc141b06e45c9cd097f7c0cd427049586f01ca13bea",
      "kind": "transparent"
    },
    {
      "address": "0x230893C24804B89D0ec3FFfFa243CE32C6b6541B",
      "txHash": "0xf2512c9cefd8b7281478711a2d86c3cf89fc944c02cc639e3811492779e9e052",
      "kind": "transparent"
    },
    {
      "address": "0x31c2947c86412A5e33794105aA034DD9312eb711",
      "txHash": "0x34fe84795e1c7451a2627faa1518d5e4cd0685829d9c55059205216cfb5f2fc2",
      "kind": "transparent"
    },
    {
      "address": "0x4A096E1d719A2087F5CAfB0839aa25B6dd6dB324",
      "txHash": "0x80c8b5e13a57037e1c25bb09457fb7d0fd6d691f12b12b07458ac3de1fe3a097",
      "kind": "transparent"
    },
    {
      "address": "0x0D72F9DB9efD3cbd91Ec4C296A01e3Cd5155Cc31",
      "txHash": "0x47568ec25f2b147360de94dd77e7fd17b741507fba48982bd3e30e4f4a94fe83",
      "kind": "transparent"
    },
    {
      "address": "0x1AafC0AD5bAe94EEc8765Ee8f4F58b03BFbfB5E8",
      "txHash": "0x5cdb1ad20af31b1c4f3188ff985a3ea340f560f1d3c73e5471c031513766fcbf",
      "kind": "transparent"
    },
    {
      "address": "0xc7909cdc3B54bA28c2bAcc096ac6D7e83d9fd00c",
      "txHash": "0xe9e1fc604d3b19392e9613b397bfba813b97e053b03803ff1c8f4a3ae11972bc",
      "kind": "transparent"
    },
    {
      "address": "0x3f411C3837c271D576272a324bD7763930545e21",
      "txHash": "0x8f1fd3e8701ba6b9d2044fed96a26cc7297b7a75c22228985d55095e8122e242",
      "kind": "transparent"
    },
    {
      "address": "0xea4c2343Fd3C239c23Dd37dd3ee51AEc84544735",
      "txHash": "0x7553da23dbadc371226e187bf7493dcda8fd19ecf291ff45d8e353bed9b58235",
      "kind": "transparent"
    },
    {
      "address": "0x6535F4cCC70E0CCb192a8A224d5eBA420DDF9e3f",
      "txHash": "0x10f3404261e15672123b4daa1858c8ac169309117634c3727b8ec663a4d72a6c",
      "kind": "transparent"
    },
    {
      "address": "0x37ba6d6D4B18F294127D5381a018455006D97252",
      "txHash": "0xf5503d7d2c417546690c1ddf76b2176da2aee83a3a36a0e6dc3bbc1b947c4d02",
      "kind": "transparent"
    },
    {
      "address": "0xB5F1924136d7A72C3E5E746Ba2E23A3bfd499097",
      "txHash": "0x435204e2668bfba8c9494f997335cbbe6b3cd4910ea75cc44d31db3f332fbd60",
      "kind": "transparent"
    },
    {
      "address": "0xE644eBDe62A77689eE8c8700053917b4718ace99",
      "txHash": "0xd3c56bae52f18b1976272facae9414dab45cb154fa243457ce09027adaa389bf",
      "kind": "transparent"
    },
    {
      "address": "0x6848f7C1B5aa2da86F6529bed9d641A67663f0bE",
      "txHash": "0xf8896202c35bb29b5727f5febc8281e658844ec04581b893ef5ef9395af4db65",
      "kind": "transparent"
    }
  ],
  "impls": {
    "e992ac19559c607e9066e89d8182d101646472832827346045da2b97184ef6b5": {
      "address": "0x6B33b99E3D3213DF963375E6d94aBa968351f803",
      "txHash": "0xd65fd3b2f1224aba6341c656133edfd74ef99b26fff222402ab74967e0c900bd",
      "layout": {
        "storage": [
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:10"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:63"
          },
          {
            "contract": "SafeBox",
            "label": "sUSD",
            "type": "t_contract(IERC20)19271",
            "src": "contracts\\AMM\\SafeBox.sol:11"
          }
        ],
        "types": {
          "t_contract(IERC20)19271": {
            "label": "contract IERC20"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "24b1c72502fdd5bb8e5793c1ac671b4b566a14dbb22fe73f740dc4b3a353d753": {
      "address": "0x1c6BD32F85cB64962958649e8304e7e7020C0B3c",
      "txHash": "0xc7699efb00420d56e8aa692e54d0603956b5bc4ac69d60e94d2d563a25545120",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "PriceFeed",
            "label": "aggregators",
            "type": "t_mapping(t_bytes32,t_contract(AggregatorV2V3Interface)141)",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:23"
          },
          {
            "contract": "PriceFeed",
            "label": "currencyKeyDecimals",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:25"
          },
          {
            "contract": "PriceFeed",
            "label": "aggregatorKeys",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:27"
          },
          {
            "contract": "PriceFeed",
            "label": "currencyKeys",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:30"
          },
          {
            "contract": "PriceFeed",
            "label": "pools",
            "type": "t_mapping(t_bytes32,t_contract(IUniswapV3Pool)9622)",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:31"
          },
          {
            "contract": "PriceFeed",
            "label": "twapInterval",
            "type": "t_int56",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:33"
          },
          {
            "contract": "PriceFeed",
            "label": "_ETH",
            "type": "t_address",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:40"
          },
          {
            "contract": "PriceFeed",
            "label": "_wETH",
            "type": "t_address",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:41"
          },
          {
            "contract": "PriceFeed",
            "label": "useLastTickForTWAP",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:43"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_contract(AggregatorV2V3Interface)141)": {
            "label": "mapping(bytes32 => contract AggregatorV2V3Interface)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(AggregatorV2V3Interface)141": {
            "label": "contract AggregatorV2V3Interface"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_contract(IUniswapV3Pool)9622)": {
            "label": "mapping(bytes32 => contract IUniswapV3Pool)"
          },
          "t_contract(IUniswapV3Pool)9622": {
            "label": "contract IUniswapV3Pool"
          },
          "t_int56": {
            "label": "int56"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1f6237f3cb3c177485233f1a07f1ecf7695a7f5dea4aadb0118a1f3a70d35431": {
      "address": "0x3EaA3c6C83856cE307ca651f1fB5A6d981894721",
      "txHash": "0x18ade18e3629098392c7c9ea8fe302c4dcfe833fc7d8955c147022c34e54e4e0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)70992",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:38"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)70804",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:39"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)71079",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)69461",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:62"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)75985_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)45123",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:70"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:71"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerGameCombination",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:74"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:78"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:80"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)70992": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)70804": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)71079": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)69461": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)75985_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)45123": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => uint256))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          }
        }
      }
    },
    "07a164e81e28b5c7478cc9faa9e4c80aa2e7505bf0028b2f75c797992cd4bc54": {
      "address": "0xBE086E0A2c588Ad64C8530048cE4356190D6a6F3",
      "txHash": "0x14d74d719c50cf7de94e41514784f23d6950f9569fb4004ddaf3997635eb70ce",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "durations",
            "type": "t_struct(Durations)2872_storage",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:45"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "capitalRequirement",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:46"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketCreationEnabled",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:48"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "customMarketCreationEnabled",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:49"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "onlyWhitelistedAddressesCanCreateMarkets",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:51"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:52"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:54"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)4672_storage",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:56"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)4672_storage",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:57"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "_migratingManager",
            "type": "t_contract(PositionalMarketManager)4217",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:59"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)4543",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:61"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "sUSD",
            "type": "t_contract(IERC20)157",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:62"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "positionalMarketFactory",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:64"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:66"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "timeframeBuffer",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:68"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "priceBuffer",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:69"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketsPerOracleKey",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_array(t_address)dyn_storage))",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:71"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketsStrikePrice",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:72"
          }
        ],
        "types": {
          "t_struct(Durations)2872_storage": {
            "label": "struct PositionalMarketManager.Durations",
            "members": [
              {
                "label": "expiryDuration",
                "type": "t_uint256"
              },
              {
                "label": "maxTimeToMaturity",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(AddressSet)4672_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(PositionalMarketManager)4217": {
            "label": "contract PositionalMarketManager"
          },
          "t_contract(IPriceFeed)4543": {
            "label": "contract IPriceFeed"
          },
          "t_contract(IERC20)157": {
            "label": "contract IERC20"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_array(t_address)dyn_storage))": {
            "label": "mapping(bytes32 => mapping(uint256 => address[]))"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          }
        }
      }
    },
    "21aba925da87e570c420640add6bc5eb32ecd94bda1c3a6902d139d2f4718ae2": {
      "address": "0xE0B31640B07E4BCFAFc190d7DDE951BA3286Dd63",
      "txHash": "0x1cafb2492f6fe124223b260f3ff1a6572627101c04d862fd935b9d9f85a87c02",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "PositionalMarketFactory",
            "label": "positionalMarketManager",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketFactory.sol:20"
          },
          {
            "contract": "PositionalMarketFactory",
            "label": "positionalMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketFactory.sol:22"
          },
          {
            "contract": "PositionalMarketFactory",
            "label": "positionMastercopy",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketFactory.sol:23"
          },
          {
            "contract": "PositionalMarketFactory",
            "label": "limitOrderProvider",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketFactory.sol:25"
          },
          {
            "contract": "PositionalMarketFactory",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketFactory.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e1ab04bfd69f0d0e0429d8ff1e2a28fc4f2b748a5ea6b250d7452a2fc79b2e93": {
      "address": "0xd0418B847255b9e55E1f1d5a52241AdA23e5197C",
      "txHash": "0xa09bb7e1c084932ca44548a36bac37985d1bc63a632bc27e1c6244d3a47f0f95",
      "layout": {
        "storage": [
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:63"
          },
          {
            "contract": "ThalesAMM",
            "label": "deciMath",
            "type": "t_contract(DeciMath)6221",
            "src": "contracts\\AMM\\ThalesAMM.sol:29"
          },
          {
            "contract": "ThalesAMM",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)16656",
            "src": "contracts\\AMM\\ThalesAMM.sol:34"
          },
          {
            "contract": "ThalesAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20)19271",
            "src": "contracts\\AMM\\ThalesAMM.sol:35"
          },
          {
            "contract": "ThalesAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:36"
          },
          {
            "contract": "ThalesAMM",
            "label": "capPerMarket",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:38"
          },
          {
            "contract": "ThalesAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:39"
          },
          {
            "contract": "ThalesAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:40"
          },
          {
            "contract": "ThalesAMM",
            "label": "impliedVolatilityPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:42"
          },
          {
            "contract": "ThalesAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:44"
          },
          {
            "contract": "ThalesAMM",
            "label": "spentOnMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:51"
          },
          {
            "contract": "ThalesAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:53"
          },
          {
            "contract": "ThalesAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:54"
          },
          {
            "contract": "ThalesAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)16788",
            "src": "contracts\\AMM\\ThalesAMM.sol:56"
          },
          {
            "contract": "ThalesAMM",
            "label": "minSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:58"
          },
          {
            "contract": "ThalesAMM",
            "label": "maxSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:59"
          },
          {
            "contract": "ThalesAMM",
            "label": "_capPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:61"
          },
          {
            "contract": "ThalesAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\ThalesAMM.sol:63"
          },
          {
            "contract": "ThalesAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:65"
          },
          {
            "contract": "ThalesAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:66"
          },
          {
            "contract": "ThalesAMM",
            "label": "previousManager",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:68"
          },
          {
            "contract": "ThalesAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)16248",
            "src": "contracts\\AMM\\ThalesAMM.sol:70"
          },
          {
            "contract": "ThalesAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:72"
          },
          {
            "contract": "ThalesAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:73"
          },
          {
            "contract": "ThalesAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:74"
          },
          {
            "contract": "ThalesAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\AMM\\ThalesAMM.sol:78"
          }
        ],
        "types": {
          "t_contract(DeciMath)6221": {
            "label": "contract DeciMath"
          },
          "t_contract(IPriceFeed)16656": {
            "label": "contract IPriceFeed"
          },
          "t_contract(IERC20)19271": {
            "label": "contract IERC20"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)16788": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ICurveSUSD)16248": {
            "label": "contract ICurveSUSD"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "14b1c630600e016ba233542aa96ec3aefe541efc995091e8125274273c86b8ab": {
      "address": "0x34F42B4cfc9e614E7e2a89583733F2d268B0Abe4",
      "txHash": "0x9a4b8397ccfc16fb4f7f6d071cc633cf97f99dc47c5fedd12819a5fa43bd9a6f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "thalesAmm",
            "type": "t_contract(IThalesAMM)59108",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:39"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "rangedAmmFee",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:41"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "createdRangedMarkets",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:43"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)63581_storage",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:44"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "rangedMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:46"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "rangedPositionMastercopy",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:47"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6720",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:49"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "spentOnMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:51"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "capPerMarket",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:54"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "minSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:56"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "maxSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:57"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:59"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:60"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "minimalDifBetweenStrikes",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:62"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)58989",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:64"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "maximalDifBetweenStrikes",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:66"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:68"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:69"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)57457",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:71"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:73"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:74"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:75"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:77"
          }
        ],
        "types": {
          "t_contract(IThalesAMM)59108": {
            "label": "contract IThalesAMM"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_struct(AddressSet)63581_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IERC20Upgradeable)6720": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)58989": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)57457": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5157709a4a48f818994cc9ff2ffbf0b4afe1afad52d4c220a1b0bbd2b93d24d5": {
      "address": "0xda5Bd4aBAFbE249bdC5684eAD594B0ac379687fd",
      "txHash": "0x0eba251f4a63444035637d616204bba39269e03c987da164fc2b8d6797ee2c5f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "Referrals",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\Referrals.sol:21"
          },
          {
            "contract": "Referrals",
            "label": "referrals",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts\\AMM\\Referrals.sol:22"
          },
          {
            "contract": "Referrals",
            "label": "referralStarted",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\Referrals.sol:23"
          },
          {
            "contract": "Referrals",
            "label": "tradedBefore",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\Referrals.sol:25"
          },
          {
            "contract": "Referrals",
            "label": "sportReferrals",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts\\AMM\\Referrals.sol:27"
          },
          {
            "contract": "Referrals",
            "label": "sportReferralStarted",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\Referrals.sol:28"
          },
          {
            "contract": "Referrals",
            "label": "sportTradedBefore",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\Referrals.sol:29"
          },
          {
            "contract": "Referrals",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts\\AMM\\Referrals.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "7f996ab9acfc62a767b65e6a9009fc2be4190d8d9a13b8606b870b6b2b9634b5": {
      "address": "0x8ba51d5b8C2693ecC4c355dC778b6a0Ae775A776",
      "txHash": "0xf3ffb685b893b1c432f03ba55e6dffcd36b0b9fc5a1aee43c2f890bfd305d408",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "thalesAmm",
            "type": "t_contract(IThalesAMM)65178",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:39"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "rangedAmmFee",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:41"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "createdRangedMarkets",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:43"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)69922_storage",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:44"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "rangedMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:46"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "rangedPositionMastercopy",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:47"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6720",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:49"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "spentOnMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:51"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "capPerMarket",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:54"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "minSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:56"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "maxSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:57"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:59"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:60"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "minimalDifBetweenStrikes",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:62"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)65059",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:64"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "maximalDifBetweenStrikes",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:66"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:68"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:69"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)63517",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:71"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:73"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:74"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:75"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:77"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:78"
          }
        ],
        "types": {
          "t_contract(IThalesAMM)65178": {
            "label": "contract IThalesAMM"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_struct(AddressSet)69922_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IERC20Upgradeable)6720": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)65059": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)63517": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b8b7a41398ab8c59856520aebbf066e1cd9efd35abc2396c17a0f0b68523fda4": {
      "address": "0x3dfE6FAb38D20d189cD7d28b04f8714c289De2AE",
      "txHash": "0x85e5d5c7b8703c64688e2305f9b0b6f867d93d48db6df04330966cc0de5c7d7a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ThalesAMM",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)64591",
            "src": "contracts\\AMM\\ThalesAMM.sol:37"
          },
          {
            "contract": "ThalesAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6720",
            "src": "contracts\\AMM\\ThalesAMM.sol:38"
          },
          {
            "contract": "ThalesAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:39"
          },
          {
            "contract": "ThalesAMM",
            "label": "capPerMarket",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:41"
          },
          {
            "contract": "ThalesAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:42"
          },
          {
            "contract": "ThalesAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:43"
          },
          {
            "contract": "ThalesAMM",
            "label": "impliedVolatilityPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:45"
          },
          {
            "contract": "ThalesAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:47"
          },
          {
            "contract": "ThalesAMM",
            "label": "spentOnMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:54"
          },
          {
            "contract": "ThalesAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:56"
          },
          {
            "contract": "ThalesAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:57"
          },
          {
            "contract": "ThalesAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)65059",
            "src": "contracts\\AMM\\ThalesAMM.sol:59"
          },
          {
            "contract": "ThalesAMM",
            "label": "minSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:61"
          },
          {
            "contract": "ThalesAMM",
            "label": "maxSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:62"
          },
          {
            "contract": "ThalesAMM",
            "label": "_capPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:64"
          },
          {
            "contract": "ThalesAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\ThalesAMM.sol:66"
          },
          {
            "contract": "ThalesAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:68"
          },
          {
            "contract": "ThalesAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:69"
          },
          {
            "contract": "ThalesAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)63517",
            "src": "contracts\\AMM\\ThalesAMM.sol:71"
          },
          {
            "contract": "ThalesAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:73"
          },
          {
            "contract": "ThalesAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:74"
          },
          {
            "contract": "ThalesAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:75"
          },
          {
            "contract": "ThalesAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\AMM\\ThalesAMM.sol:77"
          },
          {
            "contract": "ThalesAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:79"
          }
        ],
        "types": {
          "t_contract(IPriceFeed)64591": {
            "label": "contract IPriceFeed"
          },
          "t_contract(IERC20Upgradeable)6720": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)65059": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ICurveSUSD)63517": {
            "label": "contract ICurveSUSD"
          }
        }
      }
    },
    "1ba7beea7e9b767755ef56d0acc8b83be23f8a69fb430e4b97830d0b3f3c7d44": {
      "address": "0x5f5b9455917d18b175Bc482effc0588165F8C71c",
      "txHash": "0x68e977c569c865ea29306b43af4dbeec4843d3a08f8ae28de26d88d06bd34a22",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)68632",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:37"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6720",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:38"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:39"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "capPerMarket",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:41"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:42"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:43"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "impliedVolatilityPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:45"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:47"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "spentOnMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:54"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:56"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:57"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)69114",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:59"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "minSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:61"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "maxSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:62"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "_capPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:64"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:66"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:68"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:69"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)67558",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:71"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:73"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:74"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:75"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:77"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:79"
          }
        ],
        "types": {
          "t_contract(IPriceFeed)68632": {
            "label": "contract IPriceFeed"
          },
          "t_contract(IERC20Upgradeable)6720": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)69114": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ICurveSUSD)67558": {
            "label": "contract ICurveSUSD"
          }
        }
      }
    },
    "0f3fe92f5961918707ec817a797cc8b291f6f64450041886ffa53266366eb110": {
      "address": "0x42B6e9b5Bb96a02E02e651d3104Fc3546E1313F2",
      "txHash": "0x0e8cd383158d04bdf2dae1d32520faffbc8902eeaf4371cdf43c55c578946e45",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)67134",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:50"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6720",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:51"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:52"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "capPerMarket",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:54"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:55"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:56"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "impliedVolatilityPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:58"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:60"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "spentOnMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:67"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:69"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:70"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)67616",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:72"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "minSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:74"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "maxSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:75"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "_capPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:77"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:79"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:81"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:82"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)66060",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:84"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:86"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:87"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:88"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:90"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:92"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "ammUtils",
            "type": "t_contract(IThalesAMMUtils)67762",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:94"
          }
        ],
        "types": {
          "t_contract(IPriceFeed)67134": {
            "label": "contract IPriceFeed"
          },
          "t_contract(IERC20Upgradeable)6720": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)67616": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ICurveSUSD)66060": {
            "label": "contract ICurveSUSD"
          },
          "t_contract(IThalesAMMUtils)67762": {
            "label": "contract IThalesAMMUtils"
          }
        }
      }
    },
    "bef0595820f13e5f0cc31164ea999d60eadd9d2d9d62e9284d93980785acac8d": {
      "address": "0xc6fA63709CD62121F0dA17eb68D21Af88756ceA3",
      "txHash": "0xbef3bbb6d610cf4317b1480959f78c5d536e3bfdd7a99bc1f8add53ae3cfaead",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ThalesAMM",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)5290",
            "src": "contracts\\AMM\\ThalesAMM.sol:50"
          },
          {
            "contract": "ThalesAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)390",
            "src": "contracts\\AMM\\ThalesAMM.sol:51"
          },
          {
            "contract": "ThalesAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:52"
          },
          {
            "contract": "ThalesAMM",
            "label": "capPerMarket",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:54"
          },
          {
            "contract": "ThalesAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:55"
          },
          {
            "contract": "ThalesAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:56"
          },
          {
            "contract": "ThalesAMM",
            "label": "impliedVolatilityPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:58"
          },
          {
            "contract": "ThalesAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:60"
          },
          {
            "contract": "ThalesAMM",
            "label": "spentOnMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:67"
          },
          {
            "contract": "ThalesAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:69"
          },
          {
            "contract": "ThalesAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:70"
          },
          {
            "contract": "ThalesAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)5384",
            "src": "contracts\\AMM\\ThalesAMM.sol:72"
          },
          {
            "contract": "ThalesAMM",
            "label": "minSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:74"
          },
          {
            "contract": "ThalesAMM",
            "label": "maxSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:75"
          },
          {
            "contract": "ThalesAMM",
            "label": "_capPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:77"
          },
          {
            "contract": "ThalesAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\ThalesAMM.sol:79"
          },
          {
            "contract": "ThalesAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:81"
          },
          {
            "contract": "ThalesAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:82"
          },
          {
            "contract": "ThalesAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)4968",
            "src": "contracts\\AMM\\ThalesAMM.sol:84"
          },
          {
            "contract": "ThalesAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:86"
          },
          {
            "contract": "ThalesAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:87"
          },
          {
            "contract": "ThalesAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:88"
          },
          {
            "contract": "ThalesAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\AMM\\ThalesAMM.sol:90"
          },
          {
            "contract": "ThalesAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:92"
          },
          {
            "contract": "ThalesAMM",
            "label": "ammUtils",
            "type": "t_contract(IThalesAMMUtils)5400",
            "src": "contracts\\AMM\\ThalesAMM.sol:94"
          }
        ],
        "types": {
          "t_contract(IPriceFeed)5290": {
            "label": "contract IPriceFeed"
          },
          "t_contract(IERC20Upgradeable)390": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)5384": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ICurveSUSD)4968": {
            "label": "contract ICurveSUSD"
          },
          "t_contract(IThalesAMMUtils)5400": {
            "label": "contract IThalesAMMUtils"
          }
        }
      }
    },
    "45ed91491ba75526957d69b47ed359535ef6c63397a0ef19454ebd79c486ef3d": {
      "address": "0xC0EeFDCF5A815ed7ac1ef1b8Ae8302AC502f3005",
      "txHash": "0x602ac8c2fc4e34c8cc6e1513317f0ebaa7f7a9726f1d2e7dd0b2f9769279653d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "thalesAmm",
            "type": "t_contract(IThalesAMM)6777",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:39"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "rangedAmmFee",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:41"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "createdRangedMarkets",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:43"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)6787_storage",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:44"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "rangedMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:46"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "rangedPositionMastercopy",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:47"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)1160",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:49"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "spentOnMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:51"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "capPerMarket",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:54"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "minSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:56"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "maxSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:57"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:59"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:60"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "minimalDifBetweenStrikes",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:62"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)6647",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:64"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "maximalDifBetweenStrikes",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:66"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:68"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:69"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)6217",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:71"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:73"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:74"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:75"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:77"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:78"
          }
        ],
        "types": {
          "t_contract(IThalesAMM)6777": {
            "label": "contract IThalesAMM"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_struct(AddressSet)6787_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IERC20Upgradeable)1160": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)6647": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)6217": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c42b924bff92b02bcb745c3ba4183eb7a2cd7c463389554a5398849587cf2691": {
      "address": "0xAf6B2b5Ff3D63A68CEf851Ab0871045D17743781",
      "txHash": "0x9de2f3f9e7837a5de5f8d5240b6df4284e18053c9849338833be77e820e353ec",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)5325",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:50"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)390",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:51"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:52"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "capPerMarket",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:54"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:55"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:56"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "impliedVolatilityPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:58"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:60"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "spentOnMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:67"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:69"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:70"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)5419",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:72"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "minSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:74"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "maxSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:75"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "_capPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:77"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:79"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:81"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:82"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)5003",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:84"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:86"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:87"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:88"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:90"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:92"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "ammUtils",
            "type": "t_contract(IThalesAMMUtils)5435",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:94"
          }
        ],
        "types": {
          "t_contract(IPriceFeed)5325": {
            "label": "contract IPriceFeed"
          },
          "t_contract(IERC20Upgradeable)390": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)5419": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ICurveSUSD)5003": {
            "label": "contract ICurveSUSD"
          },
          "t_contract(IThalesAMMUtils)5435": {
            "label": "contract IThalesAMMUtils"
          }
        }
      }
    },
    "9d88f3edb1467841118efb9d953cf6fce54458441234ec58de93a1cf5f4fe2c8": {
      "address": "0x5b7B5Bb93622A6589A3E693FA7c23690d8F7d298",
      "txHash": "0x89c6b4a63d25b4649e20e7102c66cb9723331a366caaa90021b0a81ae46dd694",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)80201",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:50"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6720",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:51"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:52"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "capPerMarket",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:54"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:55"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:56"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "impliedVolatilityPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:58"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:60"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "spentOnMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:67"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:69"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:70"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)80760",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:72"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "minSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:74"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "maxSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:75"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "_capPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:77"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:79"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:81"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:82"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)78991",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:84"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:86"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:87"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:88"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:90"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:92"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "ammUtils",
            "type": "t_contract(IThalesAMMUtils)80906",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:94"
          }
        ],
        "types": {
          "t_contract(IPriceFeed)80201": {
            "label": "contract IPriceFeed"
          },
          "t_contract(IERC20Upgradeable)6720": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)80760": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ICurveSUSD)78991": {
            "label": "contract ICurveSUSD"
          },
          "t_contract(IThalesAMMUtils)80906": {
            "label": "contract IThalesAMMUtils"
          }
        }
      }
    },
    "01a13ca8948455ed208e147de88c272e3aa662ff5257dfbc5ea6c4b73217df1f": {
      "address": "0x68d0A97cC7718a93c4403C07f6CB3C7ABc239792",
      "txHash": "0x482282c9b1d961070041c70aa4892cc1b84b93175b8c579cf7e07dc16dc516a4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)52755",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:50"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6137",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:51"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:52"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "capPerMarket",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:54"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:55"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:56"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "impliedVolatilityPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:58"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:60"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "spentOnMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:67"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:69"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:70"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)53324",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:72"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "minSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:74"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "maxSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:75"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "_capPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:77"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:79"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:81"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:82"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)52182",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:84"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:86"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:87"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:88"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:90"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:92"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "ammUtils",
            "type": "t_contract(IThalesAMMUtils)53470",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:94"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:99"
          },
          {
            "contract": "ThalesAMMNew",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMMNew.sol:100"
          }
        ],
        "types": {
          "t_contract(IPriceFeed)52755": {
            "label": "contract IPriceFeed"
          },
          "t_contract(IERC20Upgradeable)6137": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)53324": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ICurveSUSD)52182": {
            "label": "contract ICurveSUSD"
          },
          "t_contract(IThalesAMMUtils)53470": {
            "label": "contract IThalesAMMUtils"
          }
        }
      }
    },
    "cc25395f230a4a6d1003c98ff9dabdb0808e1e913259bdcdd319d9c7f91294d6": {
      "address": "0xece0eEFFF3003d23e366C917104C6CF5Cdb404F1",
      "txHash": "0x5725b3430758ae4e04ae475f4a99b736adb349b55ebaef6c3bc4b72a94b61127",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "expiryDuration",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:31"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "marketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:33"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "customMarketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:34"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:36"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)60116_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:38"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)60116_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:39"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_migratingManager",
            "type": "t_contract(SportPositionalMarketManager)46775",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:41"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sUSD",
            "type": "t_contract(IERC20)3409",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:43"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:45"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sportPositionalMarketFactory",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:46"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:47"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:48"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:49"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "cancelTimeout",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:50"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedCancelAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:51"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "oddsObtainer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:52"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "isDoubleChance",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:54"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "isDoubleChanceSupported",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:55"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "doubleChanceMarketsByParent",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:56"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)60116_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(SportPositionalMarketManager)46775": {
            "label": "contract SportPositionalMarketManager"
          },
          "t_contract(IERC20)3409": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          }
        }
      }
    },
    "22e4032c6c30c76c8882bc26300d66d6ac0678be5e60d4170453fa24999e30c2": {
      "address": "0x1Ac7eBfa70AB18bf0a8C36e51ecD6C969E88B1d1",
      "txHash": "0xd6ceb1f995fe390d34bf38661e26e65c01d5a8fc94380c36313236338fd49f76",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "SportPositionalMarketFactory",
            "label": "positionalMarketManager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketFactory.sol:16"
          },
          {
            "contract": "SportPositionalMarketFactory",
            "label": "positionalMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketFactory.sol:18"
          },
          {
            "contract": "SportPositionalMarketFactory",
            "label": "positionMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketFactory.sol:19"
          },
          {
            "contract": "SportPositionalMarketFactory",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketFactory.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e62b6db06ef804d4b84d9b3d360db1f5cc9ac545cf4227ae44777f5c7730a21e": {
      "address": "0x73043369F8EFdd6E0fcB09c1201eE787583a7425",
      "txHash": "0xc3d0f6a8a9aeb9c7e0afcd083177fd9f7188b800987312e0c40517a6a1f71e36",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)468",
            "src": "contracts/SportMarkets/SportsAMM.sol:37"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:40"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:44"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:47"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:50"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:54"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:63"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:66"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:69"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:72"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)6367",
            "src": "contracts/SportMarkets/SportsAMM.sol:75"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:78"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:81"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)5408",
            "src": "contracts/SportMarkets/SportsAMM.sol:84"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:87"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:90"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:93"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportsAMM.sol:96"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:99"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:102"
          },
          {
            "contract": "SportsAMM",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:105"
          },
          {
            "contract": "SportsAMM",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:108"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:111"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:114"
          },
          {
            "contract": "SportsAMM",
            "label": "sportAmmUtils",
            "type": "t_contract(SportsAMMUtils)5381",
            "src": "contracts/SportMarkets/SportsAMM.sol:116"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:119"
          },
          {
            "contract": "SportsAMM",
            "label": "thresholdForOddsUpdate",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:123"
          },
          {
            "contract": "SportsAMM",
            "label": "wrapper",
            "type": "t_contract(ITherundownConsumerWrapper)6621",
            "src": "contracts/SportMarkets/SportsAMM.sol:126"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:129"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:132"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSportAndChild",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/SportMarkets/SportsAMM.sol:135"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)468": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)6367": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)5408": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(SportsAMMUtils)5381": {
            "label": "contract SportsAMMUtils"
          },
          "t_contract(ITherundownConsumerWrapper)6621": {
            "label": "contract ITherundownConsumerWrapper"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fcd10ae27cdc4df8eaa26100bc21cab3c9de40af27d0c8a382a6061ea5d4e1cc": {
      "address": "0xD2b907a94E33BFe0371B8dcbFAcf1a319b13d609",
      "txHash": "0x9d6a19a8dfc87ada85c270745609da484199a0a4ee4ab68215eda2bea0458f00",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:18"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "77157e34f606d63a6683f56870f807e2ef8595c15e08ed4979fcf00e2c39efff": {
      "address": "0x7465c5d60d3d095443CF9991Da03304A30D42Eae",
      "txHash": "0xc9b9c38c230c105c4f28e73925e89634bc4808e4dda0691c3406f6a3c55d96d9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)57714",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:38"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)57547",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:39"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)7480",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)57791",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)56313",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:62"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)62587_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)34608",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:70"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:71"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerGameCombination",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:74"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)57714": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)57547": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)7480": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)57791": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)56313": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)62587_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)34608": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => uint256))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          }
        }
      }
    },
    "8c9d5dac966871225db9834a1548f69d59dec847da4359c85ba0bce19ffb1d15": {
      "address": "0xe41cD3A25CBdeDA0BC46D48C380393D953bD2034",
      "txHash": "0x6a2823e38dcd40d9db2b82a37323eb76b2459c98dfbfb854b704b7f37f9b73dc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ParlayMarketData",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)59050_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:16"
          },
          {
            "contract": "ParlayMarketData",
            "label": "_parlaysInGamePosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)59050_storage))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:22"
          },
          {
            "contract": "ParlayMarketData",
            "label": "gameAddressPositionParlay",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:24"
          },
          {
            "contract": "ParlayMarketData",
            "label": "numOfParlaysInGamePosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:25"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayDetails",
            "type": "t_mapping(t_address,t_struct(ParlayDetails)28546_storage)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:27"
          },
          {
            "contract": "ParlayMarketData",
            "label": "userParlays",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:28"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayOwner",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:29"
          },
          {
            "contract": "ParlayMarketData",
            "label": "userNumOfParlays",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:30"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayMarketsAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:31"
          }
        ],
        "types": {
          "t_struct(AddressSet)59050_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)59050_storage))": {
            "label": "mapping(address => mapping(uint256 => struct AddressSetLib.AddressSet))"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)59050_storage)": {
            "label": "mapping(uint256 => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))": {
            "label": "mapping(address => mapping(uint256 => mapping(uint256 => address)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint256 => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(ParlayDetails)28546_storage)": {
            "label": "mapping(address => struct ParlayMarketData.ParlayDetails)"
          },
          "t_struct(ParlayDetails)28546_storage": {
            "label": "struct ParlayMarketData.ParlayDetails",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "sUSDPaid",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ba5002e458e1e0b64eca753b1666d1ca2f249a35b81d1e13937126e90801a6f0": {
      "address": "0xf854caE2ED8ab612262b07472173A432fd59028B",
      "txHash": "0x05508dcf2310931e70ffc784ebcd273a7d6a1770163801c6e2aed32608ed4633",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesQueue",
            "label": "gamesCreateQueue",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:16"
          },
          {
            "contract": "GamesQueue",
            "label": "existingGamesInCreatedQueue",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:17"
          },
          {
            "contract": "GamesQueue",
            "label": "firstCreated",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:18"
          },
          {
            "contract": "GamesQueue",
            "label": "lastCreated",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:19"
          },
          {
            "contract": "GamesQueue",
            "label": "gameStartPerGameId",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:20"
          },
          {
            "contract": "GamesQueue",
            "label": "unproccessedGames",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:23"
          },
          {
            "contract": "GamesQueue",
            "label": "unproccessedGamesIndex",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:24"
          },
          {
            "contract": "GamesQueue",
            "label": "gamesResolvedQueue",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:25"
          },
          {
            "contract": "GamesQueue",
            "label": "existingGamesInResolvedQueue",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:26"
          },
          {
            "contract": "GamesQueue",
            "label": "firstResolved",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:27"
          },
          {
            "contract": "GamesQueue",
            "label": "lastResolved",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:28"
          },
          {
            "contract": "GamesQueue",
            "label": "consumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:30"
          },
          {
            "contract": "GamesQueue",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:31"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "2af7cfc4acf754b53ec029ba705c15408c3bd0a48c4101759b3f8bd8e185c3d4": {
      "address": "0x9e7769409E3e5A6821eeDcF33371FCA929fE6A48",
      "txHash": "0x2da07f83f3a62091c894eb1f5df6bb04c85c1580c78bb3379efccd9363fad07f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:59"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:60"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:63"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:64"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:65"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)40998_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:68"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)41009_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:69"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)41018_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:70"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:71"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:72"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:73"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:76"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:77"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:78"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:79"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)61931",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:82"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:83"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:84"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:85"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:86"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)40950",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:89"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:90"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:94"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:95"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:96"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:97"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOnADate",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:98"
          },
          {
            "contract": "TherundownConsumer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)62780",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:100"
          },
          {
            "contract": "TherundownConsumer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)41018_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:101"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsObtainer",
            "type": "t_contract(IGamesOddsObtainer)61004",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:102"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)40998_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)40998_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)41009_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)41009_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)41018_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)41018_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)61931": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)40950": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          },
          "t_contract(ITherundownConsumerVerifier)62780": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(IGamesOddsObtainer)61004": {
            "label": "contract IGamesOddsObtainer"
          }
        }
      }
    },
    "ef210aa518fcb1b0f02bb4f61974f319c4ceae70e3b01a310f8c35d7448bff6a": {
      "address": "0xeC1101A160D5B29351b0dEE11c823b16Ea81e7C6",
      "txHash": "0x0afc27a18bad30bbaec694c4e6c9eb61627af2d23b30e0c5a74015356e794f34",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)59439",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:26"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "invalidName",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:27"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "supportedMarketType",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:28"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultOddsThreshold",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:29"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "oddsThresholdForSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:30"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultBookmakerIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:32"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "sportIdToBookmakerIds",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:33"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "obtainer",
            "type": "t_contract(IGamesOddsObtainer)57806",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:34"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)58733",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:35"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:36"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)59439": {
            "label": "contract ITherundownConsumer"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_contract(IGamesOddsObtainer)57806": {
            "label": "contract IGamesOddsObtainer"
          },
          "t_contract(ISportPositionalMarketManager)58733": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "c070dbc3849fd0cfc29b8b52b5a1e3f0ee50f1d6fa27eea172b74bc0942c2dd7": {
      "address": "0x707075f0B619acF5A614Efb54FA8aC9B2FB55188",
      "txHash": "0xb1034a645adcc8122ed7372fd8cf4c4e9d7711814e38b6e4f54727e668f9c468",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)59143",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:32"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)59271",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:33"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)58437",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:34"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)57323_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:37"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)57323_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:38"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:39"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:40"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:41"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "doesSportSupportSpreadAndTotal",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:42"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:45"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:46"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketSpreadChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_int16,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:47"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketTotalChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_uint24,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:48"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:49"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketSread",
            "type": "t_mapping(t_address,t_int16)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:50"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketTotal",
            "type": "t_mapping(t_address,t_uint24)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:51"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveTotalChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:52"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveSpreadChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:53"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "isSpreadChildMarket",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:54"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:55"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)59143": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)59271": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)58437": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)57323_storage)": {
            "label": "mapping(bytes32 => struct IGamesOddsObtainer.GameOdds)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(GameOdds)57323_storage": {
            "label": "struct IGamesOddsObtainer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadHome",
                "type": "t_int16"
              },
              {
                "label": "spreadHomeOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadAway",
                "type": "t_int16"
              },
              {
                "label": "spreadAwayOdds",
                "type": "t_int24"
              },
              {
                "label": "totalOver",
                "type": "t_uint24"
              },
              {
                "label": "totalOverOdds",
                "type": "t_int24"
              },
              {
                "label": "totalUnder",
                "type": "t_uint24"
              },
              {
                "label": "totalUnderOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_int24": {
            "label": "int24"
          },
          "t_int16": {
            "label": "int16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_int16,t_address))": {
            "label": "mapping(address => mapping(int16 => address))"
          },
          "t_mapping(t_int16,t_address)": {
            "label": "mapping(int16 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint24,t_address))": {
            "label": "mapping(address => mapping(uint24 => address))"
          },
          "t_mapping(t_uint24,t_address)": {
            "label": "mapping(uint24 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_int16)": {
            "label": "mapping(address => int16)"
          },
          "t_mapping(t_address,t_uint24)": {
            "label": "mapping(address => uint24)"
          }
        }
      }
    },
    "0c40ea4b7f613a349a2375fc4de91706d8b4a65da086a59f7573a7cb83826166": {
      "address": "0xdaed344718743500D1163eCdD9361BDB7e224751",
      "txHash": "0x27533c9c03d1d565d30cd22235fc142bfde528a7d7db4f8b6ca85e92893c2341",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "PositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:85"
          },
          {
            "contract": "PositionalMarketData",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:86"
          },
          {
            "contract": "PositionalMarketData",
            "label": "rangedMarketsAMM",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:87"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e37a8d2cb5c3a4a88f0abfd757f60f11e7a33c87a78caaaffb82196859dc52c8": {
      "address": "0x33bf0378242c7C814942197ea4AE584b52681197",
      "txHash": "0x29ebdc2b550fc8f4a7a11fd5ed007a22a9de4ec0a7e03eee6598a5ec80d49b86",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "expiryDuration",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:31"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "marketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:33"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "customMarketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:34"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:36"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)10183_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:38"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)10183_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:39"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_migratingManager",
            "type": "t_contract(SportPositionalMarketManager)8904",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:41"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sUSD",
            "type": "t_contract(IERC20)157",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:43"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:45"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sportPositionalMarketFactory",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:46"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:47"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:48"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:49"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "cancelTimeout",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:50"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedCancelAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:51"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "oddsObtainer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:52"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "isDoubleChance",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:54"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "isDoubleChanceSupported",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:55"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "doubleChanceMarketsByParent",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:56"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)10183_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(SportPositionalMarketManager)8904": {
            "label": "contract SportPositionalMarketManager"
          },
          "t_contract(IERC20)157": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          }
        }
      }
    },
    "d18658aee917a945199fc763170a5a10d5b1d014c3d35de23e43a7394c6f4972": {
      "address": "0x7d25c21015b380f40496A3D5e47C01f558cE06D6",
      "txHash": "0x5d7bec6442c33f331efc889fabd856e1c40ea6750394332a809e5738d08dd505",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "expiryDuration",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:31"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "marketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:33"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "customMarketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:34"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:36"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)59659_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:38"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)59659_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:39"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_migratingManager",
            "type": "t_contract(SportPositionalMarketManager)46185",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:41"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sUSD",
            "type": "t_contract(IERC20)3345",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:43"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:45"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sportPositionalMarketFactory",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:46"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:47"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:48"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:49"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "cancelTimeout",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:50"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedCancelAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:51"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "oddsObtainer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:52"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "isDoubleChance",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:54"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "isDoubleChanceSupported",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:55"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "doubleChanceMarketsByParent",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:56"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)59659_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(SportPositionalMarketManager)46185": {
            "label": "contract SportPositionalMarketManager"
          },
          "t_contract(IERC20)3345": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          }
        }
      }
    },
    "3b846ce6d4eee8a9b815b31abebb1623ddf32f10bf6195cfbabaef2fb2506305": {
      "address": "0x3ec543C220443ad0d30F53fCa52DBFa346763256",
      "txHash": "0x4da680894bf6153f6d97fca9b37e0ae1ea1e16235795103621857b1f2f5ebc94",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)6137",
            "src": "contracts/SportMarkets/SportsAMM.sol:37"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:40"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:44"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:47"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:50"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:54"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:63"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:66"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:69"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:72"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)54863",
            "src": "contracts/SportMarkets/SportsAMM.sol:75"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:78"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:81"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)53392",
            "src": "contracts/SportMarkets/SportsAMM.sol:84"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:87"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:90"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:93"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportsAMM.sol:96"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:99"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:102"
          },
          {
            "contract": "SportsAMM",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:105"
          },
          {
            "contract": "SportsAMM",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:108"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:111"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:114"
          },
          {
            "contract": "SportsAMM",
            "label": "sportAmmUtils",
            "type": "t_contract(SportsAMMUtils)50739",
            "src": "contracts/SportMarkets/SportsAMM.sol:116"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:119"
          },
          {
            "contract": "SportsAMM",
            "label": "thresholdForOddsUpdate",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:123"
          },
          {
            "contract": "SportsAMM",
            "label": "wrapper",
            "type": "t_contract(ITherundownConsumerWrapper)55461",
            "src": "contracts/SportMarkets/SportsAMM.sol:126"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:129"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:132"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSportAndChild",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/SportMarkets/SportsAMM.sol:135"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)6137": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)54863": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)53392": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(SportsAMMUtils)50739": {
            "label": "contract SportsAMMUtils"
          },
          "t_contract(ITherundownConsumerWrapper)55461": {
            "label": "contract ITherundownConsumerWrapper"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ea448fa44950f145180f00107de2a7d6912080577176ee3591db8ee4ace41a2b": {
      "address": "0x5C64A0bE3cf1f5655d28C80353eE7f5Bd8326a83",
      "txHash": "0x634f38bbb8a5c11888bceb5ec9a48f0f339f9a834b0e61284d3df0ace901de29",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:25"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "2a64bda5ccb8de1066890a0f18909e70270e5a908a377e9a5571d107967ac4f1": {
      "address": "0x80559F187Ab7B373C39A04Df434F33d5462Ac1bb",
      "txHash": "0x1f0dca9e49d5fe32edc02be01a196f6725976cbb5c201ccf38e67e95112a0218",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)7480",
            "src": "contracts/SportMarkets/SportsAMM.sol:37"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:40"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:44"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:47"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:50"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:54"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:63"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:66"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:69"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:72"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)58175",
            "src": "contracts/SportMarkets/SportsAMM.sol:75"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:78"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:81"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)56697",
            "src": "contracts/SportMarkets/SportsAMM.sol:84"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:87"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:90"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:93"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportsAMM.sol:96"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:99"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:102"
          },
          {
            "contract": "SportsAMM",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:105"
          },
          {
            "contract": "SportsAMM",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:108"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:111"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:114"
          },
          {
            "contract": "SportsAMM",
            "label": "sportAmmUtils",
            "type": "t_contract(SportsAMMUtils)53044",
            "src": "contracts/SportMarkets/SportsAMM.sol:116"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:119"
          },
          {
            "contract": "SportsAMM",
            "label": "thresholdForOddsUpdate",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:123"
          },
          {
            "contract": "SportsAMM",
            "label": "wrapper",
            "type": "t_contract(ITherundownConsumerWrapper)58773",
            "src": "contracts/SportMarkets/SportsAMM.sol:126"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:129"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:132"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSportAndChild",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/SportMarkets/SportsAMM.sol:135"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)7480": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)58175": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)56697": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(SportsAMMUtils)53044": {
            "label": "contract SportsAMMUtils"
          },
          "t_contract(ITherundownConsumerWrapper)58773": {
            "label": "contract ITherundownConsumerWrapper"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "336a8dfddd0144bf77d1384eac6f052c3f65c7175b663ef974f4b0741610bfc1": {
      "address": "0x1EBCE103B528bBCe8c3bF0bd594cdF18d284cEf7",
      "txHash": "0x4e48ce8368dc69831deed07633deda1a618908946be76d197566eaa54b74609e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)58164",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:38"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)57997",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:39"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)7480",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)58241",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)56763",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:62"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)63095_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)34597",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:70"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:71"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerGameCombination",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:74"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)58164": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)57997": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)7480": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)58241": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)56763": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)63095_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)34597": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => uint256))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          }
        }
      }
    },
    "dec1f2b8ae69319683b4ac52face474680363ec8c7ad29187a55c3e81c59d4d6": {
      "address": "0xc4Db40A9Bf954bD8c2266ACfdA227d576d9Cc89c",
      "txHash": "0x7b1d6ea9ec20911d79376cd8de9c4262fd8b49e67a33b40234abf2e26b09d3e5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "Referrals",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/AMM/Referrals.sol:21"
          },
          {
            "contract": "Referrals",
            "label": "referrals",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/AMM/Referrals.sol:22"
          },
          {
            "contract": "Referrals",
            "label": "referralStarted",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/AMM/Referrals.sol:23"
          },
          {
            "contract": "Referrals",
            "label": "tradedBefore",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/AMM/Referrals.sol:25"
          },
          {
            "contract": "Referrals",
            "label": "sportReferrals",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/AMM/Referrals.sol:27"
          },
          {
            "contract": "Referrals",
            "label": "sportReferralStarted",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/AMM/Referrals.sol:28"
          },
          {
            "contract": "Referrals",
            "label": "sportTradedBefore",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/AMM/Referrals.sol:29"
          },
          {
            "contract": "Referrals",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/AMM/Referrals.sol:30"
          },
          {
            "contract": "Referrals",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts/AMM/Referrals.sol:31"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "f29a5b7e9c0f509a0d821b1503bbd116089bfa37232088e1595cc4d7d0e9fd4e": {
      "address": "0xc8738D256d27522dCCa2126a347f02d866Ef6945",
      "txHash": "0x5f73d232daef9bad28c62a5b7d9b170ff38b4762089fb4157ccdbd4910bedeb4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ThalesAMM",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)67790",
            "src": "contracts\\AMM\\ThalesAMM.sol:59"
          },
          {
            "contract": "ThalesAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\AMM\\ThalesAMM.sol:60"
          },
          {
            "contract": "ThalesAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:61"
          },
          {
            "contract": "ThalesAMM",
            "label": "capPerMarket",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:63"
          },
          {
            "contract": "ThalesAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:64"
          },
          {
            "contract": "ThalesAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:65"
          },
          {
            "contract": "ThalesAMM",
            "label": "impliedVolatilityPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:67"
          },
          {
            "contract": "ThalesAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:69"
          },
          {
            "contract": "ThalesAMM",
            "label": "spentOnMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:76"
          },
          {
            "contract": "ThalesAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:78"
          },
          {
            "contract": "ThalesAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:79"
          },
          {
            "contract": "ThalesAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)68484",
            "src": "contracts\\AMM\\ThalesAMM.sol:81"
          },
          {
            "contract": "ThalesAMM",
            "label": "minSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:83"
          },
          {
            "contract": "ThalesAMM",
            "label": "maxSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:84"
          },
          {
            "contract": "ThalesAMM",
            "label": "_capPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:86"
          },
          {
            "contract": "ThalesAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\ThalesAMM.sol:88"
          },
          {
            "contract": "ThalesAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:90"
          },
          {
            "contract": "ThalesAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:91"
          },
          {
            "contract": "ThalesAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)66891",
            "src": "contracts\\AMM\\ThalesAMM.sol:93"
          },
          {
            "contract": "ThalesAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:95"
          },
          {
            "contract": "ThalesAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:96"
          },
          {
            "contract": "ThalesAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:97"
          },
          {
            "contract": "ThalesAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\AMM\\ThalesAMM.sol:99"
          },
          {
            "contract": "ThalesAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:101"
          },
          {
            "contract": "ThalesAMM",
            "label": "ammUtils",
            "type": "t_contract(IThalesAMMUtils)68630",
            "src": "contracts\\AMM\\ThalesAMM.sol:103"
          },
          {
            "contract": "ThalesAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:108"
          },
          {
            "contract": "ThalesAMM",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:109"
          }
        ],
        "types": {
          "t_contract(IPriceFeed)67790": {
            "label": "contract IPriceFeed"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)68484": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ICurveSUSD)66891": {
            "label": "contract ICurveSUSD"
          },
          "t_contract(IThalesAMMUtils)68630": {
            "label": "contract IThalesAMMUtils"
          }
        }
      }
    },
    "06d82075bb5f8e6a17ab0d9313abdc616604752994d67bf51ff6455a0f20817d": {
      "address": "0xb109938Ef709C018CF5A78947d62652b2e8c17D1",
      "txHash": "0x96bd07b137c51e4430852ccf00a244d72f463c014ebecba95cfb457f29a10375",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:25"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a2cce57c73efa3103fbe48783280a863df778278945f6f77fa6a7332b6f10264": {
      "address": "0x888e06Fd1c1916c0f6c4B3633Ba0aeFD2E42297c",
      "txHash": "0xe91a24e95e2ba8a25198d564515b67692322fd263c066a5e5f573b3bc32a5661",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:25"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "977a83276230b71a65be1bc06f8d8c3988e104bfb85ca17c93c8ff1ff5963842": {
      "address": "0x6819aeC137F33EC777294a2EfBb85376251cB925",
      "txHash": "0x942fda1ba0070a45cd7df7462cedb68a5fa959e5cd4eb788946ffefa1e07521f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "expiryDuration",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:31"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "marketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:33"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "customMarketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:34"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:36"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)63020_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:38"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)63020_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:39"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_migratingManager",
            "type": "t_contract(SportPositionalMarketManager)48258",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:41"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sUSD",
            "type": "t_contract(IERC20)4688",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:43"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:45"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sportPositionalMarketFactory",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:46"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:47"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:48"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:49"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "cancelTimeout",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:50"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedCancelAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:51"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "oddsObtainer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:52"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "isDoubleChance",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:54"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "isDoubleChanceSupported",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:55"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "doubleChanceMarketsByParent",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:56"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "doesSportSupportDoubleChance",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:57"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)63020_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(SportPositionalMarketManager)48258": {
            "label": "contract SportPositionalMarketManager"
          },
          "t_contract(IERC20)4688": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          }
        }
      }
    },
    "c07fc1a5bc6e1a9e43a090a27a794fab74897aed5233a9c6f995dfe308194320": {
      "address": "0x87e81Bb60c3394A3c2425747545916781B49786b",
      "txHash": "0xf9a7266bcd6f8b2d6fc92f11ae0103ac55f836fced0cf66ae40480f406348bc6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ParlayMarketData",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)71216_storage",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketData.sol:16"
          },
          {
            "contract": "ParlayMarketData",
            "label": "_parlaysInGamePosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)71216_storage))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketData.sol:22"
          },
          {
            "contract": "ParlayMarketData",
            "label": "gameAddressPositionParlay",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketData.sol:24"
          },
          {
            "contract": "ParlayMarketData",
            "label": "numOfParlaysInGamePosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketData.sol:25"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayDetails",
            "type": "t_mapping(t_address,t_struct(ParlayDetails)36373_storage)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketData.sol:27"
          },
          {
            "contract": "ParlayMarketData",
            "label": "userParlays",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketData.sol:28"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayOwner",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketData.sol:29"
          },
          {
            "contract": "ParlayMarketData",
            "label": "userNumOfParlays",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketData.sol:30"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayMarketsAMM",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketData.sol:31"
          }
        ],
        "types": {
          "t_struct(AddressSet)71216_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)71216_storage))": {
            "label": "mapping(address => mapping(uint256 => struct AddressSetLib.AddressSet))"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)71216_storage)": {
            "label": "mapping(uint256 => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))": {
            "label": "mapping(address => mapping(uint256 => mapping(uint256 => address)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint256 => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(ParlayDetails)36373_storage)": {
            "label": "mapping(address => struct ParlayMarketData.ParlayDetails)"
          },
          "t_struct(ParlayDetails)36373_storage": {
            "label": "struct ParlayMarketData.ParlayDetails",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "sUSDPaid",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "720ef7b0ca02183ed40808fb694ef48e10c8ba15e9dba1b1796c4db4c4af772d": {
      "address": "0x78Df5d57d9b7A43cDD83105237392d3067479A46",
      "txHash": "0xc125bc7058346ebc48a5d60becf1a0e72f1e2faf3edfccc5154475a39fd87227",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "expiryDuration",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:31"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "marketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:33"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "customMarketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:34"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:36"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)70486_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:38"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)70486_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:39"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_migratingManager",
            "type": "t_contract(SportPositionalMarketManager)55297",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:41"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sUSD",
            "type": "t_contract(IERC20)4879",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:43"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:45"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sportPositionalMarketFactory",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:46"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:47"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:48"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:49"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "cancelTimeout",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:50"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedCancelAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:51"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "oddsObtainer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:52"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "isDoubleChance",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:54"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "isDoubleChanceSupported",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:55"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "doubleChanceMarketsByParent",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:56"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "doesSportSupportDoubleChance",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:57"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)70486_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(SportPositionalMarketManager)55297": {
            "label": "contract SportPositionalMarketManager"
          },
          "t_contract(IERC20)4879": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          }
        }
      }
    },
    "d7cd7fb3b9ab6c1e29f301f6ef13edf2653094f7eac279686aafb0adb04d45a8": {
      "address": "0x4c848a4A53954B9A925Cf857248Abf95Ab2A893C",
      "txHash": "0x3fe17dac8f2acc896497bfba6f78e1e9c7fd5b404f4ef14520ed2d2b785a8154",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyPausable.sol:12"
          },
          {
            "contract": "EscrowThales",
            "label": "vestingToken",
            "type": "t_contract(IERC20)9089",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:22"
          },
          {
            "contract": "EscrowThales",
            "label": "iStakingThales",
            "type": "t_contract(IStakingThales)6698",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:23"
          },
          {
            "contract": "EscrowThales",
            "label": "airdropContract",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:24"
          },
          {
            "contract": "EscrowThales",
            "label": "totalEscrowedRewards",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:27"
          },
          {
            "contract": "EscrowThales",
            "label": "totalEscrowBalanceNotIncludedInStaking",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:28"
          },
          {
            "contract": "EscrowThales",
            "label": "currentVestingPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:29"
          },
          {
            "contract": "EscrowThales",
            "label": "_totalVested",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:31"
          },
          {
            "contract": "EscrowThales",
            "label": "vestingEntries",
            "type": "t_mapping(t_address,t_array(t_struct(VestingEntry)396_storage)10_storage)",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:38"
          },
          {
            "contract": "EscrowThales",
            "label": "totalAccountEscrowedAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:39"
          },
          {
            "contract": "EscrowThales",
            "label": "lastPeriodAddedReward",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:41"
          },
          {
            "contract": "EscrowThales",
            "label": "testMode",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:43"
          },
          {
            "contract": "EscrowThales",
            "label": "ThalesStakingRewardsPool",
            "type": "t_contract(IThalesStakingRewardsPool)6777",
            "src": "contracts/EscrowAndStaking/EscrowThales.sol:44"
          }
        ],
        "types": {
          "t_contract(IERC20)9089": {
            "label": "contract IERC20"
          },
          "t_contract(IStakingThales)6698": {
            "label": "contract IStakingThales"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_struct(VestingEntry)396_storage)10_storage)": {
            "label": "mapping(address => struct EscrowThales.VestingEntry[10])"
          },
          "t_array(t_struct(VestingEntry)396_storage)10_storage": {
            "label": "struct EscrowThales.VestingEntry[10]"
          },
          "t_struct(VestingEntry)396_storage": {
            "label": "struct EscrowThales.VestingEntry",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "vesting_period",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IThalesStakingRewardsPool)6777": {
            "label": "contract IThalesStakingRewardsPool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d10930884ce94ba072da27ee8e3c828352487646dc9e07251327b1de8a6051e0": {
      "address": "0x56ef50083fA7AEEA923fEEd7907f4714e4c7a374",
      "txHash": "0x94320e718a76cea48df04b4018caf0675763317305a031269f2de15ea9556536",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyPausable.sol:12"
          },
          {
            "contract": "StakingThales",
            "label": "iEscrowThales",
            "type": "t_contract(IEscrowThales)3316",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:30"
          },
          {
            "contract": "StakingThales",
            "label": "stakingToken",
            "type": "t_contract(IERC20)4021",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:31"
          },
          {
            "contract": "StakingThales",
            "label": "feeToken",
            "type": "t_contract(IERC20)4021",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:32"
          },
          {
            "contract": "StakingThales",
            "label": "SNXRewards",
            "type": "t_contract(ISNXRewards)3410",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:33"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRoyale",
            "type": "t_contract(IThalesRoyale)3556",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:34"
          },
          {
            "contract": "StakingThales",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)3372",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:35"
          },
          {
            "contract": "StakingThales",
            "label": "periodsOfStaking",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:37"
          },
          {
            "contract": "StakingThales",
            "label": "lastPeriodTimeStamp",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:38"
          },
          {
            "contract": "StakingThales",
            "label": "durationPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:39"
          },
          {
            "contract": "StakingThales",
            "label": "unstakeDurationPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:40"
          },
          {
            "contract": "StakingThales",
            "label": "startTimeStamp",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:41"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodRewards",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:42"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodFees",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:43"
          },
          {
            "contract": "StakingThales",
            "label": "distributeFeesEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:44"
          },
          {
            "contract": "StakingThales",
            "label": "fixedPeriodReward",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:45"
          },
          {
            "contract": "StakingThales",
            "label": "periodExtraReward",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:46"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXRewardsInPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:47"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXFeesInPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:48"
          },
          {
            "contract": "StakingThales",
            "label": "claimEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:49"
          },
          {
            "contract": "StakingThales",
            "label": "stakerLifetimeRewardsClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:51"
          },
          {
            "contract": "StakingThales",
            "label": "stakerFeesClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:52"
          },
          {
            "contract": "StakingThales",
            "label": "_totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:54"
          },
          {
            "contract": "StakingThales",
            "label": "_totalEscrowedAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:55"
          },
          {
            "contract": "StakingThales",
            "label": "_totalPendingStakeAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:56"
          },
          {
            "contract": "StakingThales",
            "label": "_totalUnclaimedRewards",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:57"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardsClaimed",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:58"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardFeesClaimed",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:59"
          },
          {
            "contract": "StakingThales",
            "label": "lastUnstakeTime",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:61"
          },
          {
            "contract": "StakingThales",
            "label": "unstaking",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:62"
          },
          {
            "contract": "StakingThales",
            "label": "unstakingAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:63"
          },
          {
            "contract": "StakingThales",
            "label": "_stakedBalances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:64"
          },
          {
            "contract": "StakingThales",
            "label": "_lastRewardsClaimedPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:65"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:66"
          },
          {
            "contract": "StakingThales",
            "label": "lastAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:75"
          },
          {
            "contract": "StakingThales",
            "label": "stakerAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)190_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:76"
          },
          {
            "contract": "StakingThales",
            "label": "extraRewardsActive",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:78"
          },
          {
            "contract": "StakingThales",
            "label": "ThalesStakingRewardsPool",
            "type": "t_contract(IThalesStakingRewardsPool)3566",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:79"
          },
          {
            "contract": "StakingThales",
            "label": "maxSNXRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:81"
          },
          {
            "contract": "StakingThales",
            "label": "maxAMMVolumeRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:82"
          },
          {
            "contract": "StakingThales",
            "label": "AMMVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:83"
          },
          {
            "contract": "StakingThales",
            "label": "maxThalesRoyaleRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:84"
          },
          {
            "contract": "StakingThales",
            "label": "SNXVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:89"
          },
          {
            "contract": "StakingThales",
            "label": "_lastStakingPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:91"
          },
          {
            "contract": "StakingThales",
            "label": "totalStakedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:93"
          },
          {
            "contract": "StakingThales",
            "label": "totalEscrowedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:94"
          },
          {
            "contract": "StakingThales",
            "label": "exoticBonds",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:95"
          },
          {
            "contract": "StakingThales",
            "label": "addressResolver",
            "type": "t_contract(IAddressResolver)3223",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:97"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:99"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:100"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:102"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)190_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:103"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesRangedAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:104"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)190_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:105"
          },
          {
            "contract": "StakingThales",
            "label": "lastExoticMarketsUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:106"
          },
          {
            "contract": "StakingThales",
            "label": "exoticMarketsVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)190_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:107"
          },
          {
            "contract": "StakingThales",
            "label": "lastSportsAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:108"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)190_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:109"
          },
          {
            "contract": "StakingThales",
            "label": "canClaimOnBehalf",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:111"
          },
          {
            "contract": "StakingThales",
            "label": "mergeAccountEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:113"
          },
          {
            "contract": "StakingThales",
            "label": "delegatedVolume",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:115"
          },
          {
            "contract": "StakingThales",
            "label": "supportedSportVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:116"
          },
          {
            "contract": "StakingThales",
            "label": "supportedAMMVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:117"
          }
        ],
        "types": {
          "t_contract(IEscrowThales)3316": {
            "label": "contract IEscrowThales"
          },
          "t_contract(IERC20)4021": {
            "label": "contract IERC20"
          },
          "t_contract(ISNXRewards)3410": {
            "label": "contract ISNXRewards"
          },
          "t_contract(IThalesRoyale)3556": {
            "label": "contract IThalesRoyale"
          },
          "t_contract(IPriceFeed)3372": {
            "label": "contract IPriceFeed"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)190_storage)4_storage)": {
            "label": "mapping(address => struct StakingThales.AMMVolumeEntry[4])"
          },
          "t_array(t_struct(AMMVolumeEntry)190_storage)4_storage": {
            "label": "struct StakingThales.AMMVolumeEntry[4]"
          },
          "t_struct(AMMVolumeEntry)190_storage": {
            "label": "struct StakingThales.AMMVolumeEntry",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "period",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IThalesStakingRewardsPool)3566": {
            "label": "contract IThalesStakingRewardsPool"
          },
          "t_contract(IAddressResolver)3223": {
            "label": "contract IAddressResolver"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1933e4abc0a73b8f40242dd81baf1e4764cb3db0f3b67e07e9278b451fe36ab8": {
      "address": "0x94B417458AF11c991B413C03e79f76bda330AF77",
      "txHash": "0x3e79ef1c37f8e4bf5ec59565088a508500ea62c9ba6baecdaae9a8856d48af54",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyPausable.sol:12"
          },
          {
            "contract": "ThalesStakingRewardsPool",
            "label": "iStakingThales",
            "type": "t_contract(IStakingThales)6698",
            "src": "contracts/EscrowAndStaking/ThalesStakingRewardsPool.sol:22"
          },
          {
            "contract": "ThalesStakingRewardsPool",
            "label": "iEscrowThales",
            "type": "t_contract(IEscrowThales)6527",
            "src": "contracts/EscrowAndStaking/ThalesStakingRewardsPool.sol:23"
          },
          {
            "contract": "ThalesStakingRewardsPool",
            "label": "rewardToken",
            "type": "t_contract(IERC20)9089",
            "src": "contracts/EscrowAndStaking/ThalesStakingRewardsPool.sol:24"
          },
          {
            "contract": "ThalesStakingRewardsPool",
            "label": "lifetimeClaimedRewards",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/ThalesStakingRewardsPool.sol:26"
          }
        ],
        "types": {
          "t_contract(IStakingThales)6698": {
            "label": "contract IStakingThales"
          },
          "t_contract(IEscrowThales)6527": {
            "label": "contract IEscrowThales"
          },
          "t_contract(IERC20)9089": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f696437e795467154af33aeae8a81b107a810b3aabcd049576b4b7716b50c11e": {
      "address": "0x5c936675212cB832aa82bA4b8a1F237Cf8db97aD",
      "txHash": "0x60a7c3b821e7105a8a3f1a8e3fac7169bd1c701655876038f71dea1d3a78d01c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyPausable.sol:12"
          },
          {
            "contract": "StakingThales",
            "label": "iEscrowThales",
            "type": "t_contract(IEscrowThales)3259",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:30"
          },
          {
            "contract": "StakingThales",
            "label": "stakingToken",
            "type": "t_contract(IERC20)3964",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:31"
          },
          {
            "contract": "StakingThales",
            "label": "feeToken",
            "type": "t_contract(IERC20)3964",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:32"
          },
          {
            "contract": "StakingThales",
            "label": "SNXRewards",
            "type": "t_contract(ISNXRewards)3353",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:33"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRoyale",
            "type": "t_contract(IThalesRoyale)3499",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:34"
          },
          {
            "contract": "StakingThales",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)3315",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:35"
          },
          {
            "contract": "StakingThales",
            "label": "periodsOfStaking",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:37"
          },
          {
            "contract": "StakingThales",
            "label": "lastPeriodTimeStamp",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:38"
          },
          {
            "contract": "StakingThales",
            "label": "durationPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:39"
          },
          {
            "contract": "StakingThales",
            "label": "unstakeDurationPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:40"
          },
          {
            "contract": "StakingThales",
            "label": "startTimeStamp",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:41"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodRewards",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:42"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodFees",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:43"
          },
          {
            "contract": "StakingThales",
            "label": "distributeFeesEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:44"
          },
          {
            "contract": "StakingThales",
            "label": "fixedPeriodReward",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:45"
          },
          {
            "contract": "StakingThales",
            "label": "periodExtraReward",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:46"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXRewardsInPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:47"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXFeesInPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:48"
          },
          {
            "contract": "StakingThales",
            "label": "claimEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:49"
          },
          {
            "contract": "StakingThales",
            "label": "stakerLifetimeRewardsClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:51"
          },
          {
            "contract": "StakingThales",
            "label": "stakerFeesClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:52"
          },
          {
            "contract": "StakingThales",
            "label": "_totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:54"
          },
          {
            "contract": "StakingThales",
            "label": "_totalEscrowedAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:55"
          },
          {
            "contract": "StakingThales",
            "label": "_totalPendingStakeAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:56"
          },
          {
            "contract": "StakingThales",
            "label": "_totalUnclaimedRewards",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:57"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardsClaimed",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:58"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardFeesClaimed",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:59"
          },
          {
            "contract": "StakingThales",
            "label": "lastUnstakeTime",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:61"
          },
          {
            "contract": "StakingThales",
            "label": "unstaking",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:62"
          },
          {
            "contract": "StakingThales",
            "label": "unstakingAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:63"
          },
          {
            "contract": "StakingThales",
            "label": "_stakedBalances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:64"
          },
          {
            "contract": "StakingThales",
            "label": "_lastRewardsClaimedPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:65"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:66"
          },
          {
            "contract": "StakingThales",
            "label": "lastAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:75"
          },
          {
            "contract": "StakingThales",
            "label": "stakerAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)190_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:76"
          },
          {
            "contract": "StakingThales",
            "label": "extraRewardsActive",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:78"
          },
          {
            "contract": "StakingThales",
            "label": "ThalesStakingRewardsPool",
            "type": "t_contract(IThalesStakingRewardsPool)3509",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:79"
          },
          {
            "contract": "StakingThales",
            "label": "maxSNXRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:81"
          },
          {
            "contract": "StakingThales",
            "label": "maxAMMVolumeRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:82"
          },
          {
            "contract": "StakingThales",
            "label": "AMMVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:83"
          },
          {
            "contract": "StakingThales",
            "label": "maxThalesRoyaleRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:84"
          },
          {
            "contract": "StakingThales",
            "label": "SNXVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:89"
          },
          {
            "contract": "StakingThales",
            "label": "_lastStakingPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:91"
          },
          {
            "contract": "StakingThales",
            "label": "totalStakedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:93"
          },
          {
            "contract": "StakingThales",
            "label": "totalEscrowedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:94"
          },
          {
            "contract": "StakingThales",
            "label": "exoticBonds",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:95"
          },
          {
            "contract": "StakingThales",
            "label": "addressResolver",
            "type": "t_contract(IAddressResolver)3166",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:97"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:99"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:100"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:102"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)190_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:103"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesRangedAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:104"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)190_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:105"
          },
          {
            "contract": "StakingThales",
            "label": "lastExoticMarketsUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:106"
          },
          {
            "contract": "StakingThales",
            "label": "exoticMarketsVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)190_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:107"
          },
          {
            "contract": "StakingThales",
            "label": "lastSportsAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:108"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)190_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:109"
          },
          {
            "contract": "StakingThales",
            "label": "canClaimOnBehalf",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:111"
          },
          {
            "contract": "StakingThales",
            "label": "mergeAccountEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:113"
          },
          {
            "contract": "StakingThales",
            "label": "delegatedVolume",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:115"
          },
          {
            "contract": "StakingThales",
            "label": "supportedSportVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:116"
          },
          {
            "contract": "StakingThales",
            "label": "supportedAMMVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:117"
          }
        ],
        "types": {
          "t_contract(IEscrowThales)3259": {
            "label": "contract IEscrowThales"
          },
          "t_contract(IERC20)3964": {
            "label": "contract IERC20"
          },
          "t_contract(ISNXRewards)3353": {
            "label": "contract ISNXRewards"
          },
          "t_contract(IThalesRoyale)3499": {
            "label": "contract IThalesRoyale"
          },
          "t_contract(IPriceFeed)3315": {
            "label": "contract IPriceFeed"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)190_storage)4_storage)": {
            "label": "mapping(address => struct StakingThales.AMMVolumeEntry[4])"
          },
          "t_array(t_struct(AMMVolumeEntry)190_storage)4_storage": {
            "label": "struct StakingThales.AMMVolumeEntry[4]"
          },
          "t_struct(AMMVolumeEntry)190_storage": {
            "label": "struct StakingThales.AMMVolumeEntry",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "period",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IThalesStakingRewardsPool)3509": {
            "label": "contract IThalesStakingRewardsPool"
          },
          "t_contract(IAddressResolver)3166": {
            "label": "contract IAddressResolver"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ccfd2960d65de2f56f7a91aae09fecadd11392d5a28b1a82f4fe2ff0d72c3af5": {
      "address": "0x04Ee038cBC263Ea91f1Ae6FccdcE586E2982839c",
      "txHash": "0x8e6d26fd3a4c7ef6cd835c4f4f6785af68afa080a7440bf45dfccf45c8bf6054",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:37"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:40"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:44"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:47"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:50"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:54"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:63"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:66"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:69"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:72"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)62009",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:75"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:78"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:81"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)60469",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:84"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:87"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:90"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:93"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:96"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:99"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:102"
          },
          {
            "contract": "SportsAMM",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:105"
          },
          {
            "contract": "SportsAMM",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:108"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:111"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:114"
          },
          {
            "contract": "SportsAMM",
            "label": "sportAmmUtils",
            "type": "t_contract(SportsAMMUtils)56816",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:116"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:119"
          },
          {
            "contract": "SportsAMM",
            "label": "thresholdForOddsUpdate",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:123"
          },
          {
            "contract": "SportsAMM",
            "label": "wrapper",
            "type": "t_contract(ITherundownConsumerWrapper)62607",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:126"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:129"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:132"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSportAndChild",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:135"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)62009": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)60469": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(SportsAMMUtils)56816": {
            "label": "contract SportsAMMUtils"
          },
          "t_contract(ITherundownConsumerWrapper)62607": {
            "label": "contract ITherundownConsumerWrapper"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "44a17802a355f24cc0be5b3d5d2d58d715107e313326010a51cf8fa0c78e47b8": {
      "address": "0xE10A2743A1CE709693D3ad5f06EA47Df3E0b3ec9",
      "txHash": "0x4a81e52bafba329f67da35d543567b17d9a620d98470ae5ac8cfe48dc441e1d0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)62327",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:32"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)62455",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:33"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)61606",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:34"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)60492_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:37"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)60492_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:38"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:39"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:40"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:41"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "doesSportSupportSpreadAndTotal",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:42"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:45"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:46"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketSpreadChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_int16,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:47"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketTotalChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_uint24,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:48"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:49"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketSread",
            "type": "t_mapping(t_address,t_int16)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:50"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketTotal",
            "type": "t_mapping(t_address,t_uint24)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:51"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveTotalChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:52"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveSpreadChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:53"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "isSpreadChildMarket",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:54"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:55"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)62327": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)62455": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)61606": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)60492_storage)": {
            "label": "mapping(bytes32 => struct IGamesOddsObtainer.GameOdds)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(GameOdds)60492_storage": {
            "label": "struct IGamesOddsObtainer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadHome",
                "type": "t_int16"
              },
              {
                "label": "spreadHomeOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadAway",
                "type": "t_int16"
              },
              {
                "label": "spreadAwayOdds",
                "type": "t_int24"
              },
              {
                "label": "totalOver",
                "type": "t_uint24"
              },
              {
                "label": "totalOverOdds",
                "type": "t_int24"
              },
              {
                "label": "totalUnder",
                "type": "t_uint24"
              },
              {
                "label": "totalUnderOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_int24": {
            "label": "int24"
          },
          "t_int16": {
            "label": "int16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_int16,t_address))": {
            "label": "mapping(address => mapping(int16 => address))"
          },
          "t_mapping(t_int16,t_address)": {
            "label": "mapping(int16 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint24,t_address))": {
            "label": "mapping(address => mapping(uint24 => address))"
          },
          "t_mapping(t_uint24,t_address)": {
            "label": "mapping(uint24 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_int16)": {
            "label": "mapping(address => int16)"
          },
          "t_mapping(t_address,t_uint24)": {
            "label": "mapping(address => uint24)"
          }
        }
      }
    },
    "44f4610f2aeb13459c89ad5708389d91f26f91ff1d58faee28ae8ebd246719b0": {
      "address": "0xE90e99726548Aa888564D169B2c9686785a04c01",
      "txHash": "0x2167f8d10527485956415ce652c8104cf130e7d3ea1ad1791e8d0649aaa60464",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyPausable.sol:12"
          },
          {
            "contract": "StakingThales",
            "label": "iEscrowThales",
            "type": "t_contract(IEscrowThales)6485",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:32"
          },
          {
            "contract": "StakingThales",
            "label": "stakingToken",
            "type": "t_contract(IERC20)9444",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:33"
          },
          {
            "contract": "StakingThales",
            "label": "feeToken",
            "type": "t_contract(IERC20)9444",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:34"
          },
          {
            "contract": "StakingThales",
            "label": "SNXRewards",
            "type": "t_contract(ISNXRewards)6855",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:35"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRoyale",
            "type": "t_contract(IThalesRoyale)7122",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:36"
          },
          {
            "contract": "StakingThales",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)6817",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:37"
          },
          {
            "contract": "StakingThales",
            "label": "periodsOfStaking",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:39"
          },
          {
            "contract": "StakingThales",
            "label": "lastPeriodTimeStamp",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:40"
          },
          {
            "contract": "StakingThales",
            "label": "durationPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:41"
          },
          {
            "contract": "StakingThales",
            "label": "unstakeDurationPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:42"
          },
          {
            "contract": "StakingThales",
            "label": "startTimeStamp",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:43"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodRewards",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:44"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodFees",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:45"
          },
          {
            "contract": "StakingThales",
            "label": "distributeFeesEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:46"
          },
          {
            "contract": "StakingThales",
            "label": "fixedPeriodReward",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:47"
          },
          {
            "contract": "StakingThales",
            "label": "periodExtraReward",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:48"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXRewardsInPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:49"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXFeesInPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:50"
          },
          {
            "contract": "StakingThales",
            "label": "claimEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:51"
          },
          {
            "contract": "StakingThales",
            "label": "stakerLifetimeRewardsClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:53"
          },
          {
            "contract": "StakingThales",
            "label": "stakerFeesClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:54"
          },
          {
            "contract": "StakingThales",
            "label": "_totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:56"
          },
          {
            "contract": "StakingThales",
            "label": "_totalEscrowedAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:57"
          },
          {
            "contract": "StakingThales",
            "label": "_totalPendingStakeAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:58"
          },
          {
            "contract": "StakingThales",
            "label": "_totalUnclaimedRewards",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:59"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardsClaimed",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:60"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardFeesClaimed",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:61"
          },
          {
            "contract": "StakingThales",
            "label": "lastUnstakeTime",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:63"
          },
          {
            "contract": "StakingThales",
            "label": "unstaking",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:64"
          },
          {
            "contract": "StakingThales",
            "label": "unstakingAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:65"
          },
          {
            "contract": "StakingThales",
            "label": "_stakedBalances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:66"
          },
          {
            "contract": "StakingThales",
            "label": "_lastRewardsClaimedPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:67"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:68"
          },
          {
            "contract": "StakingThales",
            "label": "lastAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:77"
          },
          {
            "contract": "StakingThales",
            "label": "stakerAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3107_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:78"
          },
          {
            "contract": "StakingThales",
            "label": "extraRewardsActive",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:80"
          },
          {
            "contract": "StakingThales",
            "label": "ThalesStakingRewardsPool",
            "type": "t_contract(IThalesStakingRewardsPool)7132",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:81"
          },
          {
            "contract": "StakingThales",
            "label": "maxSNXRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:83"
          },
          {
            "contract": "StakingThales",
            "label": "maxAMMVolumeRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:84"
          },
          {
            "contract": "StakingThales",
            "label": "AMMVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:85"
          },
          {
            "contract": "StakingThales",
            "label": "maxThalesRoyaleRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:86"
          },
          {
            "contract": "StakingThales",
            "label": "SNXVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:91"
          },
          {
            "contract": "StakingThales",
            "label": "_lastStakingPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:93"
          },
          {
            "contract": "StakingThales",
            "label": "totalStakedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:95"
          },
          {
            "contract": "StakingThales",
            "label": "totalEscrowedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:96"
          },
          {
            "contract": "StakingThales",
            "label": "exoticBonds",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:97"
          },
          {
            "contract": "StakingThales",
            "label": "addressResolver",
            "type": "t_contract(IAddressResolver)6392",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:99"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:101"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:102"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:104"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3107_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:105"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesRangedAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:106"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3107_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:107"
          },
          {
            "contract": "StakingThales",
            "label": "lastExoticMarketsUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:108"
          },
          {
            "contract": "StakingThales",
            "label": "exoticMarketsVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3107_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:109"
          },
          {
            "contract": "StakingThales",
            "label": "lastSportsAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:110"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3107_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:111"
          },
          {
            "contract": "StakingThales",
            "label": "canClaimOnBehalf",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:113"
          },
          {
            "contract": "StakingThales",
            "label": "mergeAccountEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:115"
          },
          {
            "contract": "StakingThales",
            "label": "delegatedVolume",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:117"
          },
          {
            "contract": "StakingThales",
            "label": "supportedSportVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:118"
          },
          {
            "contract": "StakingThales",
            "label": "supportedAMMVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:119"
          }
        ],
        "types": {
          "t_contract(IEscrowThales)6485": {
            "label": "contract IEscrowThales"
          },
          "t_contract(IERC20)9444": {
            "label": "contract IERC20"
          },
          "t_contract(ISNXRewards)6855": {
            "label": "contract ISNXRewards"
          },
          "t_contract(IThalesRoyale)7122": {
            "label": "contract IThalesRoyale"
          },
          "t_contract(IPriceFeed)6817": {
            "label": "contract IPriceFeed"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3107_storage)4_storage)": {
            "label": "mapping(address => struct StakingThales.AMMVolumeEntry[4])"
          },
          "t_array(t_struct(AMMVolumeEntry)3107_storage)4_storage": {
            "label": "struct StakingThales.AMMVolumeEntry[4]"
          },
          "t_struct(AMMVolumeEntry)3107_storage": {
            "label": "struct StakingThales.AMMVolumeEntry",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "period",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IThalesStakingRewardsPool)7132": {
            "label": "contract IThalesStakingRewardsPool"
          },
          "t_contract(IAddressResolver)6392": {
            "label": "contract IAddressResolver"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d494d011223738ba1def3fb342e103fd15752d442560c5e48780d81bf077cc04": {
      "address": "0x8AF9a2a03032dF542985A07b15e437c6C42D4329",
      "txHash": "0xdb6efbbc27b5534720557aa44daebbe42177cd08be046e6d60a8509114797c5a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)12979",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:38"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)12812",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:39"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)1142",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)13056",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)11731",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:62"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)13312_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)6931",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:70"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:71"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerGameCombination",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:74"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)12979": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)12812": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)1142": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)13056": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)11731": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)13312_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)6931": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => uint256))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          }
        }
      }
    },
    "9bea07eafdf5df46fa5fed3d879b9899a736adeb2eee3dc047f4365d1295eba3": {
      "address": "0x3dD87b5B198798b944853A1f0df4909D065a73d8",
      "txHash": "0x2dc7c1cb511ffccdc7088a9133fe8fac5203b9b06de26184dfd334ce55a970a9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)3358",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:26"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "invalidName",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:27"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "supportedMarketType",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:28"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultOddsThreshold",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:29"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "oddsThresholdForSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:30"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultBookmakerIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:32"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "sportIdToBookmakerIds",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:33"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "obtainer",
            "type": "t_contract(IGamesOddsObtainer)2426",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:34"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)3112",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:35"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:36"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)3358": {
            "label": "contract ITherundownConsumer"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_contract(IGamesOddsObtainer)2426": {
            "label": "contract IGamesOddsObtainer"
          },
          "t_contract(ISportPositionalMarketManager)3112": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "f8f8c1f95acda568c24970609c65743499ac80dc7398575c56f7e7f9f2023f35": {
      "address": "0x9c27B789D645bf7bB02e71590df627b3DE8249fA",
      "txHash": "0xe19a87507dd242c2041c7bcddf9ba9cf29ca2c7b3b8315bc10657ddd6a5561a3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:59"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:60"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:63"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:64"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:65"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)1000_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:68"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)1011_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:69"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)1020_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:70"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:71"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:72"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:73"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:76"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:77"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:78"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:79"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)4481",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:82"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:83"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:84"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:85"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:86"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)952",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:89"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:90"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:94"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:95"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:96"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:97"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOnADate",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:98"
          },
          {
            "contract": "TherundownConsumer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)4609",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:100"
          },
          {
            "contract": "TherundownConsumer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)1020_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:101"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsObtainer",
            "type": "t_contract(IGamesOddsObtainer)3795",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:102"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)1000_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)1000_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)1011_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)1011_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)1020_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)1020_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)4481": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)952": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          },
          "t_contract(ITherundownConsumerVerifier)4609": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(IGamesOddsObtainer)3795": {
            "label": "contract IGamesOddsObtainer"
          }
        }
      }
    },
    "93c1bcac52f1ddeb97f4bace5aa03f2782c946d4b7d58ef508484c5c6e9b285b": {
      "address": "0x9EE011e04268dBAF8Ee58f5C02243A001bBd734c",
      "txHash": "0x498b693374d6988890cd677d7336a7c86b5ec3c4380facf849ace3578d26f956",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)66094",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:32"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)66222",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:33"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)65366",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:34"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)64169_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:37"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)64169_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:38"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:39"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:40"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:41"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "doesSportSupportSpreadAndTotal",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:42"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:45"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:46"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketSpreadChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_int16,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:47"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketTotalChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_uint24,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:48"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:49"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketSread",
            "type": "t_mapping(t_address,t_int16)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:50"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketTotal",
            "type": "t_mapping(t_address,t_uint24)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:51"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveTotalChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:52"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveSpreadChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:53"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "isSpreadChildMarket",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:54"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:55"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "normalizedOddsForMarketFulfilled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:56"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "normalizedOddsForMarket",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:57"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)66094": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)66222": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)65366": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)64169_storage)": {
            "label": "mapping(bytes32 => struct IGamesOddsObtainer.GameOdds)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(GameOdds)64169_storage": {
            "label": "struct IGamesOddsObtainer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadHome",
                "type": "t_int16"
              },
              {
                "label": "spreadHomeOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadAway",
                "type": "t_int16"
              },
              {
                "label": "spreadAwayOdds",
                "type": "t_int24"
              },
              {
                "label": "totalOver",
                "type": "t_uint24"
              },
              {
                "label": "totalOverOdds",
                "type": "t_int24"
              },
              {
                "label": "totalUnder",
                "type": "t_uint24"
              },
              {
                "label": "totalUnderOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_int24": {
            "label": "int24"
          },
          "t_int16": {
            "label": "int16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_int16,t_address))": {
            "label": "mapping(address => mapping(int16 => address))"
          },
          "t_mapping(t_int16,t_address)": {
            "label": "mapping(int16 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint24,t_address))": {
            "label": "mapping(address => mapping(uint24 => address))"
          },
          "t_mapping(t_uint24,t_address)": {
            "label": "mapping(uint24 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_int16)": {
            "label": "mapping(address => int16)"
          },
          "t_mapping(t_address,t_uint24)": {
            "label": "mapping(address => uint24)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "23180e2923ac550590719012c7b55cfce97d578b9042c62ef7dce1e55ec126b9": {
      "address": "0xFbbe82d9E0075c4e0ab90fF309012fEd1D4C18Fb",
      "txHash": "0x821a46cf52013ca47571ad84dd2c6cbf84871c195634f0c27f6e867cea317e9c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)3595",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:26"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "invalidName",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:27"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "supportedMarketType",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:28"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultOddsThreshold",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:29"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "oddsThresholdForSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:30"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultBookmakerIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:32"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "sportIdToBookmakerIds",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:33"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "obtainer",
            "type": "t_contract(IGamesOddsObtainer)2656",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:34"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)3342",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:35"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:36"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)3595": {
            "label": "contract ITherundownConsumer"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_contract(IGamesOddsObtainer)2656": {
            "label": "contract IGamesOddsObtainer"
          },
          "t_contract(ISportPositionalMarketManager)3342": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "954355278024b74ef5b5103a11bc6d92c7f12476a44d7cca118b1ec0fedeb9b5": {
      "address": "0x09EC2ed8a87283b4e2D4F7202DfF705a48Be4c52",
      "txHash": "0x88d6f062e4d6c30248850e92ec9f0eb2ac4c29fb403bb9807f9f5b97df7fb9ba",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:59"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:60"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:63"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:64"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:65"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)43877_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:68"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)43888_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:69"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)43897_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:70"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:71"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:72"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:73"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:76"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:77"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:78"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:79"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)65268",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:82"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:83"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:84"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:85"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:86"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)43829",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:89"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:90"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:94"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:95"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:96"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:97"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOnADate",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:98"
          },
          {
            "contract": "TherundownConsumer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)66124",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:100"
          },
          {
            "contract": "TherundownConsumer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)43897_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:101"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsObtainer",
            "type": "t_contract(IGamesOddsObtainer)64279",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:102"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)43877_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)43877_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)43888_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)43888_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)43897_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)43897_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)65268": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)43829": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          },
          "t_contract(ITherundownConsumerVerifier)66124": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(IGamesOddsObtainer)64279": {
            "label": "contract IGamesOddsObtainer"
          }
        }
      }
    },
    "4fa047ca4ce3007d3e9e6ecbb4a1885fc3d2b94ad06f53ee57d573ddcc6f58f6": {
      "address": "0xe5a2bAB2FBA8DB4817B634132b840a6B473A29e8",
      "txHash": "0x2772a7d2b0c86d4c23394bc47d73126395888c6cebb0c126b3f85bab375238e6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sportsAMM",
            "type": "t_contract(ISportsAMM)65014",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:39"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:40"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:42"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:44"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:45"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:46"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:48"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:50"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:51"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:53"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:54"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:56"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:58"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:59"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:61"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:62"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:64"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:65"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:66"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:67"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:69"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)65101",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:71"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:73"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:75"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:77"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:79"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "onlyWhitelistedStakersAllowed",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:81"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedStakers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:83"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:85"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)65014": {
            "label": "contract ISportsAMM"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)65101": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "00d048b7b847fe0255033349ce7b7fcb61eed2bbc1bd3eee149dac6db22a8014": {
      "address": "0x789c830e1a02423Ec9a1375d5d2763Faca2dA846",
      "txHash": "0x159a1c2fe7a52f70c4ffdeb452e3ac06eec9eaafb0a8ccba914ed5dba9038022",
      "layout": {
        "storage": [
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "DefaultLiquidityProvider",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\LiquidityPool\\DefaultLiquidityProvider.sol:14"
          },
          {
            "contract": "DefaultLiquidityProvider",
            "label": "liquidityPool",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\DefaultLiquidityProvider.sol:19"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b69137d40579b83705fec017789bf997ce530d55beddaf2ea4c6d9868e19712e": {
      "address": "0x6019a1085Bd9817Ad004945D9D52F86E978E6887",
      "txHash": "0x2b0819bf12c7661155dc2ca80feaa2de88840d0933641cfe193cd6cfeffc2f3a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:39"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:42"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:46"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:49"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:52"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:56"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:65"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:68"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:71"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:74"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)65646",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:77"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:80"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:83"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)64084",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:86"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:89"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:92"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:95"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:98"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:101"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:104"
          },
          {
            "contract": "SportsAMM",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:107"
          },
          {
            "contract": "SportsAMM",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:110"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:113"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:116"
          },
          {
            "contract": "SportsAMM",
            "label": "sportAmmUtils",
            "type": "t_contract(SportsAMMUtils)60423",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:118"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:121"
          },
          {
            "contract": "SportsAMM",
            "label": "thresholdForOddsUpdate",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:125"
          },
          {
            "contract": "SportsAMM",
            "label": "wrapper",
            "type": "t_contract(ITherundownConsumerWrapper)66251",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:128"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:131"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:134"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSportAndChild",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:137"
          },
          {
            "contract": "SportsAMM",
            "label": "liquidityPool",
            "type": "t_contract(SportAMMLiquidityPool)33175",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:157"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)65646": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)64084": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(SportsAMMUtils)60423": {
            "label": "contract SportsAMMUtils"
          },
          "t_contract(ITherundownConsumerWrapper)66251": {
            "label": "contract ITherundownConsumerWrapper"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(SportAMMLiquidityPool)33175": {
            "label": "contract SportAMMLiquidityPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1724fdf59a19004397ac46691b3a9eff70e782dd4fd73273df107dfe82ffb08f": {
      "address": "0xd65031ccB520E84204dAF4E05dfF7D33EF763768",
      "txHash": "0xb2c5b03a176ff7b295f90d305702d0ac40503c2c2f2dbb88499d53a800bc4ec0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyPausable.sol:12"
          },
          {
            "contract": "StakingThales",
            "label": "iEscrowThales",
            "type": "t_contract(IEscrowThales)6929",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:33"
          },
          {
            "contract": "StakingThales",
            "label": "stakingToken",
            "type": "t_contract(IERC20)9898",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:34"
          },
          {
            "contract": "StakingThales",
            "label": "feeToken",
            "type": "t_contract(IERC20)9898",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:35"
          },
          {
            "contract": "StakingThales",
            "label": "SNXRewards",
            "type": "t_contract(ISNXRewards)7299",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:36"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRoyale",
            "type": "t_contract(IThalesRoyale)7576",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:37"
          },
          {
            "contract": "StakingThales",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)7261",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:38"
          },
          {
            "contract": "StakingThales",
            "label": "periodsOfStaking",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:40"
          },
          {
            "contract": "StakingThales",
            "label": "lastPeriodTimeStamp",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:41"
          },
          {
            "contract": "StakingThales",
            "label": "durationPeriod",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:42"
          },
          {
            "contract": "StakingThales",
            "label": "unstakeDurationPeriod",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:43"
          },
          {
            "contract": "StakingThales",
            "label": "startTimeStamp",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:44"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodRewards",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:45"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodFees",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:46"
          },
          {
            "contract": "StakingThales",
            "label": "distributeFeesEnabled",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:47"
          },
          {
            "contract": "StakingThales",
            "label": "fixedPeriodReward",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:48"
          },
          {
            "contract": "StakingThales",
            "label": "periodExtraReward",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:49"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXRewardsInPeriod",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:50"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXFeesInPeriod",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:51"
          },
          {
            "contract": "StakingThales",
            "label": "claimEnabled",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:52"
          },
          {
            "contract": "StakingThales",
            "label": "stakerLifetimeRewardsClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:54"
          },
          {
            "contract": "StakingThales",
            "label": "stakerFeesClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:55"
          },
          {
            "contract": "StakingThales",
            "label": "_totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:57"
          },
          {
            "contract": "StakingThales",
            "label": "_totalEscrowedAmount",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:58"
          },
          {
            "contract": "StakingThales",
            "label": "_totalPendingStakeAmount",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:59"
          },
          {
            "contract": "StakingThales",
            "label": "_totalUnclaimedRewards",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:60"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardsClaimed",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:61"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardFeesClaimed",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:62"
          },
          {
            "contract": "StakingThales",
            "label": "lastUnstakeTime",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:64"
          },
          {
            "contract": "StakingThales",
            "label": "unstaking",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:65"
          },
          {
            "contract": "StakingThales",
            "label": "unstakingAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:66"
          },
          {
            "contract": "StakingThales",
            "label": "_stakedBalances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:67"
          },
          {
            "contract": "StakingThales",
            "label": "_lastRewardsClaimedPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:68"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:69"
          },
          {
            "contract": "StakingThales",
            "label": "lastAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:78"
          },
          {
            "contract": "StakingThales",
            "label": "stakerAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3519_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:79"
          },
          {
            "contract": "StakingThales",
            "label": "extraRewardsActive",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:81"
          },
          {
            "contract": "StakingThales",
            "label": "ThalesStakingRewardsPool",
            "type": "t_contract(IThalesStakingRewardsPool)7586",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:82"
          },
          {
            "contract": "StakingThales",
            "label": "maxSNXRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:84"
          },
          {
            "contract": "StakingThales",
            "label": "maxAMMVolumeRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:85"
          },
          {
            "contract": "StakingThales",
            "label": "AMMVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:86"
          },
          {
            "contract": "StakingThales",
            "label": "maxThalesRoyaleRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:87"
          },
          {
            "contract": "StakingThales",
            "label": "SNXVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:92"
          },
          {
            "contract": "StakingThales",
            "label": "_lastStakingPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:94"
          },
          {
            "contract": "StakingThales",
            "label": "totalStakedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:96"
          },
          {
            "contract": "StakingThales",
            "label": "totalEscrowedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:97"
          },
          {
            "contract": "StakingThales",
            "label": "exoticBonds",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:98"
          },
          {
            "contract": "StakingThales",
            "label": "addressResolver",
            "type": "t_contract(IAddressResolver)6836",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:100"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMM",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:102"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:103"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:105"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3519_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:106"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesRangedAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:107"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3519_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:108"
          },
          {
            "contract": "StakingThales",
            "label": "lastExoticMarketsUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:109"
          },
          {
            "contract": "StakingThales",
            "label": "exoticMarketsVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3519_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:110"
          },
          {
            "contract": "StakingThales",
            "label": "lastSportsAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:111"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3519_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:112"
          },
          {
            "contract": "StakingThales",
            "label": "canClaimOnBehalf",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:114"
          },
          {
            "contract": "StakingThales",
            "label": "mergeAccountEnabled",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:116"
          },
          {
            "contract": "StakingThales",
            "label": "delegatedVolume",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:118"
          },
          {
            "contract": "StakingThales",
            "label": "supportedSportVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:119"
          },
          {
            "contract": "StakingThales",
            "label": "supportedAMMVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:120"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMLiquidityPool",
            "type": "t_contract(ISportsAMMLiquidityPool)7309",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:122"
          }
        ],
        "types": {
          "t_contract(IEscrowThales)6929": {
            "label": "contract IEscrowThales"
          },
          "t_contract(IERC20)9898": {
            "label": "contract IERC20"
          },
          "t_contract(ISNXRewards)7299": {
            "label": "contract ISNXRewards"
          },
          "t_contract(IThalesRoyale)7576": {
            "label": "contract IThalesRoyale"
          },
          "t_contract(IPriceFeed)7261": {
            "label": "contract IPriceFeed"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3519_storage)4_storage)": {
            "label": "mapping(address => struct StakingThales.AMMVolumeEntry[4])"
          },
          "t_array(t_struct(AMMVolumeEntry)3519_storage)4_storage": {
            "label": "struct StakingThales.AMMVolumeEntry[4]"
          },
          "t_struct(AMMVolumeEntry)3519_storage": {
            "label": "struct StakingThales.AMMVolumeEntry",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "period",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IThalesStakingRewardsPool)7586": {
            "label": "contract IThalesStakingRewardsPool"
          },
          "t_contract(IAddressResolver)6836": {
            "label": "contract IAddressResolver"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_contract(ISportsAMMLiquidityPool)7309": {
            "label": "contract ISportsAMMLiquidityPool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "dd1f7c0daef6722cd9d7c11a4403934ca400a7fcc59d845395c8a070c98ee0b4": {
      "address": "0x3F081B8eF84B3bAeb158A192b6551d0f60f175EE",
      "txHash": "0x7e632ea6c1565eb7419982b947d98f391bc3971633f96e834b50c67ccd43ff94",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sportsAMM",
            "type": "t_contract(ISportsAMM)65524",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:39"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:40"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:42"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:44"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:45"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:46"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:48"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:50"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:51"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:53"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:54"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:56"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:58"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:59"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:61"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:62"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:64"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:65"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:66"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:67"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:69"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)65611",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:71"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:73"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:75"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:77"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:79"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "onlyWhitelistedStakersAllowed",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:81"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedStakers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:83"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:85"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "marketAlreadyExercisedInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:87"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)65524": {
            "label": "contract ISportsAMM"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)65611": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "efe4417e6f6bd6b899e9cf9c124f234ed6f1ddcebfe39cc7fb64596961d1b66c": {
      "address": "0x1e496304Eba76E0A13098950153638ee358776f1",
      "txHash": "0x81daf0eb3489aac57016c7881e26b8d803bb791430879e75f54b909b7c0d75f9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sportsAMM",
            "type": "t_contract(ISportsAMM)4308",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:39"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)470",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:40"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:42"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:44"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:45"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:46"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:48"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:50"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:51"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:53"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:54"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:56"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:58"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:59"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:61"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:62"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:64"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:65"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:66"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:67"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:69"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)4385",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:71"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:73"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:75"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:77"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:79"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "onlyWhitelistedStakersAllowed",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:81"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedStakers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:83"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:85"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "marketAlreadyExercisedInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:87"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)4308": {
            "label": "contract ISportsAMM"
          },
          "t_contract(IERC20Upgradeable)470": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)4385": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b41f7d3ece296fe61c735d8b361e9f31f899bbdb2afc69ed2c117c679bf96691": {
      "address": "0x252033bcff3CFe5be23a09D1Bb4Dc2cb90202c23",
      "txHash": "0x90258e6cd0ddd322e22fd076df70969ddff4514287e4d59a41120c6ab94d85af",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sportsAMM",
            "type": "t_contract(ISportsAMM)66406",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:39"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:40"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:42"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:44"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:45"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:46"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:48"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:50"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:51"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:53"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:54"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:56"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:58"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:59"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:61"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:62"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:64"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:65"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:66"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:67"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:69"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)66493",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:71"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:73"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:75"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:77"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:79"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "onlyWhitelistedStakersAllowed",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:81"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedStakers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:83"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:85"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "marketAlreadyExercisedInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:87"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)66406": {
            "label": "contract ISportsAMM"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)66493": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "825eda3496acea759a9e7e1979570877f774146f5807b134ee956556bdd0df33": {
      "address": "0xD83e4872018328f534ac72F3732CD9DD5913Dd0B",
      "txHash": "0xae4710dbd2b8fb33cccfa967ea2c2be163af0311f98735b64eded382e1c4d754",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:39"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:42"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:46"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:49"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:52"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:56"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:65"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:68"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:71"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:74"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)65635",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:77"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:80"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:83"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)64073",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:86"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:89"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:92"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:95"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:98"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:101"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:104"
          },
          {
            "contract": "SportsAMM",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:107"
          },
          {
            "contract": "SportsAMM",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:110"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:113"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:116"
          },
          {
            "contract": "SportsAMM",
            "label": "sportAmmUtils",
            "type": "t_contract(SportsAMMUtils)60412",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:118"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:121"
          },
          {
            "contract": "SportsAMM",
            "label": "thresholdForOddsUpdate",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:125"
          },
          {
            "contract": "SportsAMM",
            "label": "wrapper",
            "type": "t_contract(ITherundownConsumerWrapper)66240",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:128"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:131"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:134"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSportAndChild",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:137"
          },
          {
            "contract": "SportsAMM",
            "label": "liquidityPool",
            "type": "t_contract(SportAMMLiquidityPool)33179",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:157"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)65635": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)64073": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(SportsAMMUtils)60412": {
            "label": "contract SportsAMMUtils"
          },
          "t_contract(ITherundownConsumerWrapper)66240": {
            "label": "contract ITherundownConsumerWrapper"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(SportAMMLiquidityPool)33179": {
            "label": "contract SportAMMLiquidityPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "22b50dfcb5e0727c4278679d98eb9e43a27dbc3e8c0cb0e7cc27140a23c5b11f": {
      "address": "0x6485d7093398D3136C3558c55d66CbB80bC99db0",
      "txHash": "0x335ff0dc2b45f8721de5bf238071596163baaca3e34314b40deaa99a65887844",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportVault",
            "label": "sportsAMM",
            "type": "t_contract(ISportsAMM)65559",
            "src": "contracts/OvertimeVaults/SportVault.sol:47"
          },
          {
            "contract": "SportVault",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts/OvertimeVaults/SportVault.sol:48"
          },
          {
            "contract": "SportVault",
            "label": "vaultStarted",
            "type": "t_bool",
            "src": "contracts/OvertimeVaults/SportVault.sol:50"
          },
          {
            "contract": "SportVault",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/SportVault.sol:52"
          },
          {
            "contract": "SportVault",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/SportVault.sol:53"
          },
          {
            "contract": "SportVault",
            "label": "roundStartTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/SportVault.sol:54"
          },
          {
            "contract": "SportVault",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/OvertimeVaults/SportVault.sol:56"
          },
          {
            "contract": "SportVault",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/OvertimeVaults/SportVault.sol:57"
          },
          {
            "contract": "SportVault",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/OvertimeVaults/SportVault.sol:59"
          },
          {
            "contract": "SportVault",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/OvertimeVaults/SportVault.sol:60"
          },
          {
            "contract": "SportVault",
            "label": "depositReceipts",
            "type": "t_mapping(t_address,t_struct(DepositReceipt)17396_storage)",
            "src": "contracts/OvertimeVaults/SportVault.sol:61"
          },
          {
            "contract": "SportVault",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/SportVault.sol:63"
          },
          {
            "contract": "SportVault",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/OvertimeVaults/SportVault.sol:65"
          },
          {
            "contract": "SportVault",
            "label": "tradingMarketPositionPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_enum(Position)65393))",
            "src": "contracts/OvertimeVaults/SportVault.sol:66"
          },
          {
            "contract": "SportVault",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/OvertimeVaults/SportVault.sol:67"
          },
          {
            "contract": "SportVault",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/SportVault.sol:69"
          },
          {
            "contract": "SportVault",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/SportVault.sol:70"
          },
          {
            "contract": "SportVault",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/SportVault.sol:72"
          },
          {
            "contract": "SportVault",
            "label": "utilizationRate",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/SportVault.sol:73"
          },
          {
            "contract": "SportVault",
            "label": "capPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/SportVault.sol:75"
          },
          {
            "contract": "SportVault",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/SportVault.sol:77"
          },
          {
            "contract": "SportVault",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/SportVault.sol:79"
          },
          {
            "contract": "SportVault",
            "label": "usersCurrentlyInVault",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/SportVault.sol:80"
          },
          {
            "contract": "SportVault",
            "label": "allocationLimitsPerMarketPerRound",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/SportVault.sol:82"
          },
          {
            "contract": "SportVault",
            "label": "allocationSpentPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/OvertimeVaults/SportVault.sol:84"
          },
          {
            "contract": "SportVault",
            "label": "priceLowerLimit",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/SportVault.sol:86"
          },
          {
            "contract": "SportVault",
            "label": "priceUpperLimit",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/SportVault.sol:87"
          },
          {
            "contract": "SportVault",
            "label": "skewImpactLimit",
            "type": "t_int256",
            "src": "contracts/OvertimeVaults/SportVault.sol:88"
          },
          {
            "contract": "SportVault",
            "label": "minTradeAmount",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/SportVault.sol:90"
          },
          {
            "contract": "SportVault",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)65646",
            "src": "contracts/OvertimeVaults/SportVault.sol:93"
          },
          {
            "contract": "SportVault",
            "label": "allocationSpentInARound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/SportVault.sol:95"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)65559": {
            "label": "contract ISportsAMM"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_struct(DepositReceipt)17396_storage)": {
            "label": "mapping(address => struct SportVault.DepositReceipt)"
          },
          "t_struct(DepositReceipt)17396_storage": {
            "label": "struct SportVault.DepositReceipt",
            "members": [
              {
                "label": "round",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_enum(Position)65393))": {
            "label": "mapping(uint256 => mapping(address => enum ISportsAMM.Position))"
          },
          "t_mapping(t_address,t_enum(Position)65393)": {
            "label": "mapping(address => enum ISportsAMM.Position)"
          },
          "t_enum(Position)65393": {
            "label": "enum ISportsAMM.Position",
            "members": [
              "Home",
              "Away",
              "Draw"
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(IStakingThales)65646": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f72c827711e2b921c05c3f4e60f0e4c03bf810c58f91aa9ff33e1a822aca05a9": {
      "address": "0xF88A3A166c756f9467429D21922A4B60D918E1Ae",
      "txHash": "0x2d851db09a4f0feaec94c44abecc4ff46f4b979d537e9764f5bca051afabcd69",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayVault",
            "label": "parlayAMM",
            "type": "t_contract(IParlayMarketsAMM)64631",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:51"
          },
          {
            "contract": "ParlayVault",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:52"
          },
          {
            "contract": "ParlayVault",
            "label": "vaultStarted",
            "type": "t_bool",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:54"
          },
          {
            "contract": "ParlayVault",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:56"
          },
          {
            "contract": "ParlayVault",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:57"
          },
          {
            "contract": "ParlayVault",
            "label": "roundStartTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:58"
          },
          {
            "contract": "ParlayVault",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:60"
          },
          {
            "contract": "ParlayVault",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:61"
          },
          {
            "contract": "ParlayVault",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:63"
          },
          {
            "contract": "ParlayVault",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:64"
          },
          {
            "contract": "ParlayVault",
            "label": "depositReceipts",
            "type": "t_mapping(t_address,t_struct(DepositReceipt)15429_storage)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:65"
          },
          {
            "contract": "ParlayVault",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:67"
          },
          {
            "contract": "ParlayVault",
            "label": "tradingParlayMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:69"
          },
          {
            "contract": "ParlayVault",
            "label": "isTradingParlayMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:70"
          },
          {
            "contract": "ParlayVault",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:72"
          },
          {
            "contract": "ParlayVault",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:73"
          },
          {
            "contract": "ParlayVault",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:75"
          },
          {
            "contract": "ParlayVault",
            "label": "utilizationRate",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:76"
          },
          {
            "contract": "ParlayVault",
            "label": "maxTradeRate",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:77"
          },
          {
            "contract": "ParlayVault",
            "label": "capPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:79"
          },
          {
            "contract": "ParlayVault",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:81"
          },
          {
            "contract": "ParlayVault",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:83"
          },
          {
            "contract": "ParlayVault",
            "label": "usersCurrentlyInVault",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:84"
          },
          {
            "contract": "ParlayVault",
            "label": "priceLowerLimit",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:86"
          },
          {
            "contract": "ParlayVault",
            "label": "priceUpperLimit",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:87"
          },
          {
            "contract": "ParlayVault",
            "label": "skewImpactLimit",
            "type": "t_int256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:88"
          },
          {
            "contract": "ParlayVault",
            "label": "minTradeAmount",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:90"
          },
          {
            "contract": "ParlayVault",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)65646",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:93"
          },
          {
            "contract": "ParlayVault",
            "label": "allocationSpentInARound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:95"
          },
          {
            "contract": "ParlayVault",
            "label": "marketUsedInRoundCount",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:97"
          },
          {
            "contract": "ParlayVault",
            "label": "maxMarketUsedInRoundCount",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:98"
          }
        ],
        "types": {
          "t_contract(IParlayMarketsAMM)64631": {
            "label": "contract IParlayMarketsAMM"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_struct(DepositReceipt)15429_storage)": {
            "label": "mapping(address => struct ParlayVault.DepositReceipt)"
          },
          "t_struct(DepositReceipt)15429_storage": {
            "label": "struct ParlayVault.DepositReceipt",
            "members": [
              {
                "label": "round",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes32 => bool))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(IStakingThales)65646": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d4abce7b48fc12964c00a1a569d7fe8753126e26d074f8baa6dc6195f78d6e8f": {
      "address": "0xA5bb23E43B154f698b3f7040d5D043474a5426Cd",
      "txHash": "0xca9c4884f78db5fbd57312e3c2d8472942b8069255a76fc54e9e72ed2df5e521",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "durations",
            "type": "t_struct(Durations)22147_storage",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:45"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "capitalRequirement",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:46"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketCreationEnabled",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:48"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "customMarketCreationEnabled",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:49"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "onlyWhitelistedAddressesCanCreateMarkets",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:51"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:52"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:54"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)70947_storage",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:56"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)70947_storage",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:57"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "_migratingManager",
            "type": "t_contract(PositionalMarketManager)23530",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:59"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)65399",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:61"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "sUSD",
            "type": "t_contract(IERC20)4879",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:62"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "positionalMarketFactory",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:64"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:66"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "timeframeBuffer",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:68"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "priceBuffer",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:69"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketsPerOracleKey",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_array(t_address)dyn_storage))",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:71"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketsStrikePrice",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:72"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "onlyAMMMintingAndBurning",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:74"
          }
        ],
        "types": {
          "t_struct(Durations)22147_storage": {
            "label": "struct PositionalMarketManager.Durations",
            "members": [
              {
                "label": "expiryDuration",
                "type": "t_uint256"
              },
              {
                "label": "maxTimeToMaturity",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(AddressSet)70947_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(PositionalMarketManager)23530": {
            "label": "contract PositionalMarketManager"
          },
          "t_contract(IPriceFeed)65399": {
            "label": "contract IPriceFeed"
          },
          "t_contract(IERC20)4879": {
            "label": "contract IERC20"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_array(t_address)dyn_storage))": {
            "label": "mapping(bytes32 => mapping(uint256 => address[]))"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          }
        }
      }
    },
    "8d816511639c90a6119fdc1c14bc8a32eb3f420a877f93c73f94755af1205be5": {
      "address": "0x20547507470e9A6725681214330900B05a95c357",
      "txHash": "0x75575cf280d8cfa83e8938d26d1575a7315488198bdc1774083b5c6a1750ed6e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:59"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:60"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:63"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:64"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:65"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)44108_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:68"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)44119_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:69"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)44128_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:70"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:71"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:72"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:73"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:76"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:77"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:78"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:79"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)65533",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:82"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:83"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:84"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:85"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:86"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)44060",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:89"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:90"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:94"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:95"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:96"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:97"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOnADate",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:98"
          },
          {
            "contract": "TherundownConsumer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)66389",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:100"
          },
          {
            "contract": "TherundownConsumer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)44128_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:101"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsObtainer",
            "type": "t_contract(IGamesOddsObtainer)64544",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:102"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)44108_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)44108_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)44119_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)44119_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)44128_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)44128_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)65533": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)44060": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          },
          "t_contract(ITherundownConsumerVerifier)66389": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(IGamesOddsObtainer)64544": {
            "label": "contract IGamesOddsObtainer"
          }
        }
      }
    },
    "a4c5b1f9eeef339f48e45a1f73da9241eb854d169d3403a08153dc709b12da6f": {
      "address": "0x4D7a6cE55B34a94453080e9b9f7A89D8543C1C4F",
      "txHash": "0x0f2e0f2684e60604ae0c98161c6ae83dd9aac07cddfe44d54edb795014d14995",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesOddsReceiver",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)1376",
            "src": "contracts/SportMarkets/Rundown/GamesOddsReciever.sol:19"
          },
          {
            "contract": "GamesOddsReceiver",
            "label": "obtainer",
            "type": "t_contract(IGamesOddsObtainer)1114",
            "src": "contracts/SportMarkets/Rundown/GamesOddsReciever.sol:20"
          },
          {
            "contract": "GamesOddsReceiver",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsReciever.sol:22"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)1376": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(IGamesOddsObtainer)1114": {
            "label": "contract IGamesOddsObtainer"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "72b75e37f4288f23556fa1464631571ca5f21055a3e2c8605aa58fccd98a0472": {
      "address": "0x31F71B6E97392D23Cf0759E520cD4Db35b5D2dd9",
      "txHash": "0xf5700fc4b559d907e7a078a7acec934fb6e2e0d233ab700d8c37a5c54802122a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)68784",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:32"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)68912",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:33"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)68024",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:34"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)66826_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:37"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)66826_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:38"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:39"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:40"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:41"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "doesSportSupportSpreadAndTotal",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:42"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:45"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:46"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketSpreadChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_int16,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:47"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketTotalChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_uint24,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:48"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:49"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketSread",
            "type": "t_mapping(t_address,t_int16)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:50"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketTotal",
            "type": "t_mapping(t_address,t_uint24)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:51"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveTotalChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:52"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveSpreadChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:53"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "isSpreadChildMarket",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:54"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:55"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "normalizedOddsForMarketFulfilled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:56"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "normalizedOddsForMarket",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:57"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsReceiver",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:58"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)68784": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)68912": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)68024": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)66826_storage)": {
            "label": "mapping(bytes32 => struct IGamesOddsObtainer.GameOdds)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(GameOdds)66826_storage": {
            "label": "struct IGamesOddsObtainer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadHome",
                "type": "t_int16"
              },
              {
                "label": "spreadHomeOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadAway",
                "type": "t_int16"
              },
              {
                "label": "spreadAwayOdds",
                "type": "t_int24"
              },
              {
                "label": "totalOver",
                "type": "t_uint24"
              },
              {
                "label": "totalOverOdds",
                "type": "t_int24"
              },
              {
                "label": "totalUnder",
                "type": "t_uint24"
              },
              {
                "label": "totalUnderOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_int24": {
            "label": "int24"
          },
          "t_int16": {
            "label": "int16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_int16,t_address))": {
            "label": "mapping(address => mapping(int16 => address))"
          },
          "t_mapping(t_int16,t_address)": {
            "label": "mapping(int16 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint24,t_address))": {
            "label": "mapping(address => mapping(uint24 => address))"
          },
          "t_mapping(t_uint24,t_address)": {
            "label": "mapping(uint24 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_int16)": {
            "label": "mapping(address => int16)"
          },
          "t_mapping(t_address,t_uint24)": {
            "label": "mapping(address => uint24)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "a776db6a3396995a2690dd517acdf48c1475f3d92f6260b426830b9253b82af8": {
      "address": "0xfBF1C584223E79289018B6823Ab5fB864B02BB0a",
      "txHash": "0x1af44268c19372f544457a381bf7b8a496347e1fc9894104246d419e3c3155f4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:59"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:60"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:63"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:64"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:65"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)45372_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:68"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)45383_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:69"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)45392_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:70"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:71"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:72"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:73"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:76"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:77"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:78"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:79"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)68024",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:82"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:83"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:84"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:85"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:86"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)45324",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:89"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:90"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:94"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:95"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:96"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:97"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOnADate",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:98"
          },
          {
            "contract": "TherundownConsumer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)68912",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:100"
          },
          {
            "contract": "TherundownConsumer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)45392_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:101"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsObtainer",
            "type": "t_contract(IGamesOddsObtainer)67020",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:102"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)45372_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)45372_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)45383_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)45383_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)45392_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)45392_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)68024": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)45324": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          },
          "t_contract(ITherundownConsumerVerifier)68912": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(IGamesOddsObtainer)67020": {
            "label": "contract IGamesOddsObtainer"
          }
        }
      }
    },
    "1df9dd287934a5c9cadbdaa1f5fcb78f866e4446fe2941230903da6febedf850": {
      "address": "0x47Fd1c6B781252990863f4125Cf11415c4A79f57",
      "txHash": "0xe27b2b989dd972f5bb81508d9874f6d29f028308a11a5c1d30cca4c6fa8f2d2e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "expiryDuration",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:31"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "marketCreationEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:33"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "customMarketCreationEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:34"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:36"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)79978_storage",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:38"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)79978_storage",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:39"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_migratingManager",
            "type": "t_contract(SportPositionalMarketManager)63826",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:41"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sUSD",
            "type": "t_contract(IERC20)4879",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:43"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:45"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sportPositionalMarketFactory",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:46"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:47"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:48"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:49"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "cancelTimeout",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:50"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedCancelAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:51"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "oddsObtainer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:52"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "isDoubleChance",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:54"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "isDoubleChanceSupported",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:55"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "doubleChanceMarketsByParent",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:56"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "doesSportSupportDoubleChance",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:57"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)79978_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(SportPositionalMarketManager)63826": {
            "label": "contract SportPositionalMarketManager"
          },
          "t_contract(IERC20)4879": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          }
        }
      }
    },
    "2884e7892ce56d40cb2c54d1e2d50b08fc1b81c13a3e745cde132e7b4a7f850b": {
      "address": "0x4aD6Bc23486D1e6F8caf9b02E702D801cAc04b3b",
      "txHash": "0x8cb9428fdc129788e950836d2eb478e3e8c591a4440b7f9bff4034117f63ea62",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "AmmVault",
            "label": "thalesAMM",
            "type": "t_contract(IThalesAMM)66157",
            "src": "contracts\\Vaults\\AmmVault.sol:47"
          },
          {
            "contract": "AmmVault",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\Vaults\\AmmVault.sol:48"
          },
          {
            "contract": "AmmVault",
            "label": "vaultStarted",
            "type": "t_bool",
            "src": "contracts\\Vaults\\AmmVault.sol:50"
          },
          {
            "contract": "AmmVault",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\Vaults\\AmmVault.sol:52"
          },
          {
            "contract": "AmmVault",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\Vaults\\AmmVault.sol:53"
          },
          {
            "contract": "AmmVault",
            "label": "roundStartTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Vaults\\AmmVault.sol:54"
          },
          {
            "contract": "AmmVault",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\Vaults\\AmmVault.sol:56"
          },
          {
            "contract": "AmmVault",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\Vaults\\AmmVault.sol:57"
          },
          {
            "contract": "AmmVault",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Vaults\\AmmVault.sol:59"
          },
          {
            "contract": "AmmVault",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Vaults\\AmmVault.sol:60"
          },
          {
            "contract": "AmmVault",
            "label": "depositReceipts",
            "type": "t_mapping(t_address,t_struct(DepositReceipt)62742_storage)",
            "src": "contracts\\Vaults\\AmmVault.sol:61"
          },
          {
            "contract": "AmmVault",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Vaults\\AmmVault.sol:63"
          },
          {
            "contract": "AmmVault",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\Vaults\\AmmVault.sol:65"
          },
          {
            "contract": "AmmVault",
            "label": "tradingMarketPositionPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_enum(Position)66033))",
            "src": "contracts\\Vaults\\AmmVault.sol:66"
          },
          {
            "contract": "AmmVault",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\Vaults\\AmmVault.sol:67"
          },
          {
            "contract": "AmmVault",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Vaults\\AmmVault.sol:69"
          },
          {
            "contract": "AmmVault",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Vaults\\AmmVault.sol:70"
          },
          {
            "contract": "AmmVault",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\Vaults\\AmmVault.sol:72"
          },
          {
            "contract": "AmmVault",
            "label": "utilizationRate",
            "type": "t_uint256",
            "src": "contracts\\Vaults\\AmmVault.sol:73"
          },
          {
            "contract": "AmmVault",
            "label": "capPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Vaults\\AmmVault.sol:75"
          },
          {
            "contract": "AmmVault",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\Vaults\\AmmVault.sol:77"
          },
          {
            "contract": "AmmVault",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\Vaults\\AmmVault.sol:79"
          },
          {
            "contract": "AmmVault",
            "label": "usersCurrentlyInVault",
            "type": "t_uint256",
            "src": "contracts\\Vaults\\AmmVault.sol:80"
          },
          {
            "contract": "AmmVault",
            "label": "allocationLimitsPerMarketPerRound",
            "type": "t_uint256",
            "src": "contracts\\Vaults\\AmmVault.sol:82"
          },
          {
            "contract": "AmmVault",
            "label": "allocationSpentPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Vaults\\AmmVault.sol:84"
          },
          {
            "contract": "AmmVault",
            "label": "priceLowerLimit",
            "type": "t_uint256",
            "src": "contracts\\Vaults\\AmmVault.sol:86"
          },
          {
            "contract": "AmmVault",
            "label": "priceUpperLimit",
            "type": "t_uint256",
            "src": "contracts\\Vaults\\AmmVault.sol:87"
          },
          {
            "contract": "AmmVault",
            "label": "skewImpactLimit",
            "type": "t_int256",
            "src": "contracts\\Vaults\\AmmVault.sol:88"
          },
          {
            "contract": "AmmVault",
            "label": "minTradeAmount",
            "type": "t_uint256",
            "src": "contracts\\Vaults\\AmmVault.sol:90"
          },
          {
            "contract": "AmmVault",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)66027",
            "src": "contracts\\Vaults\\AmmVault.sol:93"
          },
          {
            "contract": "AmmVault",
            "label": "allocationSpentInARound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Vaults\\AmmVault.sol:95"
          }
        ],
        "types": {
          "t_contract(IThalesAMM)66157": {
            "label": "contract IThalesAMM"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_struct(DepositReceipt)62742_storage)": {
            "label": "mapping(address => struct AmmVault.DepositReceipt)"
          },
          "t_struct(DepositReceipt)62742_storage": {
            "label": "struct AmmVault.DepositReceipt",
            "members": [
              {
                "label": "round",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_enum(Position)66033))": {
            "label": "mapping(uint256 => mapping(address => enum IThalesAMM.Position))"
          },
          "t_mapping(t_address,t_enum(Position)66033)": {
            "label": "mapping(address => enum IThalesAMM.Position)"
          },
          "t_enum(Position)66033": {
            "label": "enum IThalesAMM.Position",
            "members": [
              "Up",
              "Down"
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(IStakingThales)66027": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0c4f689bd4ea54d8c83abf2b4337dca9f49ece9387f1f289f7d4e2eadffeaec2": {
      "address": "0xb463c8FCff74cfA617B4e213943D5d1AD107aD36",
      "txHash": "0x6f78debd51f662c2f57863e6f31e53ddfdacba4c9c82918a448293b675560184",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sportsAMM",
            "type": "t_contract(ISportsAMM)66456",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:39"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:40"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:42"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:44"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:45"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:46"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:48"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:50"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:51"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:53"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:54"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:56"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:58"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:59"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:61"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:62"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:64"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:65"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:66"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:67"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:69"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)66543",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:71"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:73"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:75"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:77"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:79"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "onlyWhitelistedStakersAllowed",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:81"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedStakers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:83"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:85"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "marketAlreadyExercisedInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:87"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundClosingPrepared",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:89"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)66456": {
            "label": "contract ISportsAMM"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)66543": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f9cdb154f0cf6ba0e67577017b388916a628ef4170ec43ac095a3847cde618dd": {
      "address": "0x2C68406B370F537DBFDfC6EDdF4585cA48364876",
      "txHash": "0x6507c4492080de4ba0e93c086bc78babbf5ce2b5328d7d4c4d936cc0499d09b7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "durations",
            "type": "t_struct(Durations)23167_storage",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:45"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "capitalRequirement",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:46"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketCreationEnabled",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:48"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "customMarketCreationEnabled",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:49"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "onlyWhitelistedAddressesCanCreateMarkets",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:51"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:52"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:54"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)73354_storage",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:56"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)73354_storage",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:57"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "_migratingManager",
            "type": "t_contract(PositionalMarketManager)24601",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:59"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)67790",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:61"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "sUSD",
            "type": "t_contract(IERC20)4879",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:62"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "positionalMarketFactory",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:64"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:66"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "timeframeBuffer",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:68"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "priceBuffer",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:69"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketsPerOracleKey",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_array(t_address)dyn_storage))",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:71"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketsStrikePrice",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:72"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "onlyAMMMintingAndBurning",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:74"
          }
        ],
        "types": {
          "t_struct(Durations)23167_storage": {
            "label": "struct PositionalMarketManager.Durations",
            "members": [
              {
                "label": "expiryDuration",
                "type": "t_uint256"
              },
              {
                "label": "maxTimeToMaturity",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(AddressSet)73354_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(PositionalMarketManager)24601": {
            "label": "contract PositionalMarketManager"
          },
          "t_contract(IPriceFeed)67790": {
            "label": "contract IPriceFeed"
          },
          "t_contract(IERC20)4879": {
            "label": "contract IERC20"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_array(t_address)dyn_storage))": {
            "label": "mapping(bytes32 => mapping(uint256 => address[]))"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          }
        }
      }
    },
    "d94a6b55ed436ca5188a18a10dce63f6538323b978c104ce6cc0f286d4878cf4": {
      "address": "0x0F32dc40B8d26Fb7D5104bC6ca639C1D8800bfF0",
      "txHash": "0xff46944a7ffcaf345d7122b29472fdf7841dbf8946b262795fda983bd7cf8b2f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "thalesAmm",
            "type": "t_contract(IThalesAMM)77310",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:39"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "rangedAmmFee",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:41"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "createdRangedMarkets",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:43"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)82159_storage",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:44"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "rangedMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:46"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "rangedPositionMastercopy",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:47"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:49"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "spentOnMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:51"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "capPerMarket",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:54"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "minSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:56"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "maxSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:57"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:59"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:60"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "minimalDifBetweenStrikes",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:62"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)77180",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:64"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "maximalDifBetweenStrikes",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:66"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:68"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:69"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)75517",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:71"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:73"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:74"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:75"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:77"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:78"
          }
        ],
        "types": {
          "t_contract(IThalesAMM)77310": {
            "label": "contract IThalesAMM"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_struct(AddressSet)82159_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)77180": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)75517": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8bc5cc593eb7e478aa0b1ea9c57f68ddee2f7a70354e12b2ea2872aed2ff907d": {
      "address": "0xcc93D3Da6b20D305D7588fb9bc6A35992952C940",
      "txHash": "0xd5bc0800d47ba24d9fba8c8d5f8cb6bbd5d4fb01fc123f30efdc25642ef061cf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "PositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:85"
          },
          {
            "contract": "PositionalMarketData",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:86"
          },
          {
            "contract": "PositionalMarketData",
            "label": "rangedMarketsAMM",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:87"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "375bfa4eb08d7f2ac70061e5d8eb2b9780fd02d741b6ceba7a45c6e7fcf581f4": {
      "address": "0xDa00B46a924dA3019b2F5fC13E770956F75C04C7",
      "txHash": "0xa525ff5337cb6f24fef5ec37277ae834129c00c27fd41807e6ba5f83409fc23b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sportsAMM",
            "type": "t_contract(ISportsAMM)4336",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:39"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)470",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:40"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:42"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:44"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:45"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:46"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:48"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:50"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:51"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:53"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:54"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:56"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:58"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:59"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:61"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:62"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:64"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:65"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:66"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:67"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:69"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)4413",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:71"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:73"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:75"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:77"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:79"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "onlyWhitelistedStakersAllowed",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:81"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedStakers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:83"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:85"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "marketAlreadyExercisedInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:87"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundClosingPrepared",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:89"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)4336": {
            "label": "contract ISportsAMM"
          },
          "t_contract(IERC20Upgradeable)470": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)4413": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1b1d28b5a11b7f1314b3f18c8499dd7f2b1cfd373af3596380d0950518e81a8f": {
      "address": "0x13AC74A68C898677aA14ce1D8B3c47B6BBCECE0E",
      "txHash": "0xc0e0e96049b608c16c6bbcdad4390a9d86e68c5d18ce1fd65b8aa8fd01f52e60",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sportsAMM",
            "type": "t_contract(ISportsAMM)67950",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:39"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:40"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:42"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:44"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:45"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:46"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:48"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:50"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:51"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:53"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:54"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:56"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:58"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:59"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:61"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:62"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:64"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:65"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:66"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:67"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:69"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)68037",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:71"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:73"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:75"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:77"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:79"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "onlyWhitelistedStakersAllowed",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:81"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedStakers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:83"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:85"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "marketAlreadyExercisedInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:87"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundClosingPrepared",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:89"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersProcessedInRound",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:91"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)67950": {
            "label": "contract ISportsAMM"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)68037": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "28752737facfae8d201a01ccf6837b937131ef26d11400c001949e2bdc0c1887": {
      "address": "0x832E1A314A1780260cD698C519332CCad7bA322d",
      "txHash": "0x774cf60b9a3c9342dcdd9b7207032359d1ea2df6cb04f82d72e17c1f69d4c969",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "0715ddb50ff8a94be2f8c2c987504289d2913b4307f700333a860fcddaf7c2f1": {
      "address": "0xbe425C88aED5f38d8F34d4BaFe43015284892E5d",
      "txHash": "0xe5a580e4b6b82b69a49a7edbbf1053469f85ff0673bac71b638b9746f0adf79c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "785cdb1eed51aae93a24b60329ba84ff2a208b120152ec6769ce46df4c24f781": {
      "address": "0x170a5714112daEfF20E798B6e92e25B86Ea603C1",
      "txHash": "0xc7887e8ad7e015c6bfe95116b57775bfd89023e001dd7d34e6d8b2b8655a3cf6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ParlayMarketData",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)83665_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:16"
          },
          {
            "contract": "ParlayMarketData",
            "label": "_parlaysInGamePosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)83665_storage))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:22"
          },
          {
            "contract": "ParlayMarketData",
            "label": "gameAddressPositionParlay",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:24"
          },
          {
            "contract": "ParlayMarketData",
            "label": "numOfParlaysInGamePosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:25"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayDetails",
            "type": "t_mapping(t_address,t_struct(ParlayDetails)46828_storage)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:27"
          },
          {
            "contract": "ParlayMarketData",
            "label": "userParlays",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:28"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayOwner",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:29"
          },
          {
            "contract": "ParlayMarketData",
            "label": "userNumOfParlays",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:30"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayMarketsAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:31"
          }
        ],
        "types": {
          "t_struct(AddressSet)83665_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)83665_storage))": {
            "label": "mapping(address => mapping(uint256 => struct AddressSetLib.AddressSet))"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)83665_storage)": {
            "label": "mapping(uint256 => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))": {
            "label": "mapping(address => mapping(uint256 => mapping(uint256 => address)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint256 => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(ParlayDetails)46828_storage)": {
            "label": "mapping(address => struct ParlayMarketData.ParlayDetails)"
          },
          "t_struct(ParlayDetails)46828_storage": {
            "label": "struct ParlayMarketData.ParlayDetails",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "sUSDPaid",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "208b0777c68b4065665d6cadcfd0da67cd5f63ca33633e72ba1e2ff835c3daaa": {
      "address": "0xc4Cd9F1EA63946d58b8E156fa5c6A4e3171C36B5",
      "txHash": "0xcfb621feef5dcaa5d3a8f5731b4a96d12800ed2cbd7efe5e1885b76bc5da5fad",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "OvertimeVoucherEscrow",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts/SportMarkets/Voucher/OvertimeVoucherEscrow.sol:24"
          },
          {
            "contract": "OvertimeVoucherEscrow",
            "label": "overtimeVoucher",
            "type": "t_contract(OvertimeVoucher)61963",
            "src": "contracts/SportMarkets/Voucher/OvertimeVoucherEscrow.sol:27"
          },
          {
            "contract": "OvertimeVoucherEscrow",
            "label": "whitelistedAddressesPerPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/SportMarkets/Voucher/OvertimeVoucherEscrow.sol:30"
          },
          {
            "contract": "OvertimeVoucherEscrow",
            "label": "addressClaimedVoucherPerPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/SportMarkets/Voucher/OvertimeVoucherEscrow.sol:33"
          },
          {
            "contract": "OvertimeVoucherEscrow",
            "label": "voucherAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Voucher/OvertimeVoucherEscrow.sol:36"
          },
          {
            "contract": "OvertimeVoucherEscrow",
            "label": "periodEnd",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Voucher/OvertimeVoucherEscrow.sol:39"
          },
          {
            "contract": "OvertimeVoucherEscrow",
            "label": "period",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Voucher/OvertimeVoucherEscrow.sol:42"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(OvertimeVoucher)61963": {
            "label": "contract OvertimeVoucher"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "66f7ee84bf93eea0032f69608d39bd046002414b36c36d30b10ae4b248632e1f": {
      "address": "0x339e4557cD9c6F7EA0536D80418E692B55B8A33D",
      "txHash": "0x85b78c26425a7dc1f73227508c7bd2868e33cd01d87d86c77314ccb28b3a39e9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayVault",
            "label": "parlayAMM",
            "type": "t_contract(IParlayMarketsAMM)12088",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:51"
          },
          {
            "contract": "ParlayVault",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)1472",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:52"
          },
          {
            "contract": "ParlayVault",
            "label": "vaultStarted",
            "type": "t_bool",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:54"
          },
          {
            "contract": "ParlayVault",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:56"
          },
          {
            "contract": "ParlayVault",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:57"
          },
          {
            "contract": "ParlayVault",
            "label": "roundStartTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:58"
          },
          {
            "contract": "ParlayVault",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:60"
          },
          {
            "contract": "ParlayVault",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:61"
          },
          {
            "contract": "ParlayVault",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:63"
          },
          {
            "contract": "ParlayVault",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:64"
          },
          {
            "contract": "ParlayVault",
            "label": "depositReceipts",
            "type": "t_mapping(t_address,t_struct(DepositReceipt)2015_storage)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:65"
          },
          {
            "contract": "ParlayVault",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:67"
          },
          {
            "contract": "ParlayVault",
            "label": "tradingParlayMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:69"
          },
          {
            "contract": "ParlayVault",
            "label": "isTradingParlayMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:70"
          },
          {
            "contract": "ParlayVault",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:72"
          },
          {
            "contract": "ParlayVault",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:73"
          },
          {
            "contract": "ParlayVault",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:75"
          },
          {
            "contract": "ParlayVault",
            "label": "utilizationRate",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:76"
          },
          {
            "contract": "ParlayVault",
            "label": "maxTradeRate",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:77"
          },
          {
            "contract": "ParlayVault",
            "label": "capPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:79"
          },
          {
            "contract": "ParlayVault",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:81"
          },
          {
            "contract": "ParlayVault",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:83"
          },
          {
            "contract": "ParlayVault",
            "label": "usersCurrentlyInVault",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:84"
          },
          {
            "contract": "ParlayVault",
            "label": "priceLowerLimit",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:86"
          },
          {
            "contract": "ParlayVault",
            "label": "priceUpperLimit",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:87"
          },
          {
            "contract": "ParlayVault",
            "label": "skewImpactLimit",
            "type": "t_int256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:88"
          },
          {
            "contract": "ParlayVault",
            "label": "minTradeAmount",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:90"
          },
          {
            "contract": "ParlayVault",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)13047",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:93"
          },
          {
            "contract": "ParlayVault",
            "label": "allocationSpentInARound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:95"
          },
          {
            "contract": "ParlayVault",
            "label": "marketUsedInRoundCount",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:97"
          },
          {
            "contract": "ParlayVault",
            "label": "maxMarketUsedInRoundCount",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:98"
          }
        ],
        "types": {
          "t_contract(IParlayMarketsAMM)12088": {
            "label": "contract IParlayMarketsAMM"
          },
          "t_contract(IERC20Upgradeable)1472": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_struct(DepositReceipt)2015_storage)": {
            "label": "mapping(address => struct ParlayVault.DepositReceipt)"
          },
          "t_struct(DepositReceipt)2015_storage": {
            "label": "struct ParlayVault.DepositReceipt",
            "members": [
              {
                "label": "round",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes32 => bool))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(IStakingThales)13047": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2d2f0be1436bb03afff0ca4efefad5ad306a1210bb499f70928736e16c103c83": {
      "address": "0xFd6bB73086686CFc2980B61Dc6F964930763AAd3",
      "txHash": "0x0d0ffd0cd3bf0babd2d79891142067b393c46f56ce8aab2feaa5f5e8dc77a2e8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayVault",
            "label": "parlayAMM",
            "type": "t_contract(IParlayMarketsAMM)12206",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:51"
          },
          {
            "contract": "ParlayVault",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)1472",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:52"
          },
          {
            "contract": "ParlayVault",
            "label": "vaultStarted",
            "type": "t_bool",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:54"
          },
          {
            "contract": "ParlayVault",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:56"
          },
          {
            "contract": "ParlayVault",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:57"
          },
          {
            "contract": "ParlayVault",
            "label": "roundStartTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:58"
          },
          {
            "contract": "ParlayVault",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:60"
          },
          {
            "contract": "ParlayVault",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:61"
          },
          {
            "contract": "ParlayVault",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:63"
          },
          {
            "contract": "ParlayVault",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:64"
          },
          {
            "contract": "ParlayVault",
            "label": "depositReceipts",
            "type": "t_mapping(t_address,t_struct(DepositReceipt)2015_storage)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:65"
          },
          {
            "contract": "ParlayVault",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:67"
          },
          {
            "contract": "ParlayVault",
            "label": "tradingParlayMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:69"
          },
          {
            "contract": "ParlayVault",
            "label": "isTradingParlayMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:70"
          },
          {
            "contract": "ParlayVault",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:72"
          },
          {
            "contract": "ParlayVault",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:73"
          },
          {
            "contract": "ParlayVault",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:75"
          },
          {
            "contract": "ParlayVault",
            "label": "utilizationRate",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:76"
          },
          {
            "contract": "ParlayVault",
            "label": "maxTradeRate",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:77"
          },
          {
            "contract": "ParlayVault",
            "label": "capPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:79"
          },
          {
            "contract": "ParlayVault",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:81"
          },
          {
            "contract": "ParlayVault",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:83"
          },
          {
            "contract": "ParlayVault",
            "label": "usersCurrentlyInVault",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:84"
          },
          {
            "contract": "ParlayVault",
            "label": "priceLowerLimit",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:86"
          },
          {
            "contract": "ParlayVault",
            "label": "priceUpperLimit",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:87"
          },
          {
            "contract": "ParlayVault",
            "label": "skewImpactLimit",
            "type": "t_int256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:88"
          },
          {
            "contract": "ParlayVault",
            "label": "minTradeAmount",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:90"
          },
          {
            "contract": "ParlayVault",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)13165",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:93"
          },
          {
            "contract": "ParlayVault",
            "label": "allocationSpentInARound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:95"
          },
          {
            "contract": "ParlayVault",
            "label": "marketUsedInRoundCount",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:97"
          },
          {
            "contract": "ParlayVault",
            "label": "maxMarketUsedInRoundCount",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:98"
          },
          {
            "contract": "ParlayVault",
            "label": "marketsProcessedInRound",
            "type": "t_uint256",
            "src": "contracts/OvertimeVaults/ParlayVault.sol:100"
          }
        ],
        "types": {
          "t_contract(IParlayMarketsAMM)12206": {
            "label": "contract IParlayMarketsAMM"
          },
          "t_contract(IERC20Upgradeable)1472": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_struct(DepositReceipt)2015_storage)": {
            "label": "mapping(address => struct ParlayVault.DepositReceipt)"
          },
          "t_struct(DepositReceipt)2015_storage": {
            "label": "struct ParlayVault.DepositReceipt",
            "members": [
              {
                "label": "round",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes32 => bool))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(IStakingThales)13165": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2336f1bc2b7c02eb67f6a1e2ddafda1f8ec021ad604281fa13978d289dbe891b": {
      "address": "0xCDe481B923F1b1595d10d62BBadf19F8fA61A941",
      "txHash": "0xc7413a6026ca934c6778503e181dcda7144f41af88e7506493414f0f879e4a76",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:72"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:73"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "oddsObtainer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:74"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "consumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:75"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "voucherEscrow",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:76"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0088b498df35e84482e2a33fbc2a696232c570fe4b6af85718dc5f3f799cc402": {
      "address": "0x75a700Ad814744d8e8Dc0b114b4C266Aeab1dd01",
      "txHash": "0x25330b69c4244a0727c0bf61f4e35d513c987267ed0a677fb697c160a156df02",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts/SportMarkets/SportsAMM.sol:39"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:42"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:46"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:49"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:52"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:56"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:65"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:68"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:71"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:74"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)68277",
            "src": "contracts/SportMarkets/SportsAMM.sol:77"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:80"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:83"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)66675",
            "src": "contracts/SportMarkets/SportsAMM.sol:86"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:89"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:92"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:95"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportsAMM.sol:98"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:101"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:104"
          },
          {
            "contract": "SportsAMM",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:107"
          },
          {
            "contract": "SportsAMM",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:110"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:113"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:116"
          },
          {
            "contract": "SportsAMM",
            "label": "sportAmmUtils",
            "type": "t_contract(SportsAMMUtils)62387",
            "src": "contracts/SportMarkets/SportsAMM.sol:118"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:121"
          },
          {
            "contract": "SportsAMM",
            "label": "thresholdForOddsUpdate",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:125"
          },
          {
            "contract": "SportsAMM",
            "label": "wrapper",
            "type": "t_contract(ITherundownConsumerWrapper)68891",
            "src": "contracts/SportMarkets/SportsAMM.sol:128"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:131"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:134"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSportAndChild",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/SportMarkets/SportsAMM.sol:137"
          },
          {
            "contract": "SportsAMM",
            "label": "liquidityPool",
            "type": "t_contract(SportAMMLiquidityPool)33825",
            "src": "contracts/SportMarkets/SportsAMM.sol:157"
          },
          {
            "contract": "SportsAMM",
            "label": "minSpreadPerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/SportMarkets/SportsAMM.sol:160"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)68277": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)66675": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(SportsAMMUtils)62387": {
            "label": "contract SportsAMMUtils"
          },
          "t_contract(ITherundownConsumerWrapper)68891": {
            "label": "contract ITherundownConsumerWrapper"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(SportAMMLiquidityPool)33825": {
            "label": "contract SportAMMLiquidityPool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d36a7637b8d54442ce520799df7c340c8000f8485b65f2b12a316e7b951da716": {
      "address": "0x5C47D917B3B8187B4922043fdB81778a71DE7e2e",
      "txHash": "0x7fa0273814ecca078e4d4463b9f143a37c881c111ec49d71924b603f64560a96",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sportsAMM",
            "type": "t_contract(ISportsAMM)74781",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:40"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:41"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:43"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:45"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:46"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:47"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:49"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:51"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:52"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:54"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:55"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:57"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:59"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:60"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:62"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:63"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:65"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:66"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:67"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:68"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:70"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)74868",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:72"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:74"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:76"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:78"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:80"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "onlyWhitelistedStakersAllowed",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:82"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedStakers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:84"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:86"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "marketAlreadyExercisedInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:88"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundClosingPrepared",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:90"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersProcessedInRound",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:92"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)74781": {
            "label": "contract ISportsAMM"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)74868": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "994137342ada1cb0ad11e532e5bbd8cebae351f0325674a38dfe546e1e93cdfe": {
      "address": "0xFe3Bf99bc7aBe380459Fbab5f4E0BdC61A040668",
      "txHash": "0xae1d03b38dae3e705b86fa2454314159629ebfa7c12bc46cb7c2c1828b6ca66e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "4b966c85d14b065a3973945a3b5ecab1479cad444a08665e5333328ccf786420": {
      "address": "0xffEC5E2A46B127D786297f3b73c962701566a6E0",
      "txHash": "0x50f4844f2773e2a0d658eb3fc8ddbfc489475053cd63c3b5953267eaa8d7e77c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyPausable.sol:12"
          },
          {
            "contract": "StakingData",
            "label": "stakingThales",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingData.sol:62"
          },
          {
            "contract": "StakingData",
            "label": "escrowThales",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingData.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8092378d0ddd5eb625b955093b0d0d9bbfe684f833f1eaa3de38c75b2c75e60a": {
      "address": "0x271f1783ea8FA1a047bd6cf244ba6Ff7eA11Fe64",
      "txHash": "0xbfe08bd7f8425772a3070e50da5cda72aae17ebf495d03e192a823efc5e1837e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)4133",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:32"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)4261",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:33"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)3871",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:34"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)2982_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:37"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)2982_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:38"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:39"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:40"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:41"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "doesSportSupportSpreadAndTotal",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:42"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:45"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:46"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketSpreadChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_int16,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:47"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketTotalChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_uint24,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:48"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:49"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketSread",
            "type": "t_mapping(t_address,t_int16)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:50"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketTotal",
            "type": "t_mapping(t_address,t_uint24)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:51"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveTotalChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:52"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveSpreadChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:53"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "isSpreadChildMarket",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:54"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:55"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "normalizedOddsForMarketFulfilled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:56"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "normalizedOddsForMarket",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:57"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsReceiver",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:58"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)4133": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)4261": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)3871": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)2982_storage)": {
            "label": "mapping(bytes32 => struct IGamesOddsObtainer.GameOdds)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(GameOdds)2982_storage": {
            "label": "struct IGamesOddsObtainer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadHome",
                "type": "t_int16"
              },
              {
                "label": "spreadHomeOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadAway",
                "type": "t_int16"
              },
              {
                "label": "spreadAwayOdds",
                "type": "t_int24"
              },
              {
                "label": "totalOver",
                "type": "t_uint24"
              },
              {
                "label": "totalOverOdds",
                "type": "t_int24"
              },
              {
                "label": "totalUnder",
                "type": "t_uint24"
              },
              {
                "label": "totalUnderOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_int24": {
            "label": "int24"
          },
          "t_int16": {
            "label": "int16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_int16,t_address))": {
            "label": "mapping(address => mapping(int16 => address))"
          },
          "t_mapping(t_int16,t_address)": {
            "label": "mapping(int16 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint24,t_address))": {
            "label": "mapping(address => mapping(uint24 => address))"
          },
          "t_mapping(t_uint24,t_address)": {
            "label": "mapping(uint24 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_int16)": {
            "label": "mapping(address => int16)"
          },
          "t_mapping(t_address,t_uint24)": {
            "label": "mapping(address => uint24)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "f7d4ec6be99aa9e7fb8128c109f8ca5e4f2b781a3a3b3fe091d4a6f9a87af28b": {
      "address": "0x7C7F016385Fd4F4995f4EeF095107B567ec52292",
      "txHash": "0xd1317f0513adc22c4640b73a7eaed70f0cf5a301ad9aa8a10bbbf2ec0964f456",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:59"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:60"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:63"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:64"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:65"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)45394_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:68"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)45405_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:69"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)45414_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:70"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:71"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:72"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:73"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:76"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:77"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:78"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:79"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)68058",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:82"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:83"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:84"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:85"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:86"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)45346",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:89"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:90"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:94"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:95"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:96"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:97"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOnADate",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:98"
          },
          {
            "contract": "TherundownConsumer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)68946",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:100"
          },
          {
            "contract": "TherundownConsumer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)45414_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:101"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsObtainer",
            "type": "t_contract(IGamesOddsObtainer)67054",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:102"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)45394_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)45394_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)45405_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)45405_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)45414_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)45414_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)68058": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)45346": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          },
          "t_contract(ITherundownConsumerVerifier)68946": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(IGamesOddsObtainer)67054": {
            "label": "contract IGamesOddsObtainer"
          }
        }
      }
    },
    "12528e0bc10843967e3cc5c297ee08fd75ae579d04123fa860c88f3e7e0f2706": {
      "address": "0xC66DF4Fd01AbA63E237F06839882Fe0Ccf5fb48E",
      "txHash": "0xb45b4fd1077ddae25ecbf08be15ce890f24f9f5b98fe5aa7bec29324aac1bedd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)548",
            "src": "contracts/SportMarkets/SportsAMM.sol:39"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:42"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:46"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:49"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:52"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:56"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:65"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:68"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:71"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:74"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)10085",
            "src": "contracts/SportMarkets/SportsAMM.sol:77"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:80"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:83"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)9103",
            "src": "contracts/SportMarkets/SportsAMM.sol:86"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:89"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:92"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:95"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportsAMM.sol:98"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:101"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:104"
          },
          {
            "contract": "SportsAMM",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:107"
          },
          {
            "contract": "SportsAMM",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:110"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:113"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:116"
          },
          {
            "contract": "SportsAMM",
            "label": "sportAmmUtils",
            "type": "t_contract(SportsAMMUtils)9076",
            "src": "contracts/SportMarkets/SportsAMM.sol:118"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:121"
          },
          {
            "contract": "SportsAMM",
            "label": "thresholdForOddsUpdate",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:125"
          },
          {
            "contract": "SportsAMM",
            "label": "wrapper",
            "type": "t_contract(ITherundownConsumerWrapper)10355",
            "src": "contracts/SportMarkets/SportsAMM.sol:128"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:131"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:134"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSportAndChild",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/SportMarkets/SportsAMM.sol:137"
          },
          {
            "contract": "SportsAMM",
            "label": "liquidityPool",
            "type": "t_contract(SportAMMLiquidityPool)3624",
            "src": "contracts/SportMarkets/SportsAMM.sol:157"
          },
          {
            "contract": "SportsAMM",
            "label": "minSpreadPerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/SportMarkets/SportsAMM.sol:160"
          },
          {
            "contract": "SportsAMM",
            "label": "isMarketForSportOnePositional",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/SportsAMM.sol:163"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)548": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)10085": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)9103": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(SportsAMMUtils)9076": {
            "label": "contract SportsAMMUtils"
          },
          "t_contract(ITherundownConsumerWrapper)10355": {
            "label": "contract ITherundownConsumerWrapper"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(SportAMMLiquidityPool)3624": {
            "label": "contract SportAMMLiquidityPool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "96cd8ee3f36e2601312f4eedfa1dbdef9b58d86926a7c330cfa04fd5aa238028": {
      "address": "0xe989358Ecaa4c040214B86c2C4847b9ae6D7b329",
      "txHash": "0x0c020a3cbee378807e3e34c3afa392e283dcb12a926bd895e550700023a6697a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:59"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:60"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:63"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:64"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:65"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)917_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:68"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)928_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:69"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)937_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:70"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:71"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:72"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:73"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:76"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:77"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:78"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:79"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)4379",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:82"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:83"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:84"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:85"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:86"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)869",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:89"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:90"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:94"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:95"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:96"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:97"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOnADate",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:98"
          },
          {
            "contract": "TherundownConsumer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)4507",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:100"
          },
          {
            "contract": "TherundownConsumer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)937_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:101"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsObtainer",
            "type": "t_contract(IGamesOddsObtainer)3693",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:102"
          },
          {
            "contract": "TherundownConsumer",
            "label": "maxNumberOfMarketsToResolve",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:103"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)917_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)917_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)928_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)928_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)937_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)937_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)4379": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)869": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          },
          "t_contract(ITherundownConsumerVerifier)4507": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(IGamesOddsObtainer)3693": {
            "label": "contract IGamesOddsObtainer"
          }
        }
      }
    },
    "6da0226c5ee779c788297e9b1f1fdf0335e9fbf23f663996f91193d8dbe295e1": {
      "address": "0xda2981E2955fFC69f470fb9167Ca914d510c799b",
      "txHash": "0xb78a9fbf376d24d1e0c5c97680cf77225df8772567488a1162d40571fe290403",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesQueue",
            "label": "gamesCreateQueue",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:16"
          },
          {
            "contract": "GamesQueue",
            "label": "existingGamesInCreatedQueue",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:17"
          },
          {
            "contract": "GamesQueue",
            "label": "firstCreated",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:18"
          },
          {
            "contract": "GamesQueue",
            "label": "lastCreated",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:19"
          },
          {
            "contract": "GamesQueue",
            "label": "gameStartPerGameId",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:20"
          },
          {
            "contract": "GamesQueue",
            "label": "unproccessedGames",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:23"
          },
          {
            "contract": "GamesQueue",
            "label": "unproccessedGamesIndex",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:24"
          },
          {
            "contract": "GamesQueue",
            "label": "gamesResolvedQueue",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:25"
          },
          {
            "contract": "GamesQueue",
            "label": "existingGamesInResolvedQueue",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:26"
          },
          {
            "contract": "GamesQueue",
            "label": "firstResolved",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:27"
          },
          {
            "contract": "GamesQueue",
            "label": "lastResolved",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:28"
          },
          {
            "contract": "GamesQueue",
            "label": "consumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:30"
          },
          {
            "contract": "GamesQueue",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesQueue.sol:31"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "07349126864a489de114d1eca4b56e61fe6129b395f1afc17de003f399ee4187": {
      "address": "0x362B161297023cADA3f9B53F1d89E5bEe158B0d4",
      "txHash": "0x41b94279bd31bc828f4384b1e6153644549ba36bb2d5a55b554c6bf59dced418",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "thalesAMM",
            "type": "t_contract(IThalesAMM)75245",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:41"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:42"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:44"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:46"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:47"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:48"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:50"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:52"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:53"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:55"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:56"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:58"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:60"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:61"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:63"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:64"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:66"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:67"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:68"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:69"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:71"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)75115",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:73"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:75"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:77"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:79"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:81"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "onlyWhitelistedStakersAllowed",
            "type": "t_bool",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:83"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "whitelistedStakers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:85"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:87"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "marketAlreadyExercisedInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:89"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "roundClosingPrepared",
            "type": "t_bool",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:91"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "usersProcessedInRound",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:93"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "marketsProcessedInRound",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:95"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "withdrawalShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:97"
          }
        ],
        "types": {
          "t_contract(IThalesAMM)75245": {
            "label": "contract IThalesAMM"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)75115": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7206402cf47a9d785ea088c28ee652281ab00ae6ebe36e53e9b1be12a36da82a": {
      "address": "0xade53971B171f61d474754d9Cad9Ca20564347Bf",
      "txHash": "0xd210f9b22cdbb8a6eab3e1179be93fc6b7eec355705a9fe3a49b2402da1c8d9f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "e91a713fe766f3e5c795d9a3d446e2f321d35f712872bec0bb7cf15667351566": {
      "address": "0x71eA1aa0823F7062BCec2B6FC82E14892046FB49",
      "txHash": "0xacaf27281663d3842a4e56d61ceef70e941a76eb879655fe6b4674beea5a756c",
      "layout": {
        "storage": [
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ThalesAMMDefaultLiquidityProvider",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMDefaultLiquidityProvider.sol:14"
          },
          {
            "contract": "ThalesAMMDefaultLiquidityProvider",
            "label": "liquidityPool",
            "type": "t_address",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMDefaultLiquidityProvider.sol:19"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "17d504fca0f12115f565411e41c84b1a12543dd85b6e8ca16941c4c8e9d98a74": {
      "address": "0xa08a8C8f43AaD36567AEf9FC661eFCA8d00F4518",
      "txHash": "0x98e0a6bf4852ee2d90d818a779a7cc78dbb7b6b1d55cc60ac51ab0a3dcbae541",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "durations",
            "type": "t_struct(Durations)29974_storage",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:47"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "capitalRequirement",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:48"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketCreationEnabled",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:50"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "customMarketCreationEnabled",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:51"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "onlyWhitelistedAddressesCanCreateMarkets",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:53"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:54"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:56"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)82219_storage",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:58"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)82219_storage",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:59"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "_migratingManager",
            "type": "t_contract(PositionalMarketManager)31554",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:61"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)76527",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:63"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "sUSD",
            "type": "t_contract(IERC20)4879",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:64"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "positionalMarketFactory",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:66"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:68"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "timeframeBuffer",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:70"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "priceBuffer",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:71"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketsPerOracleKey",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_array(t_address)dyn_storage))",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:73"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketsStrikePrice",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:74"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "onlyAMMMintingAndBurning",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:76"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketCreationMonthLimit",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:78"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "allowedDate1",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:80"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "allowedDate2",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:81"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketExistsByOracleKeyDateAndStrikePrice",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:83"
          }
        ],
        "types": {
          "t_struct(Durations)29974_storage": {
            "label": "struct PositionalMarketManager.Durations",
            "members": [
              {
                "label": "expiryDuration",
                "type": "t_uint256"
              },
              {
                "label": "maxTimeToMaturity",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(AddressSet)82219_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(PositionalMarketManager)31554": {
            "label": "contract PositionalMarketManager"
          },
          "t_contract(IPriceFeed)76527": {
            "label": "contract IPriceFeed"
          },
          "t_contract(IERC20)4879": {
            "label": "contract IERC20"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_array(t_address)dyn_storage))": {
            "label": "mapping(bytes32 => mapping(uint256 => address[]))"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))": {
            "label": "mapping(bytes32 => mapping(uint256 => mapping(uint256 => address)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint256 => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          }
        }
      }
    },
    "17d04e2b72bbdd1bdea38127269a75714995c3f208158996b3467becd8a744d7": {
      "address": "0xfA6CDDA4d387ae88c5d148FfF8E31D6363CBb878",
      "txHash": "0xc3bc1ee348fd89392814090c2a0faf82bddf8158f4fe6adcf0548f94217530c2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ThalesAMM",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)74306",
            "src": "contracts\\AMM\\ThalesAMM.sol:46"
          },
          {
            "contract": "ThalesAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\AMM\\ThalesAMM.sol:47"
          },
          {
            "contract": "ThalesAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:48"
          },
          {
            "contract": "ThalesAMM",
            "label": "capPerMarket",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:50"
          },
          {
            "contract": "ThalesAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:51"
          },
          {
            "contract": "ThalesAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:52"
          },
          {
            "contract": "ThalesAMM",
            "label": "impliedVolatilityPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:54"
          },
          {
            "contract": "ThalesAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:56"
          },
          {
            "contract": "ThalesAMM",
            "label": "spentOnMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:58"
          },
          {
            "contract": "ThalesAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:60"
          },
          {
            "contract": "ThalesAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:61"
          },
          {
            "contract": "ThalesAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)75007",
            "src": "contracts\\AMM\\ThalesAMM.sol:63"
          },
          {
            "contract": "ThalesAMM",
            "label": "minSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:65"
          },
          {
            "contract": "ThalesAMM",
            "label": "maxSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:66"
          },
          {
            "contract": "ThalesAMM",
            "label": "_capPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:68"
          },
          {
            "contract": "ThalesAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\ThalesAMM.sol:70"
          },
          {
            "contract": "ThalesAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:72"
          },
          {
            "contract": "ThalesAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:73"
          },
          {
            "contract": "ThalesAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)73398",
            "src": "contracts\\AMM\\ThalesAMM.sol:75"
          },
          {
            "contract": "ThalesAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:77"
          },
          {
            "contract": "ThalesAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:78"
          },
          {
            "contract": "ThalesAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:79"
          },
          {
            "contract": "ThalesAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\AMM\\ThalesAMM.sol:81"
          },
          {
            "contract": "ThalesAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:83"
          },
          {
            "contract": "ThalesAMM",
            "label": "ammUtils",
            "type": "t_contract(IThalesAMMUtils)75262",
            "src": "contracts\\AMM\\ThalesAMM.sol:85"
          },
          {
            "contract": "ThalesAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:90"
          },
          {
            "contract": "ThalesAMM",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:91"
          },
          {
            "contract": "ThalesAMM",
            "label": "liquidityPool",
            "type": "t_contract(ThalesAMMLiquidityPool)15820",
            "src": "contracts\\AMM\\ThalesAMM.sol:93"
          }
        ],
        "types": {
          "t_contract(IPriceFeed)74306": {
            "label": "contract IPriceFeed"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)75007": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ICurveSUSD)73398": {
            "label": "contract ICurveSUSD"
          },
          "t_contract(IThalesAMMUtils)75262": {
            "label": "contract IThalesAMMUtils"
          },
          "t_contract(ThalesAMMLiquidityPool)15820": {
            "label": "contract ThalesAMMLiquidityPool"
          }
        }
      }
    },
    "a9d0b717be2db61d69d58463a856448c7e0dda891c25cdf4d9bb055690696cc2": {
      "address": "0xE7d1D7e2641aB86dEb5A09293b5E4c6fe657db33",
      "txHash": "0x06fb55ebb4df657eeafa7756d0e0600c1b36fb22f9e3e439821db1d69d2d87ad",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyPausable.sol:12"
          },
          {
            "contract": "StakingThales",
            "label": "iEscrowThales",
            "type": "t_contract(IEscrowThales)6962",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:34"
          },
          {
            "contract": "StakingThales",
            "label": "stakingToken",
            "type": "t_contract(IERC20)9941",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:35"
          },
          {
            "contract": "StakingThales",
            "label": "feeToken",
            "type": "t_contract(IERC20)9941",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:36"
          },
          {
            "contract": "StakingThales",
            "label": "SNXRewards",
            "type": "t_contract(ISNXRewards)7332",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:37"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRoyale",
            "type": "t_contract(IThalesRoyale)7619",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:38"
          },
          {
            "contract": "StakingThales",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)7294",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:39"
          },
          {
            "contract": "StakingThales",
            "label": "periodsOfStaking",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:41"
          },
          {
            "contract": "StakingThales",
            "label": "lastPeriodTimeStamp",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:42"
          },
          {
            "contract": "StakingThales",
            "label": "durationPeriod",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:43"
          },
          {
            "contract": "StakingThales",
            "label": "unstakeDurationPeriod",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:44"
          },
          {
            "contract": "StakingThales",
            "label": "startTimeStamp",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:45"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodRewards",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:46"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodFees",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:47"
          },
          {
            "contract": "StakingThales",
            "label": "distributeFeesEnabled",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:48"
          },
          {
            "contract": "StakingThales",
            "label": "fixedPeriodReward",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:49"
          },
          {
            "contract": "StakingThales",
            "label": "periodExtraReward",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:50"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXRewardsInPeriod",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:51"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXFeesInPeriod",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:52"
          },
          {
            "contract": "StakingThales",
            "label": "claimEnabled",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:53"
          },
          {
            "contract": "StakingThales",
            "label": "stakerLifetimeRewardsClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:55"
          },
          {
            "contract": "StakingThales",
            "label": "stakerFeesClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:56"
          },
          {
            "contract": "StakingThales",
            "label": "_totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:58"
          },
          {
            "contract": "StakingThales",
            "label": "_totalEscrowedAmount",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:59"
          },
          {
            "contract": "StakingThales",
            "label": "_totalPendingStakeAmount",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:60"
          },
          {
            "contract": "StakingThales",
            "label": "_totalUnclaimedRewards",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:61"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardsClaimed",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:62"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardFeesClaimed",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:63"
          },
          {
            "contract": "StakingThales",
            "label": "lastUnstakeTime",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:65"
          },
          {
            "contract": "StakingThales",
            "label": "unstaking",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:66"
          },
          {
            "contract": "StakingThales",
            "label": "unstakingAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:67"
          },
          {
            "contract": "StakingThales",
            "label": "_stakedBalances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:68"
          },
          {
            "contract": "StakingThales",
            "label": "_lastRewardsClaimedPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:69"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:70"
          },
          {
            "contract": "StakingThales",
            "label": "lastAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:79"
          },
          {
            "contract": "StakingThales",
            "label": "stakerAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3520_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:80"
          },
          {
            "contract": "StakingThales",
            "label": "extraRewardsActive",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:82"
          },
          {
            "contract": "StakingThales",
            "label": "ThalesStakingRewardsPool",
            "type": "t_contract(IThalesStakingRewardsPool)7629",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:83"
          },
          {
            "contract": "StakingThales",
            "label": "maxSNXRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:85"
          },
          {
            "contract": "StakingThales",
            "label": "maxAMMVolumeRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:86"
          },
          {
            "contract": "StakingThales",
            "label": "AMMVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:87"
          },
          {
            "contract": "StakingThales",
            "label": "maxThalesRoyaleRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:88"
          },
          {
            "contract": "StakingThales",
            "label": "SNXVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:93"
          },
          {
            "contract": "StakingThales",
            "label": "_lastStakingPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:95"
          },
          {
            "contract": "StakingThales",
            "label": "totalStakedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:97"
          },
          {
            "contract": "StakingThales",
            "label": "totalEscrowedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:98"
          },
          {
            "contract": "StakingThales",
            "label": "exoticBonds",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:99"
          },
          {
            "contract": "StakingThales",
            "label": "addressResolver",
            "type": "t_contract(IAddressResolver)6869",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:101"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMM",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:103"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:104"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:106"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3520_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:107"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesRangedAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:108"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3520_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:109"
          },
          {
            "contract": "StakingThales",
            "label": "lastExoticMarketsUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:110"
          },
          {
            "contract": "StakingThales",
            "label": "exoticMarketsVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3520_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:111"
          },
          {
            "contract": "StakingThales",
            "label": "lastSportsAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:112"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3520_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:113"
          },
          {
            "contract": "StakingThales",
            "label": "canClaimOnBehalf",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:115"
          },
          {
            "contract": "StakingThales",
            "label": "mergeAccountEnabled",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:117"
          },
          {
            "contract": "StakingThales",
            "label": "delegatedVolume",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:119"
          },
          {
            "contract": "StakingThales",
            "label": "supportedSportVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:120"
          },
          {
            "contract": "StakingThales",
            "label": "supportedAMMVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:121"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMLiquidityPool",
            "type": "t_contract(ISportsAMMLiquidityPool)7342",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:123"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMMLiquidityPool",
            "type": "t_contract(IThalesAMMLiquidityPool)7550",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:124"
          }
        ],
        "types": {
          "t_contract(IEscrowThales)6962": {
            "label": "contract IEscrowThales"
          },
          "t_contract(IERC20)9941": {
            "label": "contract IERC20"
          },
          "t_contract(ISNXRewards)7332": {
            "label": "contract ISNXRewards"
          },
          "t_contract(IThalesRoyale)7619": {
            "label": "contract IThalesRoyale"
          },
          "t_contract(IPriceFeed)7294": {
            "label": "contract IPriceFeed"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3520_storage)4_storage)": {
            "label": "mapping(address => struct StakingThales.AMMVolumeEntry[4])"
          },
          "t_array(t_struct(AMMVolumeEntry)3520_storage)4_storage": {
            "label": "struct StakingThales.AMMVolumeEntry[4]"
          },
          "t_struct(AMMVolumeEntry)3520_storage": {
            "label": "struct StakingThales.AMMVolumeEntry",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "period",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IThalesStakingRewardsPool)7629": {
            "label": "contract IThalesStakingRewardsPool"
          },
          "t_contract(IAddressResolver)6869": {
            "label": "contract IAddressResolver"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_contract(ISportsAMMLiquidityPool)7342": {
            "label": "contract ISportsAMMLiquidityPool"
          },
          "t_contract(IThalesAMMLiquidityPool)7550": {
            "label": "contract IThalesAMMLiquidityPool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6c33aa25899e726d4d7eaf60724c41cc31d90dfd3e60d0b1daebfcd4421cc0fe": {
      "address": "0x405E69F6E808905a8b95B7f4A449D46fCDB45C3e",
      "txHash": "0xa22ec5fab79628cbe2ebdd8ef3e1ddf7f429fd2ee4b97d341e15817c1d7df6df",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sportsAMM",
            "type": "t_contract(ISportsAMM)76721",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:41"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:42"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:44"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:46"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:47"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:48"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:50"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:52"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:53"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:55"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:56"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:58"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:60"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:61"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:63"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:64"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:66"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:67"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:68"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:69"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:71"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)76808",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:73"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:75"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:77"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:79"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:81"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "onlyWhitelistedStakersAllowed",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:83"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedStakers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:85"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:87"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "marketAlreadyExercisedInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:89"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundClosingPrepared",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:91"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersProcessedInRound",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:93"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "withdrawalShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:95"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)76721": {
            "label": "contract ISportsAMM"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)76808": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8dfa16810d07699c60886adc3f48df45d0bff8666cf85bb0d518fd6a5b01563a": {
      "address": "0x70f3d1800Cc2C0E8069A03Ea5C3Fad487fB4232d",
      "txHash": "0x55931bddcce5e87c3ba34d4b77b1d35dfc62ba6a8431e18d7cb6178efd761726",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "expiryDuration",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:31"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "marketCreationEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:33"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "customMarketCreationEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:34"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:36"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)80094_storage",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:38"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)80094_storage",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:39"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_migratingManager",
            "type": "t_contract(SportPositionalMarketManager)63942",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:41"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sUSD",
            "type": "t_contract(IERC20)4879",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:43"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:45"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sportPositionalMarketFactory",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:46"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:47"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:48"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:49"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "cancelTimeout",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:50"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedCancelAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:51"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "oddsObtainer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:52"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "isDoubleChance",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:54"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "isDoubleChanceSupported",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:55"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "doubleChanceMarketsByParent",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:56"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "doesSportSupportDoubleChance",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:57"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)80094_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(SportPositionalMarketManager)63942": {
            "label": "contract SportPositionalMarketManager"
          },
          "t_contract(IERC20)4879": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          }
        }
      }
    },
    "0da46976372c3ce9409bc5929b1e8f38a5c2440df10f0fb9a7525bb2de44d52d": {
      "address": "0x1140C293dE042CeC04273949735974f5055f509c",
      "txHash": "0xe215e56debcafa4ba62be0a611daa698fadb729505b6437f1b5fb1e3939d8fa3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)13375",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:36"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)13180",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:37"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)1233",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:38"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)13452",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)11952",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:44"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:52"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:55"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:60"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)13724_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:62"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:63"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)6977",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:69"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerGameCombination",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:72"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:76"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:78"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerPackedGamesCombination",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:80"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "SGPFeePerCombination",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:82"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)13375": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)13180": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)1233": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)13452": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)11952": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)13724_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)6977": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => uint256))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          }
        }
      }
    },
    "151fe88d1cc14dc4b4cf61f1f9cc0a58c22a4e10b9cd6869267760211538d5d0": {
      "address": "0xb1d37E29f8dE2E34a479F694945eA3aeB9F7057C",
      "txHash": "0xc27a8b8af22f9a5fba18030478f4efe3139844c2dcbad86220bce1d91731013b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "expiryDuration",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:31"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "marketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:33"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "customMarketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:34"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:36"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)13724_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:38"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)13724_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:39"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_migratingManager",
            "type": "t_contract(SportPositionalMarketManager)11925",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:41"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sUSD",
            "type": "t_contract(IERC20)157",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:43"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:45"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sportPositionalMarketFactory",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:46"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:47"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:48"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:49"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "cancelTimeout",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:50"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedCancelAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:51"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "oddsObtainer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:52"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "isDoubleChance",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:54"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "isDoubleChanceSupported",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:55"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "doubleChanceMarketsByParent",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:56"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "doesSportSupportDoubleChance",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:57"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)13724_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(SportPositionalMarketManager)11925": {
            "label": "contract SportPositionalMarketManager"
          },
          "t_contract(IERC20)157": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          }
        }
      }
    },
    "3af2cfeb136679a9da1d3f10d3d8777ec9e5e79cebc126ac7549f340dbda71de": {
      "address": "0xD0dEA2fA5C306DC7967c456875F5488770d0B579",
      "txHash": "0x4ff4699c79666f948d1e1d4136896bd0ea60c52fb0ae17f55768166e26078248",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)77946",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:32"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)78074",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:33"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)77077",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:34"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)75816_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:37"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)75816_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:38"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:39"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:40"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:41"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "doesSportSupportSpreadAndTotal",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:42"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:45"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:46"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketSpreadChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_int16,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:47"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketTotalChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_uint24,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:48"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:49"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketSread",
            "type": "t_mapping(t_address,t_int16)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:50"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketTotal",
            "type": "t_mapping(t_address,t_uint24)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:51"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveTotalChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:52"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveSpreadChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:53"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "isSpreadChildMarket",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:54"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:55"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "normalizedOddsForMarketFulfilled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:56"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "normalizedOddsForMarket",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:57"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsReceiver",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:58"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)77946": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)78074": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)77077": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)75816_storage)": {
            "label": "mapping(bytes32 => struct IGamesOddsObtainer.GameOdds)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(GameOdds)75816_storage": {
            "label": "struct IGamesOddsObtainer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadHome",
                "type": "t_int16"
              },
              {
                "label": "spreadHomeOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadAway",
                "type": "t_int16"
              },
              {
                "label": "spreadAwayOdds",
                "type": "t_int24"
              },
              {
                "label": "totalOver",
                "type": "t_uint24"
              },
              {
                "label": "totalOverOdds",
                "type": "t_int24"
              },
              {
                "label": "totalUnder",
                "type": "t_uint24"
              },
              {
                "label": "totalUnderOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_int24": {
            "label": "int24"
          },
          "t_int16": {
            "label": "int16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_int16,t_address))": {
            "label": "mapping(address => mapping(int16 => address))"
          },
          "t_mapping(t_int16,t_address)": {
            "label": "mapping(int16 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint24,t_address))": {
            "label": "mapping(address => mapping(uint24 => address))"
          },
          "t_mapping(t_uint24,t_address)": {
            "label": "mapping(uint24 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_int16)": {
            "label": "mapping(address => int16)"
          },
          "t_mapping(t_address,t_uint24)": {
            "label": "mapping(address => uint24)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "a2ca5a5f10f292a2d95d07e6d9a7b6eb44ba1bced1695cd52647c443ac9e92b5": {
      "address": "0x45669F16644cD745E693b6bEb3A65E31f5b98320",
      "txHash": "0x00728c170d9640ea9970a212cd6c73208001365f4bbeb952ce0fb0bbf81788f4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:88"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:89"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "oddsObtainer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:90"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "consumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:91"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "voucherEscrow",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:92"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e7f9a334d2d67ac249674fc97345d0728b4601b857de14b9a3d5c49e8051160e": {
      "address": "0x09F9FBA4C2A2f51182e90888df6B954C68288200",
      "txHash": "0x34642d459d0eb3bb0e43149405678c83ea16d6e93e77e5ee18a6a0169820801e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:88"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:89"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "oddsObtainer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:90"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "consumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:91"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "voucherEscrow",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:92"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4dc78c5b71715e810a661ddf5887f36f6459f9baa579213c91ffa213f3baebc2": {
      "address": "0x8939fE3a30002B2eDbeB26c0D9190d20A47DaA97",
      "txHash": "0x0b2ac648f8b60a9e3bc791703fb79d131d37b705d6e3d1e25f125b7667f5bb15",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:59"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:60"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:63"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:64"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:65"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)53484_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:68"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)53495_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:69"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)53504_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:70"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:71"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:72"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:73"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:76"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:77"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:78"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:79"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)76918",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:82"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:83"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:84"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:85"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:86"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)53436",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:89"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:90"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:94"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:95"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:96"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:97"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOnADate",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:98"
          },
          {
            "contract": "TherundownConsumer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)77922",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:100"
          },
          {
            "contract": "TherundownConsumer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)53504_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:101"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsObtainer",
            "type": "t_contract(IGamesOddsObtainer)75884",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:102"
          },
          {
            "contract": "TherundownConsumer",
            "label": "maxNumberOfMarketsToResolve",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:103"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)53484_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)53484_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)53495_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)53495_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)53504_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)53504_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)76918": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)53436": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          },
          "t_contract(ITherundownConsumerVerifier)77922": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(IGamesOddsObtainer)75884": {
            "label": "contract IGamesOddsObtainer"
          }
        }
      }
    },
    "e4e62574b44f9de1354dcebaf135b70e32f65ba7a604302c550559398124e8c9": {
      "address": "0x81B93FC96661147F4B1540b255Db57BC52538571",
      "txHash": "0x442c27247dde9d7d218f8490973c69ebf1ad6054b2107a4ca83ff9c80dc7eef5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ParlayMarketData",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)12796_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:16"
          },
          {
            "contract": "ParlayMarketData",
            "label": "_parlaysInGamePosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)12796_storage))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:29"
          },
          {
            "contract": "ParlayMarketData",
            "label": "gameAddressPositionParlay",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:31"
          },
          {
            "contract": "ParlayMarketData",
            "label": "numOfParlaysInGamePosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:32"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayDetails",
            "type": "t_mapping(t_address,t_struct(ParlayDetails)3111_storage)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:34"
          },
          {
            "contract": "ParlayMarketData",
            "label": "userParlays",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:35"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayOwner",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:36"
          },
          {
            "contract": "ParlayMarketData",
            "label": "userNumOfParlays",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:37"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayMarketsAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:38"
          }
        ],
        "types": {
          "t_struct(AddressSet)12796_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)12796_storage))": {
            "label": "mapping(address => mapping(uint256 => struct AddressSetLib.AddressSet))"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)12796_storage)": {
            "label": "mapping(uint256 => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))": {
            "label": "mapping(address => mapping(uint256 => mapping(uint256 => address)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint256 => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(ParlayDetails)3111_storage)": {
            "label": "mapping(address => struct ParlayMarketData.ParlayDetails)"
          },
          "t_struct(ParlayDetails)3111_storage": {
            "label": "struct ParlayMarketData.ParlayDetails",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "sUSDPaid",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c976117290cba51b88c482fedf84b7e5e98b455ca4d7151fce999a037381019b": {
      "address": "0xDE609c3deC84dCd4e6A1b9Ab30068143d23F2819",
      "txHash": "0xda64cb069779ff81e5747c1661bc9e65ed3f6b76919f167a5ef1bd5da7dd3826",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "thalesAMM",
            "type": "t_contract(IThalesAMM)78242",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:41"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:42"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:44"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:46"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:47"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:48"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:50"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:52"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:53"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:55"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:56"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:58"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:60"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:61"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:63"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:64"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:66"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:67"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:68"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:69"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:71"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)78084",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:73"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:75"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:77"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:79"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:81"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "onlyWhitelistedStakersAllowed",
            "type": "t_bool",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:83"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "whitelistedStakers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:85"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:87"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "marketAlreadyExercisedInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:89"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "roundClosingPrepared",
            "type": "t_bool",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:91"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "usersProcessedInRound",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:93"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "marketsProcessedInRound",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:95"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "withdrawalShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:97"
          }
        ],
        "types": {
          "t_contract(IThalesAMM)78242": {
            "label": "contract IThalesAMM"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)78084": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e3aeb916866ddda2a8dfdf4398925c11db01214e0bcc0585257adc16c97cf3e7": {
      "address": "0x68a538b0D9649842649CAe5fE971Fa8ace058032",
      "txHash": "0x4d26c6917a385b64a0d1d74cb28896827c59802619d6e7193ea9f42fe97f6950",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "PositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:102"
          },
          {
            "contract": "PositionalMarketData",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:103"
          },
          {
            "contract": "PositionalMarketData",
            "label": "rangedMarketsAMM",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:104"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "780452aa2da2c8a5a936059fbff61dd226f6d10d8522d639ab18a36a00e4abb8": {
      "address": "0x08f5e040eC9f41296fc94d9E2bdAf509e013C22c",
      "txHash": "0x261dbb49f3dc6ff9ab0cccda55590a8f70d986a28faeee44ca226ec6e73e62c5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sportsAMM",
            "type": "t_contract(ISportsAMM)76825",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:41"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:42"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:44"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:46"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:47"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:48"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:50"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:52"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:53"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:55"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:56"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:58"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:60"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:61"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:63"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:64"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:66"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:67"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:68"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:69"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:71"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)76912",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:73"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:75"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:77"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:79"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:81"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "onlyWhitelistedStakersAllowed",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:83"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedStakers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:85"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:87"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "marketAlreadyExercisedInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:89"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundClosingPrepared",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:91"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersProcessedInRound",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:93"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "withdrawalShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:95"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)76825": {
            "label": "contract ISportsAMM"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)76912": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "cf49ddb814785c275f67f06b70a5d7b26398afad8f3a97afff4fa7abe51022ef": {
      "address": "0x80dad99EB0b738835Dd2C464A802A249857e11b1",
      "txHash": "0x0dc1b547ea6ba4d3464ea6ddd49e8bc0dcaf9caf5f33f64258dcfa52b8433918",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)13556",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:36"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)13361",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:37"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)1233",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:38"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)13633",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)12133",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:44"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:52"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:55"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:60"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)13905_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:62"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:63"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)7158",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:69"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerGameCombination",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:72"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:76"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:78"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerPackedGamesCombination",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:80"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "SGPFeePerCombination",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:82"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)13556": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)13361": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)1233": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)13633": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)12133": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)13905_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)7158": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => uint256))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          }
        }
      }
    },
    "8118d64732c2eacac9b4082edd6ccfb4c6b27364c55f4d49c9c1d626d173ffd2": {
      "address": "0x5D1B22c65A7ECe1c66bFDe7142E24Fb015E974DC",
      "txHash": "0xe61764159a78adfe9c4fe3e702fdc6536a414b8ac626fe558c1a674652b23233",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ThalesAMM",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)76573",
            "src": "contracts\\AMM\\ThalesAMM.sol:46"
          },
          {
            "contract": "ThalesAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\AMM\\ThalesAMM.sol:47"
          },
          {
            "contract": "ThalesAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:48"
          },
          {
            "contract": "ThalesAMM",
            "label": "capPerMarket",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:50"
          },
          {
            "contract": "ThalesAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:51"
          },
          {
            "contract": "ThalesAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:52"
          },
          {
            "contract": "ThalesAMM",
            "label": "impliedVolatilityPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:54"
          },
          {
            "contract": "ThalesAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:56"
          },
          {
            "contract": "ThalesAMM",
            "label": "spentOnMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:58"
          },
          {
            "contract": "ThalesAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:60"
          },
          {
            "contract": "ThalesAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:61"
          },
          {
            "contract": "ThalesAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)77286",
            "src": "contracts\\AMM\\ThalesAMM.sol:63"
          },
          {
            "contract": "ThalesAMM",
            "label": "minSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:65"
          },
          {
            "contract": "ThalesAMM",
            "label": "maxSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:66"
          },
          {
            "contract": "ThalesAMM",
            "label": "_capPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:68"
          },
          {
            "contract": "ThalesAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\ThalesAMM.sol:70"
          },
          {
            "contract": "ThalesAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:72"
          },
          {
            "contract": "ThalesAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:73"
          },
          {
            "contract": "ThalesAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)75623",
            "src": "contracts\\AMM\\ThalesAMM.sol:75"
          },
          {
            "contract": "ThalesAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:77"
          },
          {
            "contract": "ThalesAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:78"
          },
          {
            "contract": "ThalesAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:79"
          },
          {
            "contract": "ThalesAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\AMM\\ThalesAMM.sol:81"
          },
          {
            "contract": "ThalesAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:83"
          },
          {
            "contract": "ThalesAMM",
            "label": "ammUtils",
            "type": "t_contract(IThalesAMMUtils)77541",
            "src": "contracts\\AMM\\ThalesAMM.sol:85"
          },
          {
            "contract": "ThalesAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:90"
          },
          {
            "contract": "ThalesAMM",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:91"
          },
          {
            "contract": "ThalesAMM",
            "label": "liquidityPool",
            "type": "t_contract(ThalesAMMLiquidityPool)15832",
            "src": "contracts\\AMM\\ThalesAMM.sol:93"
          }
        ],
        "types": {
          "t_contract(IPriceFeed)76573": {
            "label": "contract IPriceFeed"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)77286": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ICurveSUSD)75623": {
            "label": "contract ICurveSUSD"
          },
          "t_contract(IThalesAMMUtils)77541": {
            "label": "contract IThalesAMMUtils"
          },
          "t_contract(ThalesAMMLiquidityPool)15832": {
            "label": "contract ThalesAMMLiquidityPool"
          }
        }
      }
    },
    "5897130c9dd1bbcd6140751584ff3a2cefa0fe0c9965796bcd0300bcf6ac521e": {
      "address": "0xB03AdD27Ba242F5979b5eB7C7A68145D8B57c137",
      "txHash": "0xc9501bdab52509f85382ec09a542cab5d106ab2c6d9b708b3260e84a6ec47067",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "durations",
            "type": "t_struct(Durations)6355_storage",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:47"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "capitalRequirement",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:48"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketCreationEnabled",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:50"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "customMarketCreationEnabled",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:51"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "onlyWhitelistedAddressesCanCreateMarkets",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:53"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:54"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:56"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)12881_storage",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:58"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)12881_storage",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:59"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "_migratingManager",
            "type": "t_contract(PositionalMarketManager)8038",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:61"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)12640",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:63"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "sUSD",
            "type": "t_contract(IERC20)157",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:64"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "positionalMarketFactory",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:66"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:68"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "timeframeBuffer",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:70"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "priceBuffer",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:71"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketsPerOracleKey",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_array(t_address)dyn_storage))",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:73"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketsStrikePrice",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:74"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "onlyAMMMintingAndBurning",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:76"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketCreationMonthLimit",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:78"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "allowedDate1",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:80"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "allowedDate2",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:81"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketExistsByOracleKeyDateAndStrikePrice",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:83"
          }
        ],
        "types": {
          "t_struct(Durations)6355_storage": {
            "label": "struct PositionalMarketManager.Durations",
            "members": [
              {
                "label": "expiryDuration",
                "type": "t_uint256"
              },
              {
                "label": "maxTimeToMaturity",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(AddressSet)12881_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(PositionalMarketManager)8038": {
            "label": "contract PositionalMarketManager"
          },
          "t_contract(IPriceFeed)12640": {
            "label": "contract IPriceFeed"
          },
          "t_contract(IERC20)157": {
            "label": "contract IERC20"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_array(t_address)dyn_storage))": {
            "label": "mapping(bytes32 => mapping(uint256 => address[]))"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))": {
            "label": "mapping(bytes32 => mapping(uint256 => mapping(uint256 => address)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint256 => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          }
        }
      }
    },
    "a44428d978af8d452ca5af22e4d1c68cf53ecbd1febed23a642c6cd18c0158c2": {
      "address": "0xbB87788611ab2c7AD452de351397dDb0dbaBF2B3",
      "txHash": "0xdd049a4c012688387d91619818b9a0023fbbaaabba9c6d524846a49a89a81f49",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "thalesAmm",
            "type": "t_contract(IThalesAMM)77481",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:39"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "rangedAmmFee",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:41"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "createdRangedMarkets",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:43"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)82330_storage",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:44"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "rangedMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:46"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "rangedPositionMastercopy",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:47"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:49"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "spentOnMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:51"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "capPerMarket",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:54"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "minSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:56"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "maxSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:57"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:59"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:60"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "minimalDifBetweenStrikes",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:62"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)77351",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:64"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "maximalDifBetweenStrikes",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:66"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:68"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:69"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)75688",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:71"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:73"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:74"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:75"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:77"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:78"
          }
        ],
        "types": {
          "t_contract(IThalesAMM)77481": {
            "label": "contract IThalesAMM"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_struct(AddressSet)82330_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)77351": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)75688": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a85d678ec46caf59d9a2f52f9023e58f5c5021390cdd847e4b54b30158d6a892": {
      "address": "0x25A0E0A59BAA933117F2832306ECB034DDC91337",
      "txHash": "0x1e14ac1f1bdff30b1b34544c064b9729763a3eaffee71b55d2d29f76f158c776",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ThalesAMM",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)76662",
            "src": "contracts\\AMM\\ThalesAMM.sol:46"
          },
          {
            "contract": "ThalesAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\AMM\\ThalesAMM.sol:47"
          },
          {
            "contract": "ThalesAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:48"
          },
          {
            "contract": "ThalesAMM",
            "label": "capPerMarket",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:50"
          },
          {
            "contract": "ThalesAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:51"
          },
          {
            "contract": "ThalesAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:52"
          },
          {
            "contract": "ThalesAMM",
            "label": "impliedVolatilityPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:54"
          },
          {
            "contract": "ThalesAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:56"
          },
          {
            "contract": "ThalesAMM",
            "label": "spentOnMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:58"
          },
          {
            "contract": "ThalesAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:60"
          },
          {
            "contract": "ThalesAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:61"
          },
          {
            "contract": "ThalesAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)77375",
            "src": "contracts\\AMM\\ThalesAMM.sol:63"
          },
          {
            "contract": "ThalesAMM",
            "label": "minSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:65"
          },
          {
            "contract": "ThalesAMM",
            "label": "maxSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:66"
          },
          {
            "contract": "ThalesAMM",
            "label": "_capPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:68"
          },
          {
            "contract": "ThalesAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\ThalesAMM.sol:70"
          },
          {
            "contract": "ThalesAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:72"
          },
          {
            "contract": "ThalesAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:73"
          },
          {
            "contract": "ThalesAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)75712",
            "src": "contracts\\AMM\\ThalesAMM.sol:75"
          },
          {
            "contract": "ThalesAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:77"
          },
          {
            "contract": "ThalesAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:78"
          },
          {
            "contract": "ThalesAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:79"
          },
          {
            "contract": "ThalesAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\AMM\\ThalesAMM.sol:81"
          },
          {
            "contract": "ThalesAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:83"
          },
          {
            "contract": "ThalesAMM",
            "label": "ammUtils",
            "type": "t_contract(IThalesAMMUtils)77630",
            "src": "contracts\\AMM\\ThalesAMM.sol:85"
          },
          {
            "contract": "ThalesAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:90"
          },
          {
            "contract": "ThalesAMM",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:91"
          },
          {
            "contract": "ThalesAMM",
            "label": "liquidityPool",
            "type": "t_contract(ThalesAMMLiquidityPool)15832",
            "src": "contracts\\AMM\\ThalesAMM.sol:93"
          }
        ],
        "types": {
          "t_contract(IPriceFeed)76662": {
            "label": "contract IPriceFeed"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)77375": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ICurveSUSD)75712": {
            "label": "contract ICurveSUSD"
          },
          "t_contract(IThalesAMMUtils)77630": {
            "label": "contract IThalesAMMUtils"
          },
          "t_contract(ThalesAMMLiquidityPool)15832": {
            "label": "contract ThalesAMMLiquidityPool"
          }
        }
      }
    },
    "ae18fea8a996da9034ea4bad1add55b416a96ff7daa4adffa769dfa81fc7b2a0": {
      "address": "0x9338F560649523Bacf08BF65acf30aEa0b4DE013",
      "txHash": "0xd38397c98bebc0b77b628a129047a794037470662750a6847901b076749aa36b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "PositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:102"
          },
          {
            "contract": "PositionalMarketData",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:103"
          },
          {
            "contract": "PositionalMarketData",
            "label": "rangedMarketsAMM",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:104"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "26ff9a46500b0466d8abd87a4ae98734d65afe7d8db65cf7a62774472a8a61eb": {
      "address": "0x7fa55B739a2c56019B103BBD91c706e9d2FCC0ab",
      "txHash": "0x50f499628ba0b5e13d5f9910bcfc159bb5c4e92ab5120463c28f3027d2ef823f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:59"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:60"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:63"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:64"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:65"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)917_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:68"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)928_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:69"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)937_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:70"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:71"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:72"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:73"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:76"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:77"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:78"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:79"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)4422",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:82"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:83"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:84"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:85"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:86"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)869",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:89"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:90"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:94"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:95"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:96"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:97"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOnADate",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:98"
          },
          {
            "contract": "TherundownConsumer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)4550",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:100"
          },
          {
            "contract": "TherundownConsumer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)937_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:101"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsObtainer",
            "type": "t_contract(IGamesOddsObtainer)3724",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:102"
          },
          {
            "contract": "TherundownConsumer",
            "label": "maxNumberOfMarketsToResolve",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:103"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)917_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)917_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)928_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)928_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)937_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)937_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)4422": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)869": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          },
          "t_contract(ITherundownConsumerVerifier)4550": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(IGamesOddsObtainer)3724": {
            "label": "contract IGamesOddsObtainer"
          }
        }
      }
    },
    "961d32661b29dc70ee28207ee8f57037008a6d0ad2a9fc00ffeca45dc21cd521": {
      "address": "0x3A40Eaf7341439d9C81c7Ad6C9112B538715B1aD",
      "txHash": "0x25f335a1f040a177e8215ab9b6499f03c6f57bb82f61d320d0cb591515a353ea",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "durations",
            "type": "t_struct(Durations)30013_storage",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:47"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "capitalRequirement",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:48"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketCreationEnabled",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:50"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "customMarketCreationEnabled",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:51"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "onlyWhitelistedAddressesCanCreateMarkets",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:53"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:54"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:56"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)82363_storage",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:58"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)82363_storage",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:59"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "_migratingManager",
            "type": "t_contract(PositionalMarketManager)31705",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:61"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)76671",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:63"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "sUSD",
            "type": "t_contract(IERC20)4879",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:64"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "positionalMarketFactory",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:66"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:68"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "timeframeBuffer",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:70"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "priceBuffer",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:71"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketsPerOracleKey",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_array(t_address)dyn_storage))",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:73"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketsStrikePrice",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:74"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "onlyAMMMintingAndBurning",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:76"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketCreationMonthLimit",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:78"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "allowedDate1",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:80"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "allowedDate2",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:81"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketExistsByOracleKeyDateAndStrikePrice",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:83"
          }
        ],
        "types": {
          "t_struct(Durations)30013_storage": {
            "label": "struct PositionalMarketManager.Durations",
            "members": [
              {
                "label": "expiryDuration",
                "type": "t_uint256"
              },
              {
                "label": "maxTimeToMaturity",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(AddressSet)82363_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(PositionalMarketManager)31705": {
            "label": "contract PositionalMarketManager"
          },
          "t_contract(IPriceFeed)76671": {
            "label": "contract IPriceFeed"
          },
          "t_contract(IERC20)4879": {
            "label": "contract IERC20"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_array(t_address)dyn_storage))": {
            "label": "mapping(bytes32 => mapping(uint256 => address[]))"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))": {
            "label": "mapping(bytes32 => mapping(uint256 => mapping(uint256 => address)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint256 => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          }
        }
      }
    },
    "471100d7c5cfb4b30452a2ef1182f1cfc17382f4c3a106e2c0dea03fd88b5e80": {
      "address": "0xD57EC1A3928ecd44d7619880cbF0C79991a57847",
      "txHash": "0xce2ee121fe943893394ecbee988645b5dc8b797c1d072f0856d74c4cab72a8d1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ThalesAMM",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)76671",
            "src": "contracts\\AMM\\ThalesAMM.sol:46"
          },
          {
            "contract": "ThalesAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\AMM\\ThalesAMM.sol:47"
          },
          {
            "contract": "ThalesAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:48"
          },
          {
            "contract": "ThalesAMM",
            "label": "capPerMarket",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:50"
          },
          {
            "contract": "ThalesAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:51"
          },
          {
            "contract": "ThalesAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:52"
          },
          {
            "contract": "ThalesAMM",
            "label": "impliedVolatilityPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:54"
          },
          {
            "contract": "ThalesAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:56"
          },
          {
            "contract": "ThalesAMM",
            "label": "spentOnMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:58"
          },
          {
            "contract": "ThalesAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:60"
          },
          {
            "contract": "ThalesAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:61"
          },
          {
            "contract": "ThalesAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)77384",
            "src": "contracts\\AMM\\ThalesAMM.sol:63"
          },
          {
            "contract": "ThalesAMM",
            "label": "minSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:65"
          },
          {
            "contract": "ThalesAMM",
            "label": "maxSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:66"
          },
          {
            "contract": "ThalesAMM",
            "label": "_capPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:68"
          },
          {
            "contract": "ThalesAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\ThalesAMM.sol:70"
          },
          {
            "contract": "ThalesAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:72"
          },
          {
            "contract": "ThalesAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:73"
          },
          {
            "contract": "ThalesAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)75721",
            "src": "contracts\\AMM\\ThalesAMM.sol:75"
          },
          {
            "contract": "ThalesAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:77"
          },
          {
            "contract": "ThalesAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:78"
          },
          {
            "contract": "ThalesAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:79"
          },
          {
            "contract": "ThalesAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\AMM\\ThalesAMM.sol:81"
          },
          {
            "contract": "ThalesAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:83"
          },
          {
            "contract": "ThalesAMM",
            "label": "ammUtils",
            "type": "t_contract(IThalesAMMUtils)77639",
            "src": "contracts\\AMM\\ThalesAMM.sol:85"
          },
          {
            "contract": "ThalesAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:90"
          },
          {
            "contract": "ThalesAMM",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:91"
          },
          {
            "contract": "ThalesAMM",
            "label": "liquidityPool",
            "type": "t_contract(ThalesAMMLiquidityPool)15832",
            "src": "contracts\\AMM\\ThalesAMM.sol:93"
          }
        ],
        "types": {
          "t_contract(IPriceFeed)76671": {
            "label": "contract IPriceFeed"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)77384": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ICurveSUSD)75721": {
            "label": "contract ICurveSUSD"
          },
          "t_contract(IThalesAMMUtils)77639": {
            "label": "contract IThalesAMMUtils"
          },
          "t_contract(ThalesAMMLiquidityPool)15832": {
            "label": "contract ThalesAMMLiquidityPool"
          }
        }
      }
    },
    "a07edbf3b71696ff193cc4145ce497277a8246144d54b8e27f911a2f3693fa87": {
      "address": "0x52d41dD2D843014b62c21aBA1250C78E8d8CA84A",
      "txHash": "0xfe2c020820ab5d7cbea38175e35971029e51bc55070a7c99dcafee0bb0de7184",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)4221",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:32"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)4349",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:33"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)3959",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:34"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)3034_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:37"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)3034_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:38"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:39"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:40"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:41"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "doesSportSupportSpreadAndTotal",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:42"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:45"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:46"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketSpreadChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_int16,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:47"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketTotalChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_uint24,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:48"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:49"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketSread",
            "type": "t_mapping(t_address,t_int16)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:50"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketTotal",
            "type": "t_mapping(t_address,t_uint24)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:51"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveTotalChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:52"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveSpreadChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:53"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "isSpreadChildMarket",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:54"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:55"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "normalizedOddsForMarketFulfilled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:56"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "normalizedOddsForMarket",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:57"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsReceiver",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:58"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)4221": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)4349": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)3959": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)3034_storage)": {
            "label": "mapping(bytes32 => struct IGamesOddsObtainer.GameOdds)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(GameOdds)3034_storage": {
            "label": "struct IGamesOddsObtainer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadHome",
                "type": "t_int16"
              },
              {
                "label": "spreadHomeOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadAway",
                "type": "t_int16"
              },
              {
                "label": "spreadAwayOdds",
                "type": "t_int24"
              },
              {
                "label": "totalOver",
                "type": "t_uint24"
              },
              {
                "label": "totalOverOdds",
                "type": "t_int24"
              },
              {
                "label": "totalUnder",
                "type": "t_uint24"
              },
              {
                "label": "totalUnderOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_int24": {
            "label": "int24"
          },
          "t_int16": {
            "label": "int16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_int16,t_address))": {
            "label": "mapping(address => mapping(int16 => address))"
          },
          "t_mapping(t_int16,t_address)": {
            "label": "mapping(int16 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint24,t_address))": {
            "label": "mapping(address => mapping(uint24 => address))"
          },
          "t_mapping(t_uint24,t_address)": {
            "label": "mapping(uint24 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_int16)": {
            "label": "mapping(address => int16)"
          },
          "t_mapping(t_address,t_uint24)": {
            "label": "mapping(address => uint24)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "3ee057efb741c1110f5b3a66a48534a5f098695d5b3ee86f726411d9688983ef": {
      "address": "0x45399907BbdFFB5620e25Ae9850026A17342eF42",
      "txHash": "0x82afaca37011e9330f69433d0097a2795cb1d9de70c1b9bdd9a5328683a64bb1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "PositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:102"
          },
          {
            "contract": "PositionalMarketData",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:103"
          },
          {
            "contract": "PositionalMarketData",
            "label": "rangedMarketsAMM",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:104"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5fba68f22725494cac7cb6ef8fa4b9071ada5476a0ebd78118481de1631d8b0e": {
      "address": "0x1C5795EDb391CDF3ec9CdBc27c7b09dC5E09b255",
      "txHash": "0x536d3c04932119fd81cdd05d2e725dddf749bb38d51e0e9b2102e82ba7c3419a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "PositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:102"
          },
          {
            "contract": "PositionalMarketData",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:103"
          },
          {
            "contract": "PositionalMarketData",
            "label": "rangedMarketsAMM",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:104"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d8815fb914195fdd6fe89247b3b949f03c5ac7ca73a7a3d5b1a1e3f87cf02823": {
      "address": "0xbDeecD9d5D91b6569775aE06C6C1169Db28881aE",
      "txHash": "0x6373b88aac5d1be04b6de42f0a0c3ab4270fc0ab10d6f0f08f4122297e9df62b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "PositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:102"
          },
          {
            "contract": "PositionalMarketData",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:103"
          },
          {
            "contract": "PositionalMarketData",
            "label": "rangedMarketsAMM",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:104"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "cd1170d5e335eeaa6c1b051a60069506aefc0a0d9248aa5cb30c59e56cb64ca9": {
      "address": "0x1f09E08b503B06633992a9b847281675e8895202",
      "txHash": "0x663559674566c9182890691af12c633815910bb11615a26de1266527c0586586",
      "layout": {
        "storage": [
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "stakingThales",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:24"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "stakingBaseDivider",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:26"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "maxStakingMultiplier",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:28"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "vaultsMultiplier",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:30"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "lpMultiplier",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:31"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "tradingMultiplier",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:32"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "userVaultBasePointsPerRound",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:34"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "userLPBasePointsPerRound",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:35"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "userTradingBasePointsPerRound",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:36"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "userRoundBonusPoints",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:37"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "totalVaultBasePointsPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:39"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "totalLPBasePointsPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:40"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "totalTradingBasePointsPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:41"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "totalRoundBonusPoints",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:42"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "knownVaults",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:44"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "knownLiquidityPools",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:45"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "knownTradingAMMs",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:46"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "useNewBonusModel",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "2d42f92a2fb3c3d0dd5068f8f2f989a21dce1ffeb5f8c7dc122906fbb6e31c73": {
      "address": "0xc6CcA907A475a70B2052582A0d52674d997a2c67",
      "txHash": "0xa4554a241da0cfeaeefbc35afee7fe7861d9346bfdb9c7521a2e6c49f137a66c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyPausable.sol:12"
          },
          {
            "contract": "StakingThales",
            "label": "iEscrowThales",
            "type": "t_contract(IEscrowThales)7042",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:35"
          },
          {
            "contract": "StakingThales",
            "label": "stakingToken",
            "type": "t_contract(IERC20)10133",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:36"
          },
          {
            "contract": "StakingThales",
            "label": "feeToken",
            "type": "t_contract(IERC20)10133",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:37"
          },
          {
            "contract": "StakingThales",
            "label": "SNXRewards",
            "type": "t_contract(ISNXRewards)7412",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:38"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRoyale",
            "type": "t_contract(IThalesRoyale)7727",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:39"
          },
          {
            "contract": "StakingThales",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)7374",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:40"
          },
          {
            "contract": "StakingThales",
            "label": "periodsOfStaking",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:42"
          },
          {
            "contract": "StakingThales",
            "label": "lastPeriodTimeStamp",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:43"
          },
          {
            "contract": "StakingThales",
            "label": "durationPeriod",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:44"
          },
          {
            "contract": "StakingThales",
            "label": "unstakeDurationPeriod",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:45"
          },
          {
            "contract": "StakingThales",
            "label": "startTimeStamp",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:46"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodRewards",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:47"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodFees",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:48"
          },
          {
            "contract": "StakingThales",
            "label": "distributeFeesEnabled",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:49"
          },
          {
            "contract": "StakingThales",
            "label": "fixedPeriodReward",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:50"
          },
          {
            "contract": "StakingThales",
            "label": "periodExtraReward",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:51"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXRewardsInPeriod",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:52"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXFeesInPeriod",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:53"
          },
          {
            "contract": "StakingThales",
            "label": "claimEnabled",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:54"
          },
          {
            "contract": "StakingThales",
            "label": "stakerLifetimeRewardsClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:56"
          },
          {
            "contract": "StakingThales",
            "label": "stakerFeesClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:57"
          },
          {
            "contract": "StakingThales",
            "label": "_totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:59"
          },
          {
            "contract": "StakingThales",
            "label": "_totalEscrowedAmount",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:60"
          },
          {
            "contract": "StakingThales",
            "label": "_totalPendingStakeAmount",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:61"
          },
          {
            "contract": "StakingThales",
            "label": "_totalUnclaimedRewards",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:62"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardsClaimed",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:63"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardFeesClaimed",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:64"
          },
          {
            "contract": "StakingThales",
            "label": "lastUnstakeTime",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:66"
          },
          {
            "contract": "StakingThales",
            "label": "unstaking",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:67"
          },
          {
            "contract": "StakingThales",
            "label": "unstakingAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:68"
          },
          {
            "contract": "StakingThales",
            "label": "_stakedBalances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:69"
          },
          {
            "contract": "StakingThales",
            "label": "_lastRewardsClaimedPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:70"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:71"
          },
          {
            "contract": "StakingThales",
            "label": "lastAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:80"
          },
          {
            "contract": "StakingThales",
            "label": "stakerAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3521_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:81"
          },
          {
            "contract": "StakingThales",
            "label": "extraRewardsActive",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:83"
          },
          {
            "contract": "StakingThales",
            "label": "ThalesStakingRewardsPool",
            "type": "t_contract(IThalesStakingRewardsPool)7737",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:84"
          },
          {
            "contract": "StakingThales",
            "label": "maxSNXRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:86"
          },
          {
            "contract": "StakingThales",
            "label": "maxAMMVolumeRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:87"
          },
          {
            "contract": "StakingThales",
            "label": "AMMVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:88"
          },
          {
            "contract": "StakingThales",
            "label": "maxThalesRoyaleRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:89"
          },
          {
            "contract": "StakingThales",
            "label": "SNXVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:94"
          },
          {
            "contract": "StakingThales",
            "label": "_lastStakingPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:96"
          },
          {
            "contract": "StakingThales",
            "label": "totalStakedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:98"
          },
          {
            "contract": "StakingThales",
            "label": "totalEscrowedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:99"
          },
          {
            "contract": "StakingThales",
            "label": "exoticBonds",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:100"
          },
          {
            "contract": "StakingThales",
            "label": "addressResolver",
            "type": "t_contract(IAddressResolver)6949",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:102"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMM",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:104"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:105"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:107"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3521_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:108"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesRangedAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:109"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3521_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:110"
          },
          {
            "contract": "StakingThales",
            "label": "lastExoticMarketsUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:111"
          },
          {
            "contract": "StakingThales",
            "label": "exoticMarketsVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3521_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:112"
          },
          {
            "contract": "StakingThales",
            "label": "lastSportsAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:113"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3521_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:114"
          },
          {
            "contract": "StakingThales",
            "label": "canClaimOnBehalf",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:116"
          },
          {
            "contract": "StakingThales",
            "label": "mergeAccountEnabled",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:118"
          },
          {
            "contract": "StakingThales",
            "label": "delegatedVolume",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:120"
          },
          {
            "contract": "StakingThales",
            "label": "supportedSportVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:121"
          },
          {
            "contract": "StakingThales",
            "label": "supportedAMMVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:122"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMLiquidityPool",
            "type": "t_contract(ISportsAMMLiquidityPool)7422",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:124"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMMLiquidityPool",
            "type": "t_contract(IThalesAMMLiquidityPool)7658",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:125"
          },
          {
            "contract": "StakingThales",
            "label": "stakingThalesBonusRewardsManager",
            "type": "t_contract(IStakingThalesBonusRewardsManager)7527",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:127"
          }
        ],
        "types": {
          "t_contract(IEscrowThales)7042": {
            "label": "contract IEscrowThales"
          },
          "t_contract(IERC20)10133": {
            "label": "contract IERC20"
          },
          "t_contract(ISNXRewards)7412": {
            "label": "contract ISNXRewards"
          },
          "t_contract(IThalesRoyale)7727": {
            "label": "contract IThalesRoyale"
          },
          "t_contract(IPriceFeed)7374": {
            "label": "contract IPriceFeed"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3521_storage)4_storage)": {
            "label": "mapping(address => struct StakingThales.AMMVolumeEntry[4])"
          },
          "t_array(t_struct(AMMVolumeEntry)3521_storage)4_storage": {
            "label": "struct StakingThales.AMMVolumeEntry[4]"
          },
          "t_struct(AMMVolumeEntry)3521_storage": {
            "label": "struct StakingThales.AMMVolumeEntry",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "period",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IThalesStakingRewardsPool)7737": {
            "label": "contract IThalesStakingRewardsPool"
          },
          "t_contract(IAddressResolver)6949": {
            "label": "contract IAddressResolver"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_contract(ISportsAMMLiquidityPool)7422": {
            "label": "contract ISportsAMMLiquidityPool"
          },
          "t_contract(IThalesAMMLiquidityPool)7658": {
            "label": "contract IThalesAMMLiquidityPool"
          },
          "t_contract(IStakingThalesBonusRewardsManager)7527": {
            "label": "contract IStakingThalesBonusRewardsManager"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4625e28cf883a54781af86dcbf78e1ec1bc97e0b284da27aeb888f8dd844dfe6": {
      "address": "0x40b6F43383ebA86D1884a566CE267923698cABB4",
      "txHash": "0x53d56c636e538e102e849b984482e373a0b66ed8d744289b469c34f101f88d03",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "thalesAMM",
            "type": "t_contract(IThalesAMM)78460",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:41"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:42"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:44"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:46"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:47"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:48"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:50"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:52"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:53"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:55"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:56"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:58"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:60"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:61"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:63"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:64"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:66"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:67"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:68"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:69"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:71"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)78302",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:73"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:75"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:77"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:79"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:81"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "onlyWhitelistedStakersAllowed",
            "type": "t_bool",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:83"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "whitelistedStakers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:85"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:87"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "marketAlreadyExercisedInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:89"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "roundClosingPrepared",
            "type": "t_bool",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:91"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "usersProcessedInRound",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:93"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "marketsProcessedInRound",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:95"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "withdrawalShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:97"
          }
        ],
        "types": {
          "t_contract(IThalesAMM)78460": {
            "label": "contract IThalesAMM"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)78302": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "700c3536e6b281f8889428662a48d666483f16d2e7826f33abcc83615e63fff3": {
      "address": "0x2473A031Db7BEdc5430527ea35bFc5b94E1eEcdA",
      "txHash": "0x7b79184585840e39a201bd0f1c553b5fbd8a8820612646eb31c42256d62d7dd6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "PositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:124"
          },
          {
            "contract": "PositionalMarketData",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:125"
          },
          {
            "contract": "PositionalMarketData",
            "label": "rangedMarketsAMM",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:126"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d5ee4f4647cb79e5121e93ecc92d4c4e59c3e9d46f31430e2e2cf89ddd8ffb38": {
      "address": "0x3A5dA5851a511600CBbf7788C3a034bE287ebB78",
      "txHash": "0xc9ff3d6b663235be2e0771c10883226aaa3bf1f7388e121e187d8cf1ce1c9cef",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "parlayAMM",
            "type": "t_contract(IParlayMarketsAMM)80561",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:42"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:43"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:45"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:47"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:48"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:50"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:52"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:54"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:55"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:57"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:58"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:60"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:62"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:63"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:65"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:66"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:68"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:69"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:70"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:71"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:73"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)81611",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:75"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:77"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:79"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:81"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:83"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "onlyWhitelistedStakersAllowed",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:85"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "whitelistedStakers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:87"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:89"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "marketAlreadyExercisedInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:91"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "roundClosingPrepared",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:93"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "usersProcessedInRound",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:95"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "withdrawalShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:97"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "parlayMarketRound",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:99"
          }
        ],
        "types": {
          "t_contract(IParlayMarketsAMM)80561": {
            "label": "contract IParlayMarketsAMM"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)81611": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b3f57758bd18eab9f293156b85b84b936b2a2fd49b29a83acee03f9541af21b2": {
      "address": "0xa475e7314f41D77FB800245DAC18Ee8a760a491F",
      "txHash": "0x39ab439de9e84497ca1b8891368a2fa492a2c1c2c1f07485bc45d0296fdfd51f",
      "layout": {
        "storage": [
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "DefaultLiquidityProvider",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/DefaultLiquidityProvider.sol:14"
          },
          {
            "contract": "DefaultLiquidityProvider",
            "label": "liquidityPool",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/DefaultLiquidityProvider.sol:19"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f97643578aba359a9144a85c53acec1f75bdc8c57c21aa75e7890fe5380f858a": {
      "address": "0x9f890F5AA090B4Bf4FB656CdA49A881F24aF279F",
      "txHash": "0x220257d29ef02d002cda526effaba7767f704a6c92f8bf94aecc4bf840529d9b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "parlayAMM",
            "type": "t_contract(IParlayMarketsAMM)13670",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:42"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)1472",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:43"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:45"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:47"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:48"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:50"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:52"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:54"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:55"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:57"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:58"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:60"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:62"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:63"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:65"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:66"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:68"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:69"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:70"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:71"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:73"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)14664",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:75"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:77"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:79"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:81"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:83"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "onlyWhitelistedStakersAllowed",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:85"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "whitelistedStakers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:87"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:89"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "marketAlreadyExercisedInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:91"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "roundClosingPrepared",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:93"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "usersProcessedInRound",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:95"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "withdrawalShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:97"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "parlayMarketRound",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:99"
          }
        ],
        "types": {
          "t_contract(IParlayMarketsAMM)13670": {
            "label": "contract IParlayMarketsAMM"
          },
          "t_contract(IERC20Upgradeable)1472": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)14664": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b8b07451282da2d3ad5bd7eba3ab058e0e09dc946a72af6cc8f2b8d8f29b1935": {
      "address": "0x801e4c61503A89A49cf80F77fbf195D80be77bEf",
      "txHash": "0x999dcc9f37bd8d80896958604072da2f6858a4f0601ad4a5dbc2cca734012e67",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)13881",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:39"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)13686",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)1233",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)13958",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)12427",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:44"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:52"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:55"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:60"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:62"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:63"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)14230_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)7452",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:69"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:71"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:72"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerGameCombination",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:75"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:79"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:81"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerPackedGamesCombination",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:83"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "SGPFeePerCombination",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:85"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayLP",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:87"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)13881": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)13686": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)1233": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)13958": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)12427": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)14230_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)7452": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => uint256))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          }
        }
      }
    },
    "413ab9a67764b6e2a34cd3b95c881601595602b952e531ace2f169842ee04a94": {
      "address": "0x3af823B8E13Dbb9310E8765D12ea5B3f28D4Ebbf",
      "txHash": "0xe45afd91f7f1fc36f3e0496b1dd48bead779da9aff0c5d6cb9d7adc514d9c396",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyPausable.sol:12"
          },
          {
            "contract": "StakingThales",
            "label": "iEscrowThales",
            "type": "t_contract(IEscrowThales)3453",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:36"
          },
          {
            "contract": "StakingThales",
            "label": "stakingToken",
            "type": "t_contract(IERC20)4652",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:37"
          },
          {
            "contract": "StakingThales",
            "label": "feeToken",
            "type": "t_contract(IERC20)4652",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:38"
          },
          {
            "contract": "StakingThales",
            "label": "SNXRewards",
            "type": "t_contract(ISNXRewards)3861",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:39"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRoyale",
            "type": "t_contract(IThalesRoyale)4187",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:40"
          },
          {
            "contract": "StakingThales",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)3823",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:41"
          },
          {
            "contract": "StakingThales",
            "label": "periodsOfStaking",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:43"
          },
          {
            "contract": "StakingThales",
            "label": "lastPeriodTimeStamp",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:44"
          },
          {
            "contract": "StakingThales",
            "label": "durationPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:45"
          },
          {
            "contract": "StakingThales",
            "label": "unstakeDurationPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:46"
          },
          {
            "contract": "StakingThales",
            "label": "startTimeStamp",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:47"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodRewards",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:48"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodFees",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:49"
          },
          {
            "contract": "StakingThales",
            "label": "distributeFeesEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:50"
          },
          {
            "contract": "StakingThales",
            "label": "fixedPeriodReward",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:51"
          },
          {
            "contract": "StakingThales",
            "label": "periodExtraReward",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:52"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXRewardsInPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:53"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXFeesInPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:54"
          },
          {
            "contract": "StakingThales",
            "label": "claimEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:55"
          },
          {
            "contract": "StakingThales",
            "label": "stakerLifetimeRewardsClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:57"
          },
          {
            "contract": "StakingThales",
            "label": "stakerFeesClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:58"
          },
          {
            "contract": "StakingThales",
            "label": "_totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:60"
          },
          {
            "contract": "StakingThales",
            "label": "_totalEscrowedAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:61"
          },
          {
            "contract": "StakingThales",
            "label": "_totalPendingStakeAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:62"
          },
          {
            "contract": "StakingThales",
            "label": "_totalUnclaimedRewards",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:63"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardsClaimed",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:64"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardFeesClaimed",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:65"
          },
          {
            "contract": "StakingThales",
            "label": "lastUnstakeTime",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:67"
          },
          {
            "contract": "StakingThales",
            "label": "unstaking",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:68"
          },
          {
            "contract": "StakingThales",
            "label": "unstakingAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:69"
          },
          {
            "contract": "StakingThales",
            "label": "_stakedBalances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:70"
          },
          {
            "contract": "StakingThales",
            "label": "_lastRewardsClaimedPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:71"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:72"
          },
          {
            "contract": "StakingThales",
            "label": "lastAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:81"
          },
          {
            "contract": "StakingThales",
            "label": "stakerAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)196_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:82"
          },
          {
            "contract": "StakingThales",
            "label": "extraRewardsActive",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:84"
          },
          {
            "contract": "StakingThales",
            "label": "ThalesStakingRewardsPool",
            "type": "t_contract(IThalesStakingRewardsPool)4197",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:85"
          },
          {
            "contract": "StakingThales",
            "label": "maxSNXRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:87"
          },
          {
            "contract": "StakingThales",
            "label": "maxAMMVolumeRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:88"
          },
          {
            "contract": "StakingThales",
            "label": "AMMVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:89"
          },
          {
            "contract": "StakingThales",
            "label": "maxThalesRoyaleRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:90"
          },
          {
            "contract": "StakingThales",
            "label": "SNXVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:95"
          },
          {
            "contract": "StakingThales",
            "label": "_lastStakingPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:97"
          },
          {
            "contract": "StakingThales",
            "label": "totalStakedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:99"
          },
          {
            "contract": "StakingThales",
            "label": "totalEscrowedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:100"
          },
          {
            "contract": "StakingThales",
            "label": "exoticBonds",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:101"
          },
          {
            "contract": "StakingThales",
            "label": "addressResolver",
            "type": "t_contract(IAddressResolver)3360",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:103"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:105"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:106"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:108"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)196_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:109"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesRangedAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:110"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)196_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:111"
          },
          {
            "contract": "StakingThales",
            "label": "lastExoticMarketsUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:112"
          },
          {
            "contract": "StakingThales",
            "label": "exoticMarketsVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)196_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:113"
          },
          {
            "contract": "StakingThales",
            "label": "lastSportsAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:114"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)196_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:115"
          },
          {
            "contract": "StakingThales",
            "label": "canClaimOnBehalf",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:117"
          },
          {
            "contract": "StakingThales",
            "label": "mergeAccountEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:119"
          },
          {
            "contract": "StakingThales",
            "label": "delegatedVolume",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:121"
          },
          {
            "contract": "StakingThales",
            "label": "supportedSportVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:122"
          },
          {
            "contract": "StakingThales",
            "label": "supportedAMMVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:123"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMLiquidityPool",
            "type": "t_contract(ISportsAMMLiquidityPool)3871",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:125"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMMLiquidityPool",
            "type": "t_contract(IThalesAMMLiquidityPool)4118",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:126"
          },
          {
            "contract": "StakingThales",
            "label": "stakingThalesBonusRewardsManager",
            "type": "t_contract(IStakingThalesBonusRewardsManager)3976",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:128"
          },
          {
            "contract": "StakingThales",
            "label": "parlayAMMLiquidityPool",
            "type": "t_contract(IParlayAMMLiquidityPool)3491",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:129"
          }
        ],
        "types": {
          "t_contract(IEscrowThales)3453": {
            "label": "contract IEscrowThales"
          },
          "t_contract(IERC20)4652": {
            "label": "contract IERC20"
          },
          "t_contract(ISNXRewards)3861": {
            "label": "contract ISNXRewards"
          },
          "t_contract(IThalesRoyale)4187": {
            "label": "contract IThalesRoyale"
          },
          "t_contract(IPriceFeed)3823": {
            "label": "contract IPriceFeed"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)196_storage)4_storage)": {
            "label": "mapping(address => struct StakingThales.AMMVolumeEntry[4])"
          },
          "t_array(t_struct(AMMVolumeEntry)196_storage)4_storage": {
            "label": "struct StakingThales.AMMVolumeEntry[4]"
          },
          "t_struct(AMMVolumeEntry)196_storage": {
            "label": "struct StakingThales.AMMVolumeEntry",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "period",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IThalesStakingRewardsPool)4197": {
            "label": "contract IThalesStakingRewardsPool"
          },
          "t_contract(IAddressResolver)3360": {
            "label": "contract IAddressResolver"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_contract(ISportsAMMLiquidityPool)3871": {
            "label": "contract ISportsAMMLiquidityPool"
          },
          "t_contract(IThalesAMMLiquidityPool)4118": {
            "label": "contract IThalesAMMLiquidityPool"
          },
          "t_contract(IStakingThalesBonusRewardsManager)3976": {
            "label": "contract IStakingThalesBonusRewardsManager"
          },
          "t_contract(IParlayAMMLiquidityPool)3491": {
            "label": "contract IParlayAMMLiquidityPool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f8e264807821ec2849abab88eef47899ccda4c42f0f2a912ef5ae70c0bde1858": {
      "address": "0x4D3C3D40A6d9f1A0896db3F24DE539858e74543f",
      "txHash": "0x01c6568772a17a14e3db0c84285548d016f1484d02930dfaff96c916a6aced54",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "parlayAMM",
            "type": "t_contract(IParlayMarketsAMM)80502",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:42"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:43"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:45"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:47"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:48"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:50"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:52"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:54"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:55"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:57"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:58"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:60"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:62"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:63"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:65"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:66"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:68"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:69"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:70"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:71"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:73"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)81552",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:75"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:77"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:79"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:81"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:83"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "onlyWhitelistedStakersAllowed",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:85"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "whitelistedStakers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:87"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:89"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "marketAlreadyExercisedInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:91"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "roundClosingPrepared",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:93"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "usersProcessedInRound",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:95"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "withdrawalShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:97"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "parlayMarketRound",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayLP/ParlayAMMLiquidityPool.sol:99"
          }
        ],
        "types": {
          "t_contract(IParlayMarketsAMM)80502": {
            "label": "contract IParlayMarketsAMM"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)81552": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
