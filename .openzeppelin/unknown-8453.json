{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x8FE726b27e89Cd484981B2D27160186920Af2d17",
    "txHash": "0x94c8417eb78f0eb2edb9c36e813d3dcceda739aac0d1985859c8cbb50ea60fda",
    "deployTransaction": {
      "hash": "0x94c8417eb78f0eb2edb9c36e813d3dcceda739aac0d1985859c8cbb50ea60fda",
      "type": 0,
      "accessList": null,
      "blockHash": "0x53203fa2e45d45191c5b18ac15c6c1a8fcdf9364e878964361f261fce199d317",
      "blockNumber": 2245559,
      "transactionIndex": 3,
      "confirmations": 2,
      "from": "0x9841484A4a6C0B61C4EEa71376D76453fd05eC9C",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x3b9aca00"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 2,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x44d4f4f7a314a39150050e535e3ec537efd1c99eaf794e50020e191273803428",
      "s": "0x1d836eedd4239f625fccf97beb2fb8483fd4b87038d59075bea3d76d9028c419",
      "v": 16941,
      "creates": "0x8FE726b27e89Cd484981B2D27160186920Af2d17",
      "chainId": 8453
    }
  },
  "proxies": [
    {
      "address": "0x85b827d133FEDC36B844b20f4a198dA583B25BAA",
      "txHash": "0x07c54c1789b24fe9aabb52306caf7cc986832d2ea43e130007e8dd06b3f024ea",
      "kind": "transparent"
    },
    {
      "address": "0x5B5DbF38a1fcf63B58d263648EBb63b53c1de3E7",
      "txHash": "0xa5d271907bcf0300bae9cabf9aa099288d3ec96544ad94496ae167177379543d",
      "kind": "transparent"
    },
    {
      "address": "0xc62E56E756a3D14ffF838e820F38d845a16D49dE",
      "txHash": "0xc87b0eb5b6c76040be8c2e56b316ae0642c17ce58ebcb92143a1fcb44f952096",
      "kind": "transparent"
    },
    {
      "address": "0x7F6fB7CB277fa68972F350CE426ef9090821bd5e",
      "txHash": "0x5c7a4de55e1d62d218d40399e04f2e42bd6c2d82950035a94c5e1ef3d2801a5d",
      "kind": "transparent"
    },
    {
      "address": "0xe8e022405505a9F2b0B7452C844F1e64423849fC",
      "txHash": "0x7a09c5dcf42b85d10067d3b3fbfd23ab3ca232329d47d72e91ae6cf492c94ffc",
      "kind": "transparent"
    },
    {
      "address": "0xe41cD3A25CBdeDA0BC46D48C380393D953bD2034",
      "txHash": "0xe850d920d2b61f0a5b7c3e643fadb7d705a581f06884019481d59a515ca24a81",
      "kind": "transparent"
    },
    {
      "address": "0xB8109ac56EE572990e6d2C6b4648042bB1C33317",
      "txHash": "0x49d9b1bf48dacfbf724fd8cc1ccf1d8834511ee14e44c60a8034a42244dde98e",
      "kind": "transparent"
    },
    {
      "address": "0x5713ab44042D92C642444bd2F0fee9c2336F9E3b",
      "txHash": "0xc27724d9b18f4ba3f30df4bfa7cd9a1bdd5aca577d49d80c3ae03488c7224c80",
      "kind": "transparent"
    },
    {
      "address": "0xcF05d2Fa3013bB78256341e1FB9b1F40D48b4c72",
      "txHash": "0x7696500f824dd83ef8ad2ec0759203aade7e5b63738d8d0df681d60ec9122a8a",
      "kind": "transparent"
    },
    {
      "address": "0x33bf0378242c7C814942197ea4AE584b52681197",
      "txHash": "0x0b3073fd59f5514b6793f977e7633e9bb317e5535885bcd88a80319f046ffae0",
      "kind": "transparent"
    },
    {
      "address": "0x5C64A0bE3cf1f5655d28C80353eE7f5Bd8326a83",
      "txHash": "0x2174ed96ff0cf16926fe63aef390ae37ddef5e0f152c8acf03785d010a0e6923",
      "kind": "transparent"
    },
    {
      "address": "0x42792eFed59F628495dD9F5E2190819468ce0934",
      "txHash": "0x56eee04881605547befe329b87d740291da7aa35ae5bd586e957a6a3db485408",
      "kind": "transparent"
    },
    {
      "address": "0x22Eb15Fb53B61B470cabbe9fC268a1b67E675ff9",
      "txHash": "0x7347ccc155b0eec24234e2d83f08140a5f7590b36cc67c00fe2596c29a4c044f",
      "kind": "transparent"
    },
    {
      "address": "0x29dfc5fee05578CD913c75fF1C7A0d315595939A",
      "txHash": "0x6bcfe46b6558dd4dcb17a792af03c3d2c0dee1dd4bcc544df6f4a92359b969e0",
      "kind": "transparent"
    },
    {
      "address": "0x84aB38e42D8Da33b480762cCa543eEcA6135E040",
      "txHash": "0xbc8a2a8800849fd7474658fafb6a8bc2eea1093fd2301e5233cfa911679dd9c8",
      "kind": "transparent"
    },
    {
      "address": "0xa7687F6E94297BeC394b2e3B7AC54A4fd7bD1C40",
      "txHash": "0xac0f3be3ea5016ee6cef7cb2151bf79266d410e81e9d93586bb0d1621e36beec",
      "kind": "transparent"
    },
    {
      "address": "0xA851554aA5f97b3DcA6486683b2da02d5a6a75dd",
      "txHash": "0xf118513b687060abefab874417e78d38fb892657fe2f4f1aeaf70096083fe8c3",
      "kind": "transparent"
    },
    {
      "address": "0xB0EE5C967F209f24f7eF30c2C6Da38346a87E089",
      "txHash": "0xc7776431a5e47a6cf485a3a11c799841ae223ec211a8c65f49ef04050cadb11f",
      "kind": "transparent"
    },
    {
      "address": "0xEB4fBF2C6939787e2b9e00C45115eF90631F637c",
      "txHash": "0xdc23091e08e303a2371f375e0fa2829ad5f16c17ad2430a80be7f8407b437afb",
      "kind": "transparent"
    },
    {
      "address": "0xeaeA85745698a3400E21951e8F86275231ad8F12",
      "txHash": "0xb4d36259cb5bdca77ddd578470693b40e05d4547a38e7e0adc4d4585c1b22386",
      "kind": "transparent"
    },
    {
      "address": "0x3d4139934d7C54dF2b969C2a40029C869b7a8Cfb",
      "txHash": "0xdcc1acfc1a82caa28a1546663119a1990ccf14d4e922d95bcc7e4bd5494d41da",
      "kind": "transparent"
    },
    {
      "address": "0x1321F40BEadd825bB66583A420C4043A22d3F172",
      "txHash": "0x27accb12d2754542db91c82aee98097ce24e01f44d8d8a3dbba3ca97d93f306b",
      "kind": "transparent"
    },
    {
      "address": "0xc5ba777202F117dcc28012370B1f67a430c771DA",
      "txHash": "0xadc30a3f64da10160daf1e02980ac636404e8cc1894afd145ca0ca51733f56cb",
      "kind": "transparent"
    },
    {
      "address": "0x62D4d74337021D5964125ED49cE33c48d564616d",
      "txHash": "0x399401858fc1eb7b59d64dc09c71317d483e7b4d4e777bb3f51e5152e922ac36",
      "kind": "transparent"
    },
    {
      "address": "0xAFD339acf24813e8038bfdF19A8d87Eb94B4605d",
      "txHash": "0xe36fe046f67fbcdc20d4f98171ab01c0a347b470d323d74df30328888ab719f0",
      "kind": "transparent"
    },
    {
      "address": "0xF9091C4F9c990c4fAf656F44D1bbbD849a66f330",
      "txHash": "0xfb23282933fab45d21ce64db16a97280225e7b49099e56277cce4618c17886af",
      "kind": "transparent"
    },
    {
      "address": "0xF74cB7ccD51679515FCB49c79ab23018574f0482",
      "txHash": "0x60554d43cc692f9f45c2efe37cbc10946773a27d1f62dadfde8a63f4f7231a5e",
      "kind": "transparent"
    },
    {
      "address": "0x0b82E4Db2971829bB13db8Bf87118C065480fd10",
      "txHash": "0x662a73eff4d761a7c8d9bd58515b5e994204807f833da4da39a6fafe8a73dabd",
      "kind": "transparent"
    },
    {
      "address": "0x25E9513a00d53e8a0CB2005A48fB0031F6141325",
      "txHash": "0xd0c071cb5024af36b8ac29fa1ea0f3f4e2d5aaa0d0d8925ede9882816371ec8d",
      "kind": "transparent"
    },
    {
      "address": "0x9C5eF89d6Ecb2242e81836eb874Dba9068c4361D",
      "txHash": "0xac28286b93ab7fd0246f4c91d5fe8157b27184c2f00229aede81b75f7f82e707",
      "kind": "transparent"
    },
    {
      "address": "0x5625c3233b52206a5f23c5fC1Ce16F6A7e3874dd",
      "txHash": "0x8dd2413105a9b7dc743ac260b79736dcf96a9bc918ddd4054e7ca3b7f1b4e800",
      "kind": "transparent"
    },
    {
      "address": "0x6286E16e22B14c840e71852c81f50E5e3001753a",
      "txHash": "0xf8f4523c6b5ad77fe85526f43d13b9e117f0e07974f24c685e31fe65a964304d",
      "kind": "transparent"
    },
    {
      "address": "0x8B9818D1E88EeE1c48Ae908855C5DfE4Cab6b868",
      "txHash": "0x3268541b55b8263832972a7f759468a10609d854a1a372c1a81b7cf5b67c0691",
      "kind": "transparent"
    },
    {
      "address": "0x46005F3C5a6BD95df00CfA53988C79A17E56D060",
      "txHash": "0x05969e084872f89a6af02304ccd3d8966d0ea900a029309f9e4bc7c324e2d093",
      "kind": "transparent"
    },
    {
      "address": "0x53c1A5702B79dC7e89Bfa0f027474d25fB236fEB",
      "txHash": "0xe5201267db36a1fd08fd074d5133a1735a44adc915c10d175d9c2c40a123c304",
      "kind": "transparent"
    },
    {
      "address": "0x77636296bCb47a730aAfA9f9F12706943721A787",
      "txHash": "0xc60e7b05f2f4e52d2a85b3d90188bc5dbdf4e9e709aac5b66320a8a36fdeff7b",
      "kind": "transparent"
    },
    {
      "address": "0xd7718Fb45Df5Cef74793444DAC32EB43ab9C41E8",
      "txHash": "0x99c66c8b845afbabc103aeb71e2fb17373c5465c0560fc8bb8647ac4f02efe84",
      "kind": "transparent"
    },
    {
      "address": "0x27ee8c0044696CEf5B390FEbf08F732446b13FA1",
      "txHash": "0xe0f20a0eed278dc859aea54c76d60c74dcec9a396d93e80d5a8de8d96e1a48ef",
      "kind": "transparent"
    },
    {
      "address": "0x9e244C353145018DA0885E5405f680f27F8eB0Fa",
      "txHash": "0x728a6ee6311e4f6ef4794614d6064e18c1dc0fa269a9c9bb87619cdde9b3e721",
      "kind": "transparent"
    },
    {
      "address": "0x860C4DD827DdDd98755e0843b89d909f5A0347Ff",
      "txHash": "0x0b0ac46dc6e6228119f1f9c44477c59d4ebe75597c07d89d5819533377cc2df6",
      "kind": "transparent"
    },
    {
      "address": "0x4d0192E2fE94687838Eaa3BcbC3B891964B38a9D",
      "txHash": "0x80aa0598f70174c116d2957edc0f0d8028f50b74584bffd123811e810efbf4b4",
      "kind": "transparent"
    },
    {
      "address": "0xE1A9ed7922b78Bcb2b0df66371CCb93bb70dC08d",
      "txHash": "0x62ea4226a2bf0f9bba66f7143bf8086f96e1c88fa3f0d21140bd96735ba8f5d9",
      "kind": "transparent"
    },
    {
      "address": "0x3daFD49175AA9e1D71FD94Ec194da813a2cD5741",
      "txHash": "0x0c03eaadd0a10a3fdfcd4fefb1b98589129a1e66592f081b3162433662a3d0d9",
      "kind": "transparent"
    },
    {
      "address": "0xd02339EfD17c3c02Bdb88abbA24Ad2A1b360a88E",
      "txHash": "0xfe21b3c6d626cf5ef2ba7a00be4ea6e95c5287d6bc09a0dc7d7d35786e1b5e1a",
      "kind": "transparent"
    },
    {
      "address": "0x0946BfE3c543e0B770B7F7e508c8A566947C4278",
      "txHash": "0x2a173ac892281edab2b051956dee659b3a07be38d35a5b9a7352904779345e0a",
      "kind": "transparent"
    },
    {
      "address": "0xD6155E7C948458D6Ab58f9D63E1566493b9304C1",
      "txHash": "0x68fd1f02519fd821f6805335556e12d6ee9a1c9e58a46ded1df458c6f699eec7",
      "kind": "transparent"
    },
    {
      "address": "0x6880b6fc24Ac20a9081FfA39B1A504A44BAEB2dE",
      "txHash": "0x0f06e2270ee03e056e4fc8e1edd9e78f0906a4392cf022c4568657022666face",
      "kind": "transparent"
    },
    {
      "address": "0x6848F001ddDb4442d352C495c7B4a231e3889b70",
      "txHash": "0x98f2bdc0c1ed64e57ab50d2a4ba3aee3e5da24f492aaab7aafcbaeb79c0f7e05",
      "kind": "transparent"
    },
    {
      "address": "0xE2A98958E33E0110344DDeeF08eF42BA9D553050",
      "txHash": "0x382e05b1d83f3adcfd64e058174b0ac81bc42d1d80dc7030c699861cc780f97e",
      "kind": "transparent"
    },
    {
      "address": "0x25f29136801b0Eac63C586FFD249B49F1d96DB9c",
      "txHash": "0xffa4159b977d9b52059f6b96b2823d9e9bb7024e9e6f14d9ad426550b702d0e9",
      "kind": "transparent"
    },
    {
      "address": "0x51c2589084488077318E43837B29C165d98A9152",
      "txHash": "0xc992a10d230af55b685032f5d6de2bb85e6f848c319e2ae7774a818342749fd7",
      "kind": "transparent"
    },
    {
      "address": "0x6B5FE966Ea9B05d8E628E772B0b745734D069983",
      "txHash": "0x0eb2c9ef1f6363d62fa82470b895fd4b63b13fb5a1bebeb3998f9f69950fab2e",
      "kind": "transparent"
    },
    {
      "address": "0x8B691621d39cC83E2B0079DE5eed9D14d27F3745",
      "txHash": "0x8af9fefafec759bb793eb49bb383002e7ce7530bf849526c47d010bde35c815d",
      "kind": "transparent"
    },
    {
      "address": "0x4471F16BB87aAa69a50D5F97937155eCE8aa94B8",
      "txHash": "0x24705703ee9980ad7f885a23cb0c1b79061d1c57cf8b257ed2943b705029cb58",
      "kind": "transparent"
    },
    {
      "address": "0xDA3Bb7c9909d50835Bff184fefa8afdd25B3d7aA",
      "txHash": "0x090aa40605ff944912f531ae7cacfb5a2ed64d2d98f7e469580a5b38b81adc68",
      "kind": "transparent"
    },
    {
      "address": "0x629F065DFDD9141Dec49782E25Bf2B7E510585E6",
      "txHash": "0x6a8463e06c5ea609c779974d64559e1c3dd147a00a915dcbf074eef8903fa3de",
      "kind": "transparent"
    }
  ],
  "impls": {
    "4ee4608867a4f3eb50922a70a34c0640761566038f951b1d3aa47dd157f9ab6e": {
      "address": "0x72ca0765d4bE0529377d656c9645600606214610",
      "txHash": "0x6bb5d3732291b66dc22215dd7b97c59ad3c8dcc4dea4a20ee81fd00760749df7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)3633_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:34"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)3633_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:35"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)470",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:39"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:41"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:43"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFee",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:44"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:46"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "supportedAsset",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:48"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minimalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:50"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:51"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:53"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:54"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:56"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:57"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "assetToPythId",
            "type": "t_mapping(t_bytes32,t_bytes32)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:59"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "pyth",
            "type": "t_contract(IPyth)1502",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:62"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelay",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:64"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)3623",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:67"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)3633_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:69"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)3633_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:70"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:85"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)3546",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:86"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:87"
          }
        ],
        "types": {
          "t_struct(AddressSet)3633_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)470": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_contract(IPyth)1502": {
            "label": "contract IPyth"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(IStakingThales)3623": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_struct(AddressSet)3633_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(IMultiCollateralOnOffRamp)3546": {
            "label": "contract IMultiCollateralOnOffRamp"
          }
        }
      }
    },
    "4eb4608867a4f3eb50922a70a34c0640761566038f951b1d3aa47dd157f9ab6e": {
      "address": "0x47Da40be6B617d0199ADF1Ec3550f3875b246124",
      "txHash": "0x3e08a81db3a712c8a2bc925546cf431a1869101ed9f17729bec0e97824f67a84",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)3633_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:34"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)3633_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:35"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)470",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:39"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:41"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:43"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFee",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:44"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:46"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "supportedAsset",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:48"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minimalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:50"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:51"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:53"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:54"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:56"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:57"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "assetToPythId",
            "type": "t_mapping(t_bytes32,t_bytes32)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:59"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "pyth",
            "type": "t_contract(IPyth)1502",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:62"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelay",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:64"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)3623",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:67"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)3633_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:69"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)3633_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:70"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:85"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)3546",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:86"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:87"
          }
        ],
        "types": {
          "t_struct(AddressSet)3633_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)470": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_contract(IPyth)1502": {
            "label": "contract IPyth"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(IStakingThales)3623": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_struct(AddressSet)3633_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(IMultiCollateralOnOffRamp)3546": {
            "label": "contract IMultiCollateralOnOffRamp"
          }
        }
      }
    },
    "f65f704df0bcab4480625000387e773c695b18bcf9dfb81b250716608c4b653b": {
      "address": "0x24505B4b0a31A2765FC861dd4D8Dc6157d759b73",
      "txHash": "0xcb98a768646f7a1e2c4b1b01211942cf52689b59d23c6ec10e014a0b2f25995a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)92041_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:34"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)92041_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:35"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:39"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:41"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:43"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFee",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:44"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:46"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "supportedAsset",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:48"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minimalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:50"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:51"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:53"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:54"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:56"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:57"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "assetToPythId",
            "type": "t_mapping(t_bytes32,t_bytes32)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:59"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "pyth",
            "type": "t_contract(IPyth)12062",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:62"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelay",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:64"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)86174",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:67"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)92041_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:69"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)92041_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:70"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:85"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)84815",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:86"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:87"
          }
        ],
        "types": {
          "t_struct(AddressSet)92041_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_contract(IPyth)12062": {
            "label": "contract IPyth"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(IStakingThales)86174": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_struct(AddressSet)92041_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(IMultiCollateralOnOffRamp)84815": {
            "label": "contract IMultiCollateralOnOffRamp"
          }
        }
      }
    },
    "961d32661b29dc70ee28207ee8f57037008a6d0ad2a9fc00ffeca45dc21cd521": {
      "address": "0x1751dDCE8D8B917223e05D8bD015dfb81bF1fcf2",
      "txHash": "0xb6bda055b933664dd8f467b997ddf6d40850e11459ee92d26e9c2053e9071c25",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "durations",
            "type": "t_struct(Durations)31370_storage",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:47"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "capitalRequirement",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:48"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketCreationEnabled",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:50"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "customMarketCreationEnabled",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:51"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "onlyWhitelistedAddressesCanCreateMarkets",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:53"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:54"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:56"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)92126_storage",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:58"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)92126_storage",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:59"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "_migratingManager",
            "type": "t_contract(PositionalMarketManager)33062",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:61"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)85534",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:63"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "sUSD",
            "type": "t_contract(IERC20)4879",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:64"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "positionalMarketFactory",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:66"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:68"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "timeframeBuffer",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:70"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "priceBuffer",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:71"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketsPerOracleKey",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_array(t_address)dyn_storage))",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:73"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketsStrikePrice",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:74"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "onlyAMMMintingAndBurning",
            "type": "t_bool",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:76"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketCreationMonthLimit",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:78"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "allowedDate1",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:80"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "allowedDate2",
            "type": "t_uint256",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:81"
          },
          {
            "contract": "PositionalMarketManager",
            "label": "marketExistsByOracleKeyDateAndStrikePrice",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))",
            "src": "contracts\\Positions\\PositionalMarketManager.sol:83"
          }
        ],
        "types": {
          "t_struct(Durations)31370_storage": {
            "label": "struct PositionalMarketManager.Durations",
            "members": [
              {
                "label": "expiryDuration",
                "type": "t_uint256"
              },
              {
                "label": "maxTimeToMaturity",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(AddressSet)92126_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(PositionalMarketManager)33062": {
            "label": "contract PositionalMarketManager"
          },
          "t_contract(IPriceFeed)85534": {
            "label": "contract IPriceFeed"
          },
          "t_contract(IERC20)4879": {
            "label": "contract IERC20"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_array(t_address)dyn_storage))": {
            "label": "mapping(bytes32 => mapping(uint256 => address[]))"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))": {
            "label": "mapping(bytes32 => mapping(uint256 => mapping(uint256 => address)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint256 => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          }
        }
      }
    },
    "24b1c72502fdd5bb8e5793c1ac671b4b566a14dbb22fe73f740dc4b3a353d753": {
      "address": "0xB72f87AA15E8FE50Ed364eB4A94486A578fc1556",
      "txHash": "0xb1061f1f0645c029441992f6a2460b1f32dd9a546d453d462c319399a80d3c05",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "PriceFeed",
            "label": "aggregators",
            "type": "t_mapping(t_bytes32,t_contract(AggregatorV2V3Interface)141)",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:23"
          },
          {
            "contract": "PriceFeed",
            "label": "currencyKeyDecimals",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:25"
          },
          {
            "contract": "PriceFeed",
            "label": "aggregatorKeys",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:27"
          },
          {
            "contract": "PriceFeed",
            "label": "currencyKeys",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:30"
          },
          {
            "contract": "PriceFeed",
            "label": "pools",
            "type": "t_mapping(t_bytes32,t_contract(IUniswapV3Pool)12311)",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:31"
          },
          {
            "contract": "PriceFeed",
            "label": "twapInterval",
            "type": "t_int56",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:33"
          },
          {
            "contract": "PriceFeed",
            "label": "_ETH",
            "type": "t_address",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:40"
          },
          {
            "contract": "PriceFeed",
            "label": "_wETH",
            "type": "t_address",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:41"
          },
          {
            "contract": "PriceFeed",
            "label": "useLastTickForTWAP",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:43"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_contract(AggregatorV2V3Interface)141)": {
            "label": "mapping(bytes32 => contract AggregatorV2V3Interface)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(AggregatorV2V3Interface)141": {
            "label": "contract AggregatorV2V3Interface"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_contract(IUniswapV3Pool)12311)": {
            "label": "mapping(bytes32 => contract IUniswapV3Pool)"
          },
          "t_contract(IUniswapV3Pool)12311": {
            "label": "contract IUniswapV3Pool"
          },
          "t_int56": {
            "label": "int56"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "24b1a72502fdd5bb8e5793c1ac671b4b566a14dbb22fe73f740dc4b3a353d753": {
      "address": "0x9c00d8154Bb66372684f81873a76656eD0B1CBeD",
      "txHash": "0x67ee30b8597474171bac8a69966e969256a73062b88f721fafab16878c254dfc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "PriceFeed",
            "label": "aggregators",
            "type": "t_mapping(t_bytes32,t_contract(AggregatorV2V3Interface)141)",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:23"
          },
          {
            "contract": "PriceFeed",
            "label": "currencyKeyDecimals",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:25"
          },
          {
            "contract": "PriceFeed",
            "label": "aggregatorKeys",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:27"
          },
          {
            "contract": "PriceFeed",
            "label": "currencyKeys",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:30"
          },
          {
            "contract": "PriceFeed",
            "label": "pools",
            "type": "t_mapping(t_bytes32,t_contract(IUniswapV3Pool)12311)",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:31"
          },
          {
            "contract": "PriceFeed",
            "label": "twapInterval",
            "type": "t_int56",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:33"
          },
          {
            "contract": "PriceFeed",
            "label": "_ETH",
            "type": "t_address",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:40"
          },
          {
            "contract": "PriceFeed",
            "label": "_wETH",
            "type": "t_address",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:41"
          },
          {
            "contract": "PriceFeed",
            "label": "useLastTickForTWAP",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:43"
          },
          {
            "contract": "PriceFeed",
            "label": "staticPricePerAsset",
            "type": "t_mapping(t_bytes32,t_struct(RateAndUpdatedTime))",
            "src": "contracts\\PriceFeed\\PriceFeed.sol:45"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_contract(AggregatorV2V3Interface)141)": {
            "label": "mapping(bytes32 => contract AggregatorV2V3Interface)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(AggregatorV2V3Interface)141": {
            "label": "contract AggregatorV2V3Interface"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_contract(IUniswapV3Pool)12311)": {
            "label": "mapping(bytes32 => contract IUniswapV3Pool)"
          },
          "t_contract(IUniswapV3Pool)12311": {
            "label": "contract IUniswapV3Pool"
          },
          "t_int56": {
            "label": "int56"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint216": {
            "label": "uint216"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_struct(RateAndUpdatedTime)": {
            "label": "struct RateAndUpdatedTime",
            "members": [
              {
                "label": "rate",
                "type": "t_uint216"
              },
              {
                "label": "time",
                "type": "t_uint40"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RateAndUpdatedTime))": {
            "label": "mapping(bytes32 => struct RateAndUpdatedTime)"
          }
        }
      }
    },
    "21aba925da87e570c420640add6bc5eb32ecd94bda1c3a6902d139d2f4718ae2": {
      "address": "0x6A281C614f0D106E630CA84DCf6ab143813F16Cf",
      "txHash": "0xee2e7136872f4287244d39a1eaf393eafb3574a9afe672e373e78dcea840f574",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "PositionalMarketFactory",
            "label": "positionalMarketManager",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketFactory.sol:20"
          },
          {
            "contract": "PositionalMarketFactory",
            "label": "positionalMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketFactory.sol:22"
          },
          {
            "contract": "PositionalMarketFactory",
            "label": "positionMastercopy",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketFactory.sol:23"
          },
          {
            "contract": "PositionalMarketFactory",
            "label": "limitOrderProvider",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketFactory.sol:25"
          },
          {
            "contract": "PositionalMarketFactory",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketFactory.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a44428d978af8d452ca5af22e4d1c68cf53ecbd1febed23a642c6cd18c0158c2": {
      "address": "0x4AA471CA56A6188d50D0b401b982ed286aC098d7",
      "txHash": "0x26514db5ca64f490f752994fed2cabde819339ac53b3cc7d8c028a461db2fa9c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "thalesAmm",
            "type": "t_contract(IThalesAMM)86477",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:39"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "rangedAmmFee",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:41"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "createdRangedMarkets",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:43"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)92174_storage",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:44"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "rangedMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:46"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "rangedPositionMastercopy",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:47"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:49"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "spentOnMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:51"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "capPerMarket",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:54"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "minSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:56"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "maxSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:57"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:59"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:60"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "minimalDifBetweenStrikes",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:62"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)86307",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:64"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "maximalDifBetweenStrikes",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:66"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:68"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:69"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)84565",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:71"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:73"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:74"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:75"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:77"
          },
          {
            "contract": "RangedMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\RangedMarkets\\RangedMarketsAMM.sol:78"
          }
        ],
        "types": {
          "t_contract(IThalesAMM)86477": {
            "label": "contract IThalesAMM"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_struct(AddressSet)92174_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)86307": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)84565": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e992ac19559c607e9066e89d8182d101646472832827346045da2b97184ef6b5": {
      "address": "0x261C4500a87f0203cE5EB6706645f7f1bd614B5d",
      "txHash": "0x209079833e0c9103ba5fbac41cb1ab0b279298c369060ee0275d1d8b4d884094",
      "layout": {
        "storage": [
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:10"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:63"
          },
          {
            "contract": "SafeBox",
            "label": "sUSD",
            "type": "t_contract(IERC20)10198",
            "src": "contracts\\AMM\\SafeBox.sol:10"
          }
        ],
        "types": {
          "t_contract(IERC20)10198": {
            "label": "contract IERC20"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "471100d7c5cfb4b30452a2ef1182f1cfc17382f4c3a106e2c0dea03fd88b5e80": {
      "address": "0x9B91d27568c51cEf3C4E04D504EF3CE11D5f2427",
      "txHash": "0x85e27417b9069370f2795be429122b23296c68d346ef5253c8a4730a0ba78c0a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ThalesAMM",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)85582",
            "src": "contracts\\AMM\\ThalesAMM.sol:46"
          },
          {
            "contract": "ThalesAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\AMM\\ThalesAMM.sol:47"
          },
          {
            "contract": "ThalesAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:48"
          },
          {
            "contract": "ThalesAMM",
            "label": "capPerMarket",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:50"
          },
          {
            "contract": "ThalesAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:51"
          },
          {
            "contract": "ThalesAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:52"
          },
          {
            "contract": "ThalesAMM",
            "label": "impliedVolatilityPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:54"
          },
          {
            "contract": "ThalesAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:56"
          },
          {
            "contract": "ThalesAMM",
            "label": "spentOnMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:58"
          },
          {
            "contract": "ThalesAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:60"
          },
          {
            "contract": "ThalesAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:61"
          },
          {
            "contract": "ThalesAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)86307",
            "src": "contracts\\AMM\\ThalesAMM.sol:63"
          },
          {
            "contract": "ThalesAMM",
            "label": "minSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:65"
          },
          {
            "contract": "ThalesAMM",
            "label": "maxSupportedPrice",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:66"
          },
          {
            "contract": "ThalesAMM",
            "label": "_capPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:68"
          },
          {
            "contract": "ThalesAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\ThalesAMM.sol:70"
          },
          {
            "contract": "ThalesAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:72"
          },
          {
            "contract": "ThalesAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:73"
          },
          {
            "contract": "ThalesAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)84565",
            "src": "contracts\\AMM\\ThalesAMM.sol:75"
          },
          {
            "contract": "ThalesAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:77"
          },
          {
            "contract": "ThalesAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:78"
          },
          {
            "contract": "ThalesAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\AMM\\ThalesAMM.sol:79"
          },
          {
            "contract": "ThalesAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\AMM\\ThalesAMM.sol:81"
          },
          {
            "contract": "ThalesAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\AMM\\ThalesAMM.sol:83"
          },
          {
            "contract": "ThalesAMM",
            "label": "ammUtils",
            "type": "t_contract(IThalesAMMUtils)86602",
            "src": "contracts\\AMM\\ThalesAMM.sol:85"
          },
          {
            "contract": "ThalesAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:90"
          },
          {
            "contract": "ThalesAMM",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\ThalesAMM.sol:91"
          },
          {
            "contract": "ThalesAMM",
            "label": "liquidityPool",
            "type": "t_contract(ThalesAMMLiquidityPool)16393",
            "src": "contracts\\AMM\\ThalesAMM.sol:93"
          }
        ],
        "types": {
          "t_contract(IPriceFeed)85582": {
            "label": "contract IPriceFeed"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)86307": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ICurveSUSD)84565": {
            "label": "contract ICurveSUSD"
          },
          "t_contract(IThalesAMMUtils)86602": {
            "label": "contract IThalesAMMUtils"
          },
          "t_contract(ThalesAMMLiquidityPool)16393": {
            "label": "contract ThalesAMMLiquidityPool"
          }
        }
      }
    },
    "3e364890dad66cb03027936391370a755e3fa1d3f150d3d54b7fda3d6ddacb75": {
      "address": "0xaC47c388d52C443Fd854848Ef1fA57171679e7B1",
      "txHash": "0xa4bc27ca9db116e14470156fd190385170a7b41de602bc1e23cad15a1f6c4f64",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)3664_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:34"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)3664_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:35"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)470",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:39"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:41"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:43"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFee",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:44"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:46"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "supportedAsset",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:48"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minimalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:50"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:51"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:53"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:54"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:56"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:57"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "assetToPythId",
            "type": "t_mapping(t_bytes32,t_bytes32)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:59"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "pyth",
            "type": "t_contract(IPyth)1502",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:62"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelay",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:64"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)3654",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:67"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)3664_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:69"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)3664_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:70"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:85"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)3577",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:86"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:87"
          }
        ],
        "types": {
          "t_struct(AddressSet)3664_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)470": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_contract(IPyth)1502": {
            "label": "contract IPyth"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(IStakingThales)3654": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_struct(AddressSet)3664_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(IMultiCollateralOnOffRamp)3577": {
            "label": "contract IMultiCollateralOnOffRamp"
          }
        }
      }
    },
    "4625e28cf883a54781af86dcbf78e1ec1bc97e0b284da27aeb888f8dd844dfe6": {
      "address": "0xa5665909A05B1fDe235F6e5aC6Cc16a1502e57b9",
      "txHash": "0x3e1b19bb9d970f11446290b6fbc214f157e81a07ab0b908f4c3a67bbd0948199",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "thalesAMM",
            "type": "t_contract(IThalesAMM)86670",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:41"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:42"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:44"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:46"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:47"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:48"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:50"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:52"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:53"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:55"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:56"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:58"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:60"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:61"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:63"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:64"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:66"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:67"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:68"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:69"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:71"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)86500",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:73"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:75"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:77"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:79"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:81"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "onlyWhitelistedStakersAllowed",
            "type": "t_bool",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:83"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "whitelistedStakers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:85"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:87"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "marketAlreadyExercisedInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:89"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "roundClosingPrepared",
            "type": "t_bool",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:91"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "usersProcessedInRound",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:93"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "marketsProcessedInRound",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:95"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "withdrawalShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:97"
          }
        ],
        "types": {
          "t_contract(IThalesAMM)86670": {
            "label": "contract IThalesAMM"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)86500": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e91a713fe766f3e5c795d9a3d446e2f321d35f712872bec0bb7cf15667351566": {
      "address": "0xAc724BeC64aD7591f2e6DdB5FA57F4eadb78eE6C",
      "txHash": "0x8f3c2f03238d3ff98cc01ead8c59824faf99931cef7fd7acd299bd0039cfd1e6",
      "layout": {
        "storage": [
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ThalesAMMDefaultLiquidityProvider",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMDefaultLiquidityProvider.sol:14"
          },
          {
            "contract": "ThalesAMMDefaultLiquidityProvider",
            "label": "liquidityPool",
            "type": "t_address",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMDefaultLiquidityProvider.sol:19"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7206402cf47a9d785ea088c28ee652281ab00ae6ebe36e53e9b1be12a36da82a": {
      "address": "0xa234095bC421B97c1FE104331edc5299A60485C9",
      "txHash": "0xd2a1cb8574a52a692f5fcda8e5d05c663154cbfdf21fbf43ed9eebdcbfcfb001",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "ecd9e13988bb9e30552f69766e14d43e83b834d8315a7d6fcf9e52e3ad246fe9": {
      "address": "0xE6BFFd75906E2B23ACe1cFdDDF106BD6dC4b71B5",
      "txHash": "0x5a35f3ef5b6e29a3348ad6b42a82cf11fd55a89a90f884dc333f482a68682511",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "Referrals",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\Referrals.sol:21"
          },
          {
            "contract": "Referrals",
            "label": "referrals",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts\\AMM\\Referrals.sol:22"
          },
          {
            "contract": "Referrals",
            "label": "referralStarted",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\Referrals.sol:23"
          },
          {
            "contract": "Referrals",
            "label": "tradedBefore",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\Referrals.sol:25"
          },
          {
            "contract": "Referrals",
            "label": "sportReferrals",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts\\AMM\\Referrals.sol:27"
          },
          {
            "contract": "Referrals",
            "label": "sportReferralStarted",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\Referrals.sol:28"
          },
          {
            "contract": "Referrals",
            "label": "sportTradedBefore",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\Referrals.sol:29"
          },
          {
            "contract": "Referrals",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts\\AMM\\Referrals.sol:30"
          },
          {
            "contract": "Referrals",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts\\AMM\\Referrals.sol:31"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "700c3536e6b281f8889428662a48d666483f16d2e7826f33abcc83615e63fff3": {
      "address": "0x8Ac12294DF89E5A66482C1B98C3F41AC56b36A08",
      "txHash": "0x556856a2c58bdeafed1d2d69075cb539c0e22e15dd8fe77c84c23c89722f2247",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "PositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:124"
          },
          {
            "contract": "PositionalMarketData",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:125"
          },
          {
            "contract": "PositionalMarketData",
            "label": "rangedMarketsAMM",
            "type": "t_address",
            "src": "contracts\\Positions\\PositionalMarketData.sol:126"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3e677caa2b3b8396392db5b7b87711dd1df5b10d3cbe38622c2bbd7f28db6677": {
      "address": "0xe95C975ae8e37ab0bA6b9F78262977A59FcAABEB",
      "txHash": "0x32d6ff22c2a5adddf3bf773d303bb1d82d72d7a0b744fc6ad0ebdab205edc3c4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)3663_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:34"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)3663_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:35"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)470",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:39"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:41"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:43"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFee",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:44"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:46"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "supportedAsset",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:48"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minimalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:50"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:51"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:53"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:54"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:56"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:57"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "assetToPythId",
            "type": "t_mapping(t_bytes32,t_bytes32)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:59"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "pyth",
            "type": "t_contract(IPyth)1502",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:62"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelay",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:64"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)3653",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:67"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)3663_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:69"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)3663_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:70"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:85"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)3576",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:86"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:87"
          }
        ],
        "types": {
          "t_struct(AddressSet)3663_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)470": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_contract(IPyth)1502": {
            "label": "contract IPyth"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(IStakingThales)3653": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_struct(AddressSet)3663_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(IMultiCollateralOnOffRamp)3576": {
            "label": "contract IMultiCollateralOnOffRamp"
          }
        }
      }
    },
    "6e6ebe2608ba1474abebb2799e6c9da8100fcade58dada0600d462ed6390db1f": {
      "address": "0x6d42e395ee9a0659E9FD767B95079C00057Efd58",
      "txHash": "0x5e8b151d685a938ac70e43db6f8534d40d53712f4722e0030666388861fce50c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)92382_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:34"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)92382_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:35"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:39"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:41"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:43"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFee",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:44"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:46"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "supportedAsset",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:48"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minimalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:50"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:51"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:53"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:54"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:56"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:57"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "assetToPythId",
            "type": "t_mapping(t_bytes32,t_bytes32)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:59"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "pyth",
            "type": "t_contract(IPyth)12062",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:62"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelay",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:64"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)86515",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:67"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)92382_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:69"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)92382_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:70"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:85"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)85139",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:86"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:87"
          }
        ],
        "types": {
          "t_struct(AddressSet)92382_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_contract(IPyth)12062": {
            "label": "contract IPyth"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(IStakingThales)86515": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_struct(AddressSet)92382_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(IMultiCollateralOnOffRamp)85139": {
            "label": "contract IMultiCollateralOnOffRamp"
          }
        }
      }
    },
    "29e6af69b83eac545136169db6ca00a77a7025046dfec4f7a380af645e6e73b2": {
      "address": "0x865551b1e1466b17FdB2eff384d78bcA66373532",
      "txHash": "0xc146fbb00500bdeaab10398e559d09deed5071b52130421145b9c44719434d61",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "thalesAMM",
            "type": "t_contract(IThalesAMM)104971",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:41"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8368",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:42"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:44"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:46"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:47"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:48"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:50"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:52"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:53"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:55"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:56"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:58"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:60"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:61"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:63"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:64"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:66"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:67"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:68"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:69"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:71"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)104794",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:73"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:75"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:77"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:79"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:81"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "onlyWhitelistedStakersAllowed",
            "type": "t_bool",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:83"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "whitelistedStakers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:85"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:87"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "marketAlreadyExercisedInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:89"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "roundClosingPrepared",
            "type": "t_bool",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:91"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "usersProcessedInRound",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:93"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "marketsProcessedInRound",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:95"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "withdrawalShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:97"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "utilizationRate",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:99"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:101"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:102"
          }
        ],
        "types": {
          "t_contract(IThalesAMM)104971": {
            "label": "contract IThalesAMM"
          },
          "t_contract(IERC20Upgradeable)8368": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)104794": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d7cd7fb3b9ab6c1e29f301f6ef13edf2653094f7eac279686aafb0adb04d45a8": {
      "address": "0xD2AD880A6dbf7350A27636aB3BfBbBEf5A4de317",
      "txHash": "0x13b6e6ce8a6e64c7b55aab389ceb605737906c9ac5b8c81bbbd2e53960376e71",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyPausable.sol:12"
          },
          {
            "contract": "EscrowThales",
            "label": "vestingToken",
            "type": "t_contract(IERC20)10198",
            "src": "contracts\\EscrowAndStaking\\EscrowThales.sol:22"
          },
          {
            "contract": "EscrowThales",
            "label": "iStakingThales",
            "type": "t_contract(IStakingThales)7589",
            "src": "contracts\\EscrowAndStaking\\EscrowThales.sol:23"
          },
          {
            "contract": "EscrowThales",
            "label": "airdropContract",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\EscrowThales.sol:24"
          },
          {
            "contract": "EscrowThales",
            "label": "totalEscrowedRewards",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\EscrowThales.sol:27"
          },
          {
            "contract": "EscrowThales",
            "label": "totalEscrowBalanceNotIncludedInStaking",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\EscrowThales.sol:28"
          },
          {
            "contract": "EscrowThales",
            "label": "currentVestingPeriod",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\EscrowThales.sol:29"
          },
          {
            "contract": "EscrowThales",
            "label": "_totalVested",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\EscrowThales.sol:31"
          },
          {
            "contract": "EscrowThales",
            "label": "vestingEntries",
            "type": "t_mapping(t_address,t_array(t_struct(VestingEntry)395_storage)10_storage)",
            "src": "contracts\\EscrowAndStaking\\EscrowThales.sol:38"
          },
          {
            "contract": "EscrowThales",
            "label": "totalAccountEscrowedAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\EscrowThales.sol:39"
          },
          {
            "contract": "EscrowThales",
            "label": "lastPeriodAddedReward",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\EscrowThales.sol:41"
          },
          {
            "contract": "EscrowThales",
            "label": "testMode",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\EscrowThales.sol:43"
          },
          {
            "contract": "EscrowThales",
            "label": "ThalesStakingRewardsPool",
            "type": "t_contract(IThalesStakingRewardsPool)7838",
            "src": "contracts\\EscrowAndStaking\\EscrowThales.sol:44"
          }
        ],
        "types": {
          "t_contract(IERC20)10198": {
            "label": "contract IERC20"
          },
          "t_contract(IStakingThales)7589": {
            "label": "contract IStakingThales"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_struct(VestingEntry)395_storage)10_storage)": {
            "label": "mapping(address => struct EscrowThales.VestingEntry[10])"
          },
          "t_array(t_struct(VestingEntry)395_storage)10_storage": {
            "label": "struct EscrowThales.VestingEntry[10]"
          },
          "t_struct(VestingEntry)395_storage": {
            "label": "struct EscrowThales.VestingEntry",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "vesting_period",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IThalesStakingRewardsPool)7838": {
            "label": "contract IThalesStakingRewardsPool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "223fa0373fc61cc021eed22e71f68f4822934204b807f5d5fd36af9ef3152eb8": {
      "address": "0x1795d3431FaE7078496B45F3E03D4130A6abc822",
      "txHash": "0xe1fc7a7da5135b76b6bfdf739a5c79330508d2e858d9ef2979128d4d11728633",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyPausable.sol:12"
          },
          {
            "contract": "StakingThales",
            "label": "iEscrowThales",
            "type": "t_contract(IEscrowThales)7094",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:36"
          },
          {
            "contract": "StakingThales",
            "label": "stakingToken",
            "type": "t_contract(IERC20)10198",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:37"
          },
          {
            "contract": "StakingThales",
            "label": "feeToken",
            "type": "t_contract(IERC20)10198",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:38"
          },
          {
            "contract": "StakingThales",
            "label": "SNXRewards",
            "type": "t_contract(ISNXRewards)7502",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:39"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRoyale",
            "type": "t_contract(IThalesRoyale)7828",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:40"
          },
          {
            "contract": "StakingThales",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)7464",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:41"
          },
          {
            "contract": "StakingThales",
            "label": "periodsOfStaking",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:43"
          },
          {
            "contract": "StakingThales",
            "label": "lastPeriodTimeStamp",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:44"
          },
          {
            "contract": "StakingThales",
            "label": "durationPeriod",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:45"
          },
          {
            "contract": "StakingThales",
            "label": "unstakeDurationPeriod",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:46"
          },
          {
            "contract": "StakingThales",
            "label": "startTimeStamp",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:47"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodRewards",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:48"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodFees",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:49"
          },
          {
            "contract": "StakingThales",
            "label": "distributeFeesEnabled",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:50"
          },
          {
            "contract": "StakingThales",
            "label": "fixedPeriodReward",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:51"
          },
          {
            "contract": "StakingThales",
            "label": "periodExtraReward",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:52"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXRewardsInPeriod",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:53"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXFeesInPeriod",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:54"
          },
          {
            "contract": "StakingThales",
            "label": "claimEnabled",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:55"
          },
          {
            "contract": "StakingThales",
            "label": "stakerLifetimeRewardsClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:57"
          },
          {
            "contract": "StakingThales",
            "label": "stakerFeesClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:58"
          },
          {
            "contract": "StakingThales",
            "label": "_totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:60"
          },
          {
            "contract": "StakingThales",
            "label": "_totalEscrowedAmount",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:61"
          },
          {
            "contract": "StakingThales",
            "label": "_totalPendingStakeAmount",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:62"
          },
          {
            "contract": "StakingThales",
            "label": "_totalUnclaimedRewards",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:63"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardsClaimed",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:64"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardFeesClaimed",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:65"
          },
          {
            "contract": "StakingThales",
            "label": "lastUnstakeTime",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:67"
          },
          {
            "contract": "StakingThales",
            "label": "unstaking",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:68"
          },
          {
            "contract": "StakingThales",
            "label": "unstakingAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:69"
          },
          {
            "contract": "StakingThales",
            "label": "_stakedBalances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:70"
          },
          {
            "contract": "StakingThales",
            "label": "_lastRewardsClaimedPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:71"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:72"
          },
          {
            "contract": "StakingThales",
            "label": "lastAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:81"
          },
          {
            "contract": "StakingThales",
            "label": "stakerAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3522_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:82"
          },
          {
            "contract": "StakingThales",
            "label": "extraRewardsActive",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:84"
          },
          {
            "contract": "StakingThales",
            "label": "ThalesStakingRewardsPool",
            "type": "t_contract(IThalesStakingRewardsPool)7838",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:85"
          },
          {
            "contract": "StakingThales",
            "label": "maxSNXRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:87"
          },
          {
            "contract": "StakingThales",
            "label": "maxAMMVolumeRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:88"
          },
          {
            "contract": "StakingThales",
            "label": "AMMVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:89"
          },
          {
            "contract": "StakingThales",
            "label": "maxThalesRoyaleRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:90"
          },
          {
            "contract": "StakingThales",
            "label": "SNXVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:95"
          },
          {
            "contract": "StakingThales",
            "label": "_lastStakingPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:97"
          },
          {
            "contract": "StakingThales",
            "label": "totalStakedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:99"
          },
          {
            "contract": "StakingThales",
            "label": "totalEscrowedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:100"
          },
          {
            "contract": "StakingThales",
            "label": "exoticBonds",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:101"
          },
          {
            "contract": "StakingThales",
            "label": "addressResolver",
            "type": "t_contract(IAddressResolver)7001",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:103"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMM",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:105"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:106"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:108"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3522_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:109"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesRangedAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:110"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3522_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:111"
          },
          {
            "contract": "StakingThales",
            "label": "lastExoticMarketsUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:112"
          },
          {
            "contract": "StakingThales",
            "label": "exoticMarketsVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3522_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:113"
          },
          {
            "contract": "StakingThales",
            "label": "lastSportsAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:114"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3522_storage)4_storage)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:115"
          },
          {
            "contract": "StakingThales",
            "label": "canClaimOnBehalf",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:117"
          },
          {
            "contract": "StakingThales",
            "label": "mergeAccountEnabled",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:119"
          },
          {
            "contract": "StakingThales",
            "label": "delegatedVolume",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:121"
          },
          {
            "contract": "StakingThales",
            "label": "supportedSportVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:122"
          },
          {
            "contract": "StakingThales",
            "label": "supportedAMMVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:123"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMLiquidityPool",
            "type": "t_contract(ISportsAMMLiquidityPool)7512",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:125"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMMLiquidityPool",
            "type": "t_contract(IThalesAMMLiquidityPool)7759",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:126"
          },
          {
            "contract": "StakingThales",
            "label": "stakingThalesBonusRewardsManager",
            "type": "t_contract(IStakingThalesBonusRewardsManager)7617",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:128"
          },
          {
            "contract": "StakingThales",
            "label": "parlayAMMLiquidityPool",
            "type": "t_contract(IParlayAMMLiquidityPool)7132",
            "src": "contracts\\EscrowAndStaking\\StakingThales.sol:129"
          }
        ],
        "types": {
          "t_contract(IEscrowThales)7094": {
            "label": "contract IEscrowThales"
          },
          "t_contract(IERC20)10198": {
            "label": "contract IERC20"
          },
          "t_contract(ISNXRewards)7502": {
            "label": "contract ISNXRewards"
          },
          "t_contract(IThalesRoyale)7828": {
            "label": "contract IThalesRoyale"
          },
          "t_contract(IPriceFeed)7464": {
            "label": "contract IPriceFeed"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)3522_storage)4_storage)": {
            "label": "mapping(address => struct StakingThales.AMMVolumeEntry[4])"
          },
          "t_array(t_struct(AMMVolumeEntry)3522_storage)4_storage": {
            "label": "struct StakingThales.AMMVolumeEntry[4]"
          },
          "t_struct(AMMVolumeEntry)3522_storage": {
            "label": "struct StakingThales.AMMVolumeEntry",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "period",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IThalesStakingRewardsPool)7838": {
            "label": "contract IThalesStakingRewardsPool"
          },
          "t_contract(IAddressResolver)7001": {
            "label": "contract IAddressResolver"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_contract(ISportsAMMLiquidityPool)7512": {
            "label": "contract ISportsAMMLiquidityPool"
          },
          "t_contract(IThalesAMMLiquidityPool)7759": {
            "label": "contract IThalesAMMLiquidityPool"
          },
          "t_contract(IStakingThalesBonusRewardsManager)7617": {
            "label": "contract IStakingThalesBonusRewardsManager"
          },
          "t_contract(IParlayAMMLiquidityPool)7132": {
            "label": "contract IParlayAMMLiquidityPool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1933e4abc0a73b8f40242dd81baf1e4764cb3db0f3b67e07e9278b451fe36ab8": {
      "address": "0xad60005778c19107F28ff67bC01ECc38E9c17531",
      "txHash": "0xd7d2f82d4606490ad7b38a881e8f3bb8040d802098fb00baa9680f4d05232d65",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyPausable.sol:12"
          },
          {
            "contract": "ThalesStakingRewardsPool",
            "label": "iStakingThales",
            "type": "t_contract(IStakingThales)6917",
            "src": "contracts/EscrowAndStaking/ThalesStakingRewardsPool.sol:28"
          },
          {
            "contract": "ThalesStakingRewardsPool",
            "label": "iEscrowThales",
            "type": "t_contract(IEscrowThales)6390",
            "src": "contracts/EscrowAndStaking/ThalesStakingRewardsPool.sol:29"
          },
          {
            "contract": "ThalesStakingRewardsPool",
            "label": "rewardToken",
            "type": "t_contract(IERC20)9679",
            "src": "contracts/EscrowAndStaking/ThalesStakingRewardsPool.sol:30"
          },
          {
            "contract": "ThalesStakingRewardsPool",
            "label": "lifetimeClaimedRewards",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/ThalesStakingRewardsPool.sol:32"
          }
        ],
        "types": {
          "t_contract(IStakingThales)6917": {
            "label": "contract IStakingThales"
          },
          "t_contract(IEscrowThales)6390": {
            "label": "contract IEscrowThales"
          },
          "t_contract(IERC20)9679": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "23c5328577c32f47173099d4ce7bc2a2dc20f56b706b131f78b60a7cd0611b76": {
      "address": "0xA10f56A58A7484Cf7d640246eD78D9c98e38c401",
      "txHash": "0x665f3f5f5cfa22e705a14978ce24b5059ae0d70d3c5046753f82ffb937494268",
      "layout": {
        "storage": [
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "stakingThales",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:32"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "stakingBaseDivider",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:34"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "maxStakingMultiplier",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:36"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "vaultsMultiplier",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:38"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "lpMultiplier",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:39"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "tradingMultiplier",
            "type": "t_uint256",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:40"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "userVaultBasePointsPerRound",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:42"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "userLPBasePointsPerRound",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:43"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "userTradingBasePointsPerRound",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:44"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "userRoundBonusPoints",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:45"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "totalVaultBasePointsPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:47"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "totalLPBasePointsPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:48"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "totalTradingBasePointsPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:49"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "totalRoundBonusPoints",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:50"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "knownVaults",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:52"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "knownLiquidityPools",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:53"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "knownTradingAMMs",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:54"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "useNewBonusModel",
            "type": "t_bool",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:56"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "vaults",
            "type": "t_struct(AddressSet)92346_storage",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:58"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "lps",
            "type": "t_struct(AddressSet)92346_storage",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:59"
          },
          {
            "contract": "StakingThalesBonusRewardsManager",
            "label": "manager",
            "type": "t_contract(IPositionalMarketManagerTruncated)85706",
            "src": "contracts\\EscrowAndStaking\\StakingThalesBonusRewardsManager.sol:68"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)92346_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IPositionalMarketManagerTruncated)85706": {
            "label": "contract IPositionalMarketManagerTruncated"
          }
        }
      }
    },
    "151fe88d1cc14dc4b4cf61f1f9cc0a58c22a4e10b9cd6869267760211538d5d0": {
      "address": "0xac6e8A39213603a37F545e3b637FA835483507E0",
      "txHash": "0xd7d5675708b9dec6be34e2a205ca7c950b668e655b5c9ff821a284c021e29dc5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "expiryDuration",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:31"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "marketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:33"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "customMarketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:34"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:36"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)93662_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:38"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)93662_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:39"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_migratingManager",
            "type": "t_contract(SportPositionalMarketManager)76426",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:41"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sUSD",
            "type": "t_contract(IERC20)4879",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:43"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:45"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sportPositionalMarketFactory",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:46"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:47"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:48"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:49"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "cancelTimeout",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:50"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedCancelAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:51"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "oddsObtainer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:52"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "isDoubleChance",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:54"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "isDoubleChanceSupported",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:55"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "doubleChanceMarketsByParent",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:56"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "doesSportSupportDoubleChance",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:57"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)93662_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(SportPositionalMarketManager)76426": {
            "label": "contract SportPositionalMarketManager"
          },
          "t_contract(IERC20)4879": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          }
        }
      }
    },
    "4b966c85d14b065a3973945a3b5ecab1479cad444a08665e5333328ccf786420": {
      "address": "0x85A92f657B09bbAA1510F75A265E5CF19178E428",
      "txHash": "0xe3446980d6269e943c8a2df4ae542211caec0fa4e541d6c80e3ba817d97f9020",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\upgrades-core\\contracts\\Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\ProxyPausable.sol:12"
          },
          {
            "contract": "StakingData",
            "label": "stakingThales",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingData.sol:62"
          },
          {
            "contract": "StakingData",
            "label": "escrowThales",
            "type": "t_address",
            "src": "contracts\\EscrowAndStaking\\StakingData.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "22e4032c6c30c76c8882bc26300d66d6ac0678be5e60d4170453fa24999e30c2": {
      "address": "0xC7F98C63E3e11a161FE9aFD8330a591951a495A7",
      "txHash": "0x7950b4faefe675e2c6876b870e36ae08ae1d1012f4b6c260fc53742cba9d47a2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "SportPositionalMarketFactory",
            "label": "positionalMarketManager",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketFactory.sol:16"
          },
          {
            "contract": "SportPositionalMarketFactory",
            "label": "positionalMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketFactory.sol:18"
          },
          {
            "contract": "SportPositionalMarketFactory",
            "label": "positionMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketFactory.sol:19"
          },
          {
            "contract": "SportPositionalMarketFactory",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketFactory.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "79d675918493d6a69d2d63fec81cc9e0edb0a305ef63a7761a983a72062151ef": {
      "address": "0xa89Cf891001432a1990d0d0E4160Bf4577271112",
      "txHash": "0x9951c5ca89e98c45650969c7522ef7446992d20456258f2db2f771ebb3d4e679",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketData.sol:88"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketData.sol:89"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "oddsObtainer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketData.sol:90"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "consumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketData.sol:91"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "voucherEscrow",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketData.sol:92"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "6da0226c5ee779c788297e9b1f1fdf0335e9fbf23f663996f91193d8dbe295e1": {
      "address": "0xd9f0Eb835e30F1eC9eBc816b407184B4fE5573f9",
      "txHash": "0x4a6c8a90d85e2277fcea05e3c46348f20f006e163e5d18c026fcd071f5056828",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "GamesQueue",
            "label": "gamesCreateQueue",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "contracts\\SportMarkets\\Rundown\\GamesQueue.sol:16"
          },
          {
            "contract": "GamesQueue",
            "label": "existingGamesInCreatedQueue",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\GamesQueue.sol:17"
          },
          {
            "contract": "GamesQueue",
            "label": "firstCreated",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Rundown\\GamesQueue.sol:18"
          },
          {
            "contract": "GamesQueue",
            "label": "lastCreated",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Rundown\\GamesQueue.sol:19"
          },
          {
            "contract": "GamesQueue",
            "label": "gameStartPerGameId",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SportMarkets\\Rundown\\GamesQueue.sol:20"
          },
          {
            "contract": "GamesQueue",
            "label": "unproccessedGames",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts\\SportMarkets\\Rundown\\GamesQueue.sol:23"
          },
          {
            "contract": "GamesQueue",
            "label": "unproccessedGamesIndex",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SportMarkets\\Rundown\\GamesQueue.sol:24"
          },
          {
            "contract": "GamesQueue",
            "label": "gamesResolvedQueue",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "contracts\\SportMarkets\\Rundown\\GamesQueue.sol:25"
          },
          {
            "contract": "GamesQueue",
            "label": "existingGamesInResolvedQueue",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\GamesQueue.sol:26"
          },
          {
            "contract": "GamesQueue",
            "label": "firstResolved",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Rundown\\GamesQueue.sol:27"
          },
          {
            "contract": "GamesQueue",
            "label": "lastResolved",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Rundown\\GamesQueue.sol:28"
          },
          {
            "contract": "GamesQueue",
            "label": "consumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Rundown\\GamesQueue.sol:30"
          },
          {
            "contract": "GamesQueue",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Rundown\\GamesQueue.sol:31"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "e2131be7beea238f3ae432039549f020fba6713e82d38d46e4d58cd0eb195b88": {
      "address": "0xa08477FF885D6c8099670500802b4d00a774F5E8",
      "txHash": "0xe1c0395d70d18c8a2d4c6bb390879bb68931299b79ae14e049972d017d714807",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:60"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:61"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:64"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:65"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:66"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)62948_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:69"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)62959_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:70"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)62968_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:71"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:72"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:73"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:74"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:77"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:78"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:79"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:80"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)87506",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:83"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:84"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:85"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:86"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:87"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)62897",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:90"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:94"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:95"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:96"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:97"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:98"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOnADate",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:99"
          },
          {
            "contract": "TherundownConsumer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)88550",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:101"
          },
          {
            "contract": "TherundownConsumer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)62968_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:102"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsObtainer",
            "type": "t_contract(IGamesOddsObtainer)86381",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:103"
          },
          {
            "contract": "TherundownConsumer",
            "label": "maxNumberOfMarketsToResolve",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:104"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)62948_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)62948_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)62959_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)62959_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)62968_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)62968_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)87506": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)62897": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          },
          "t_contract(ITherundownConsumerVerifier)88550": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(IGamesOddsObtainer)86381": {
            "label": "contract IGamesOddsObtainer"
          }
        }
      }
    },
    "b3c83bb58b149821d74576f0872f3cc6fbc5573735250fa3d043d64844eb1070": {
      "address": "0xdfaf2f29347821843c029B5EbaB9f3Eb235E21B0",
      "txHash": "0xdda933dbedc37b8df35c03a08cda749b71bba0964af49fcb30f72b1ce24adf14",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)88422",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:26"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "invalidName",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:27"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "supportedMarketType",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:28"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultOddsThreshold",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:29"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "oddsThresholdForSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:30"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultBookmakerIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:32"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "sportIdToBookmakerIds",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:33"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "obtainer",
            "type": "t_contract(IGamesOddsObtainer)86381",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:34"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)87506",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:35"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:36"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "minOddsForCheckingThresholdDefault",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:38"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "minOddsForCheckingThresholdPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:39"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)88422": {
            "label": "contract ITherundownConsumer"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_contract(IGamesOddsObtainer)86381": {
            "label": "contract IGamesOddsObtainer"
          },
          "t_contract(ISportPositionalMarketManager)87506": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "f63b2f73eb2272e70e925abba6fb0eb1c497a4c4c4c545acc42568cf90efe082": {
      "address": "0x942f10DBF96cd30F5FdDB0016707753A700C7f78",
      "txHash": "0xcda5fbdb21eb03ffa02751e8c78364adcd8df75f611c6324fd75369d83977829",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:39"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:42"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:46"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:49"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:52"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:56"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:65"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:68"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:71"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:74"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)86479",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:77"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:80"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:83"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)84737",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:86"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:89"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:92"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:95"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:98"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:101"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:104"
          },
          {
            "contract": "SportsAMM",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:107"
          },
          {
            "contract": "SportsAMM",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:110"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:113"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:116"
          },
          {
            "contract": "SportsAMM",
            "label": "sportAmmUtils",
            "type": "t_contract(SportsAMMUtils)80449",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:118"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:121"
          },
          {
            "contract": "SportsAMM",
            "label": "thresholdForOddsUpdate",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:125"
          },
          {
            "contract": "SportsAMM",
            "label": "wrapper",
            "type": "t_contract(ITherundownConsumerWrapper)87242",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:128"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:131"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:134"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSportAndChild",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:137"
          },
          {
            "contract": "SportsAMM",
            "label": "liquidityPool",
            "type": "t_contract(SportAMMLiquidityPool)46437",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:157"
          },
          {
            "contract": "SportsAMM",
            "label": "minSpreadPerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:160"
          },
          {
            "contract": "SportsAMM",
            "label": "isMarketForSportOnePositional",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:163"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOddsPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:166"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSpreadPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:169"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)86479": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)84737": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(SportsAMMUtils)80449": {
            "label": "contract SportsAMMUtils"
          },
          "t_contract(ITherundownConsumerWrapper)87242": {
            "label": "contract ITherundownConsumerWrapper"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(SportAMMLiquidityPool)46437": {
            "label": "contract SportAMMLiquidityPool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a07edbf3b71696ff193cc4145ce497277a8246144d54b8e27f911a2f3693fa87": {
      "address": "0xf53A3C3BB15C954F8290fD70E3A5E871dA566eEF",
      "txHash": "0xe245ccef8d3bb5cbdc1e462bd163a2c309068a2d6cc534c83ce09af88ce7e9a2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)88422",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:32"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)88550",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:33"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)87506",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:34"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)86154_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:37"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)86154_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:38"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:39"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:40"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:41"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "doesSportSupportSpreadAndTotal",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:42"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:45"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:46"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketSpreadChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_int16,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:47"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketTotalChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_uint24,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:48"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:49"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketSread",
            "type": "t_mapping(t_address,t_int16)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:50"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketTotal",
            "type": "t_mapping(t_address,t_uint24)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:51"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveTotalChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:52"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveSpreadChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:53"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "isSpreadChildMarket",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:54"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:55"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "normalizedOddsForMarketFulfilled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:56"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "normalizedOddsForMarket",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:57"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsReceiver",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:58"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)88422": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)88550": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)87506": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)86154_storage)": {
            "label": "mapping(bytes32 => struct IGamesOddsObtainer.GameOdds)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(GameOdds)86154_storage": {
            "label": "struct IGamesOddsObtainer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadHome",
                "type": "t_int16"
              },
              {
                "label": "spreadHomeOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadAway",
                "type": "t_int16"
              },
              {
                "label": "spreadAwayOdds",
                "type": "t_int24"
              },
              {
                "label": "totalOver",
                "type": "t_uint24"
              },
              {
                "label": "totalOverOdds",
                "type": "t_int24"
              },
              {
                "label": "totalUnder",
                "type": "t_uint24"
              },
              {
                "label": "totalUnderOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_int24": {
            "label": "int24"
          },
          "t_int16": {
            "label": "int16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_int16,t_address))": {
            "label": "mapping(address => mapping(int16 => address))"
          },
          "t_mapping(t_int16,t_address)": {
            "label": "mapping(int16 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint24,t_address))": {
            "label": "mapping(address => mapping(uint24 => address))"
          },
          "t_mapping(t_uint24,t_address)": {
            "label": "mapping(uint24 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_int16)": {
            "label": "mapping(address => int16)"
          },
          "t_mapping(t_address,t_uint24)": {
            "label": "mapping(address => uint24)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "a4c5b1f9eeef339f48e45a1f73da9241eb854d169d3403a08153dc709b12da6f": {
      "address": "0xD1881676B61c71e6E3E2456f8e0c73409903B6eD",
      "txHash": "0x9bbea89014d6448e190df634bd339a19d9e454386d800f66f3e7d6e72211e637",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesOddsReceiver",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)101640",
            "src": "contracts/SportMarkets/Rundown/GamesOddsReciever.sol:19"
          },
          {
            "contract": "GamesOddsReceiver",
            "label": "obtainer",
            "type": "t_contract(IGamesOddsObtainer)98944",
            "src": "contracts/SportMarkets/Rundown/GamesOddsReciever.sol:20"
          },
          {
            "contract": "GamesOddsReceiver",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsReciever.sol:22"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)101640": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(IGamesOddsObtainer)98944": {
            "label": "contract IGamesOddsObtainer"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "780452aa2da2c8a5a936059fbff61dd226f6d10d8522d639ab18a36a00e4abb8": {
      "address": "0x7a985634b8377C97C337Ebb6f3167D03e1820115",
      "txHash": "0xf40a22dc1c149e785fb416331776381d214fe84b1832e00e9f9a7a3b68f5a8f5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sportsAMM",
            "type": "t_contract(ISportsAMM)86413",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:41"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:42"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:44"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:46"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:47"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:48"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:50"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:52"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:53"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:55"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:56"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:58"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:60"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:61"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:63"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:64"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:66"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:67"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:68"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:69"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:71"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)86500",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:73"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:75"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:77"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:79"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:81"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "onlyWhitelistedStakersAllowed",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:83"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedStakers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:85"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:87"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "marketAlreadyExercisedInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:89"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundClosingPrepared",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:91"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersProcessedInRound",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:93"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "withdrawalShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:95"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)86413": {
            "label": "contract ISportsAMM"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)86500": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "00d048b7b847fe0255033349ce7b7fcb61eed2bbc1bd3eee149dac6db22a8014": {
      "address": "0x10F996DC21b69747a6D85e2847f39CDBFdbAe3eA",
      "txHash": "0xcf994611e1887743ee1c4a705863468b6b1559c409d91f7e0a45e253ce429f34",
      "layout": {
        "storage": [
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "DefaultLiquidityProvider",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)7480",
            "src": "contracts\\SportMarkets\\LiquidityPool\\DefaultLiquidityProvider.sol:14"
          },
          {
            "contract": "DefaultLiquidityProvider",
            "label": "liquidityPool",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\DefaultLiquidityProvider.sol:19"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)7480": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "29207f4820b6b2d24dc5daad980a26a7ff1a90abe3995ee628a5cd6ad24277b0": {
      "address": "0x1c34a717CDADEc5F2964952D96959AC61206Ab61",
      "txHash": "0x301adddaea3ec9ead6594bea771a0b15c2e0c267b0d28c529590bbb250df0cf3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)93948",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:38"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)93739",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:39"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:40"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)94035",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)92016",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:47"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:62"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)99936_storage",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)60434",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:70"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:71"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerGameCombination",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:74"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:78"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:80"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerPackedGamesCombination",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:82"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "SGPFeePerCombination",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:84"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayLP",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:86"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)93948": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)93739": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)94035": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)92016": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)99936_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)60434": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => uint256))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          }
        }
      }
    },
    "1e59e04344317f143f20afe36503a0fe2bdb2bfa65f022f4c185df39edad82d6": {
      "address": "0x9B272476781D24ae938D155b01AFf07BE4f3De6c",
      "txHash": "0xef2150c73ce78753fc3163a74bbf70b0ab82c15df57b059ed4a4b498e4761d5a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ParlayMarketData",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)101269_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:16"
          },
          {
            "contract": "ParlayMarketData",
            "label": "_parlaysInGamePosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)101269_storage))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:29"
          },
          {
            "contract": "ParlayMarketData",
            "label": "gameAddressPositionParlay",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:31"
          },
          {
            "contract": "ParlayMarketData",
            "label": "numOfParlaysInGamePosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:32"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayDetails",
            "type": "t_mapping(t_address,t_struct(ParlayDetails)55562_storage)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:34"
          },
          {
            "contract": "ParlayMarketData",
            "label": "userParlays",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:35"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayOwner",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:36"
          },
          {
            "contract": "ParlayMarketData",
            "label": "userNumOfParlays",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:37"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayMarketsAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:38"
          }
        ],
        "types": {
          "t_struct(AddressSet)101269_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)101269_storage))": {
            "label": "mapping(address => mapping(uint256 => struct AddressSetLib.AddressSet))"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)101269_storage)": {
            "label": "mapping(uint256 => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))": {
            "label": "mapping(address => mapping(uint256 => mapping(uint256 => address)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint256 => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(ParlayDetails)55562_storage)": {
            "label": "mapping(address => struct ParlayMarketData.ParlayDetails)"
          },
          "t_struct(ParlayDetails)55562_storage": {
            "label": "struct ParlayMarketData.ParlayDetails",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "sUSDPaid",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b3f57758bd18eab9f293156b85b84b936b2a2fd49b29a83acee03f9541af21b2": {
      "address": "0x576292A8fF82f3fA9639668bE352f00bFeA4302c",
      "txHash": "0x9000e05567234aeb714430fdb520c9107fa6f2e68700826009c9af34e7b3b40a",
      "layout": {
        "storage": [
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "DefaultLiquidityProvider",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\DefaultLiquidityProvider.sol:14"
          },
          {
            "contract": "DefaultLiquidityProvider",
            "label": "liquidityPool",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\DefaultLiquidityProvider.sol:19"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f8e264807821ec2849abab88eef47899ccda4c42f0f2a912ef5ae70c0bde1858": {
      "address": "0x453D710644f6378B3296bA18c88c4D4d05A64137",
      "txHash": "0xf921cb4c1695ef6903dc6a9c7905c35272aa836898420e4c80d4c4f95164ab25",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "parlayAMM",
            "type": "t_contract(IParlayMarketsAMM)85403",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:42"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:43"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:45"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:47"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:48"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:50"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:52"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:54"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:55"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:57"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:58"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:60"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:62"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:63"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:65"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:66"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:68"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:69"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:70"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:71"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:73"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)86500",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:75"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:77"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:79"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:81"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:83"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "onlyWhitelistedStakersAllowed",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:85"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "whitelistedStakers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:87"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:89"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "marketAlreadyExercisedInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:91"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "roundClosingPrepared",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:93"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "usersProcessedInRound",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:95"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "withdrawalShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:97"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "parlayMarketRound",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:99"
          }
        ],
        "types": {
          "t_contract(IParlayMarketsAMM)85403": {
            "label": "contract IParlayMarketsAMM"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)86500": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4d9ff26dca13ce47a76f4213a68c289af8d02989d2c7e5dd35d5499a724a941c": {
      "address": "0xf0F85d927bfc2703db470918Db10d7590705850c",
      "txHash": "0xf8c565cc91bc21b0ff1c8f5c848575cfc120cd8260dfc9ed0bf1e3bdc397eb59",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "208b0777c68b4065665d6cadcfd0da67cd5f63ca33633e72ba1e2ff835c3daaa": {
      "address": "0x31EAeCc94e837f05615510e7b9D2f056401A8bCE",
      "txHash": "0xe7181033b005b01d09862ac0352926af00d2db7cc5c132817b07cdaa0379764d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "OvertimeVoucherEscrow",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\Voucher\\OvertimeVoucherEscrow.sol:24"
          },
          {
            "contract": "OvertimeVoucherEscrow",
            "label": "overtimeVoucher",
            "type": "t_contract(OvertimeVoucher)81461",
            "src": "contracts\\SportMarkets\\Voucher\\OvertimeVoucherEscrow.sol:27"
          },
          {
            "contract": "OvertimeVoucherEscrow",
            "label": "whitelistedAddressesPerPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\Voucher\\OvertimeVoucherEscrow.sol:30"
          },
          {
            "contract": "OvertimeVoucherEscrow",
            "label": "addressClaimedVoucherPerPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\Voucher\\OvertimeVoucherEscrow.sol:33"
          },
          {
            "contract": "OvertimeVoucherEscrow",
            "label": "voucherAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Voucher\\OvertimeVoucherEscrow.sol:36"
          },
          {
            "contract": "OvertimeVoucherEscrow",
            "label": "periodEnd",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\Voucher\\OvertimeVoucherEscrow.sol:39"
          },
          {
            "contract": "OvertimeVoucherEscrow",
            "label": "period",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Voucher\\OvertimeVoucherEscrow.sol:42"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(OvertimeVoucher)81461": {
            "label": "contract OvertimeVoucher"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fde76a7068896549d43a9c753a3409d1c3833070b8346050a4dc6597568a05d0": {
      "address": "0x945a9fc7Fc1b02897A70b32dcDF7E039d6923928",
      "txHash": "0x205cd4e7cfd49200d2b8cfc01ad57be097d2638e60897e73c4395eae8aeb1ef1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "parlayAMM",
            "type": "t_contract(IParlayMarketsAMM)85778",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:42"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:43"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:45"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:47"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:48"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:50"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:52"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:54"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:55"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:57"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:58"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:60"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:62"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:63"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:65"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:66"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:68"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:69"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:70"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:71"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:73"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)86857",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:75"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:77"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:79"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:81"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:83"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "onlyWhitelistedStakersAllowed",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:85"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "whitelistedStakers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:87"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:89"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "marketAlreadyExercisedInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:91"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "roundClosingPrepared",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:93"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "usersProcessedInRound",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:95"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "withdrawalShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:97"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "parlayMarketRound",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:99"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "utilizationRate",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:101"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:103"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:104"
          }
        ],
        "types": {
          "t_contract(IParlayMarketsAMM)85778": {
            "label": "contract IParlayMarketsAMM"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)86857": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1b2ff0af10ddb236f433708f24a4f2d54b9a56e7e9f9c3c22c42ec1f7710e11d": {
      "address": "0xF3A309063EC7acbFF4EeC1eC1e2615f0CEC7Cb13",
      "txHash": "0xbda9fab5378201144f5b3a8517e654d83e6c4dceca3e14aa2f9805e831dfc81a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sportsAMM",
            "type": "t_contract(ISportsAMM)93190",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:41"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:42"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:44"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:46"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:47"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:48"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:50"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:52"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:53"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:55"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:56"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:58"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:60"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:61"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:63"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:64"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:66"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:67"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:68"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:69"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:71"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)93277",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:73"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:75"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:77"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:79"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:81"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "onlyWhitelistedStakersAllowed",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:83"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedStakers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:85"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:87"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "marketAlreadyExercisedInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:89"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundClosingPrepared",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:91"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersProcessedInRound",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:93"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "withdrawalShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:95"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "utilizationRate",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:97"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:99"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:100"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)93190": {
            "label": "contract ISportsAMM"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)93277": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7ff77c9eddaa2acbd8ffbc9a19fc56bc4889464a8aae2c6abb80d1dad065a388": {
      "address": "0xE9F5E7579931a46e4beaC08Ca9ab52961AD66203",
      "txHash": "0x2137b5e3ae405c0e5d5d156396ac07b1da243e9a0f4d4da6745915adf879f56a",
      "layout": {
        "storage": [
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SafeBoxBuyback",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8368",
            "src": "contracts/AMM/SafeBoxBuyback.sol:19"
          },
          {
            "contract": "SafeBoxBuyback",
            "label": "thalesToken",
            "type": "t_contract(IERC20Upgradeable)8368",
            "src": "contracts/AMM/SafeBoxBuyback.sol:20"
          },
          {
            "contract": "SafeBoxBuyback",
            "label": "WETH9",
            "type": "t_address",
            "src": "contracts/AMM/SafeBoxBuyback.sol:21"
          },
          {
            "contract": "SafeBoxBuyback",
            "label": "swapRouter",
            "type": "t_contract(ISwapRouter)13492",
            "src": "contracts/AMM/SafeBoxBuyback.sol:23"
          },
          {
            "contract": "SafeBoxBuyback",
            "label": "uniswapFactory",
            "type": "t_contract(IUniswapV3Factory)12423",
            "src": "contracts/AMM/SafeBoxBuyback.sol:24"
          },
          {
            "contract": "SafeBoxBuyback",
            "label": "sUSDperTick",
            "type": "t_uint256",
            "src": "contracts/AMM/SafeBoxBuyback.sol:26"
          },
          {
            "contract": "SafeBoxBuyback",
            "label": "tickLength",
            "type": "t_uint256",
            "src": "contracts/AMM/SafeBoxBuyback.sol:27"
          },
          {
            "contract": "SafeBoxBuyback",
            "label": "lastBuyback",
            "type": "t_uint256",
            "src": "contracts/AMM/SafeBoxBuyback.sol:28"
          },
          {
            "contract": "SafeBoxBuyback",
            "label": "buybacksEnabled",
            "type": "t_bool",
            "src": "contracts/AMM/SafeBoxBuyback.sol:30"
          },
          {
            "contract": "SafeBoxBuyback",
            "label": "minAccepted",
            "type": "t_uint256",
            "src": "contracts/AMM/SafeBoxBuyback.sol:32"
          },
          {
            "contract": "SafeBoxBuyback",
            "label": "pathToUse",
            "type": "t_bytes_storage",
            "src": "contracts/AMM/SafeBoxBuyback.sol:34"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)8368": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(ISwapRouter)13492": {
            "label": "contract ISwapRouter"
          },
          "t_contract(IUniswapV3Factory)12423": {
            "label": "contract IUniswapV3Factory"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes_storage": {
            "label": "bytes"
          }
        }
      }
    },
    "691808df4c788ff89679803c1ce8bfe2013d4c15f11f43ab437f9d9bd585dc2b": {
      "address": "0xCc6f2CfEAdE4F240FB9a3A8E39328E7E8A06Ba8c",
      "txHash": "0xfef0086740d76bb413660e300988919768618c4ee238d088d4561b0dce87e6b6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)3843_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:34"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)3843_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:35"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)470",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:39"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:41"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:43"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFee",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:44"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:46"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "supportedAsset",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:48"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minimalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:50"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:51"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:53"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:54"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:56"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:57"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "assetToPythId",
            "type": "t_mapping(t_bytes32,t_bytes32)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:59"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "pyth",
            "type": "t_contract(IPyth)1502",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:62"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelay",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:64"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)3833",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:67"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)3843_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:69"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)3843_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:70"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:85"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)3756",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:86"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:87"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)1573,t_uint256))",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:89"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)1573,t_uint256))",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:90"
          }
        ],
        "types": {
          "t_struct(AddressSet)3843_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)470": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_contract(IPyth)1502": {
            "label": "contract IPyth"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(IStakingThales)3833": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_struct(AddressSet)3843_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(IMultiCollateralOnOffRamp)3756": {
            "label": "contract IMultiCollateralOnOffRamp"
          },
          "t_mapping(t_bytes32,t_mapping(t_enum(Direction)1573,t_uint256))": {
            "label": "mapping(bytes32 => mapping(enum SpeedMarket.Direction => uint256))"
          },
          "t_mapping(t_enum(Direction)1573,t_uint256)": {
            "label": "mapping(enum SpeedMarket.Direction => uint256)"
          },
          "t_enum(Direction)1573": {
            "label": "enum SpeedMarket.Direction",
            "members": [
              "Up",
              "Down"
            ]
          }
        }
      }
    },
    "11787398d9c2734ddb844cbea6a20f82905c66e7ede0b355bbabd38544217f80": {
      "address": "0x894715c2a5FeD709e79a1EFDbD7727F2E9dBc5ED",
      "txHash": "0xab228384bc1d3cb32b0e1082109ed14544a69b59dfed152bf902b8fbf8183dd7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "Referrals",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\Referrals.sol:23"
          },
          {
            "contract": "Referrals",
            "label": "referrals",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts\\AMM\\Referrals.sol:24"
          },
          {
            "contract": "Referrals",
            "label": "referralStarted",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\Referrals.sol:25"
          },
          {
            "contract": "Referrals",
            "label": "tradedBefore",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\Referrals.sol:27"
          },
          {
            "contract": "Referrals",
            "label": "sportReferrals",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts\\AMM\\Referrals.sol:29"
          },
          {
            "contract": "Referrals",
            "label": "sportReferralStarted",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\Referrals.sol:30"
          },
          {
            "contract": "Referrals",
            "label": "sportTradedBefore",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\Referrals.sol:31"
          },
          {
            "contract": "Referrals",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts\\AMM\\Referrals.sol:32"
          },
          {
            "contract": "Referrals",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts\\AMM\\Referrals.sol:33"
          },
          {
            "contract": "Referrals",
            "label": "referrerFeeDefault",
            "type": "t_uint256",
            "src": "contracts\\AMM\\Referrals.sol:35"
          },
          {
            "contract": "Referrals",
            "label": "referrerFeeSilver",
            "type": "t_uint256",
            "src": "contracts\\AMM\\Referrals.sol:36"
          },
          {
            "contract": "Referrals",
            "label": "referrerFeeGold",
            "type": "t_uint256",
            "src": "contracts\\AMM\\Referrals.sol:37"
          },
          {
            "contract": "Referrals",
            "label": "silverAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\Referrals.sol:39"
          },
          {
            "contract": "Referrals",
            "label": "goldAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\Referrals.sol:40"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "136455f3724c0ce7e192e392fa0326d5594180233e75227f335ffb8dee032e41": {
      "address": "0x1bAcc75f17EFdBe425eFEbBF5a918bB56d5B6A47",
      "txHash": "0x176d199376ec66f9e676c361ec73764a1125ca9cb282e09e574a96879831168e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)99686_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:35"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)99686_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:36"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:40"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:42"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:44"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFee",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:45"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:47"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "supportedAsset",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:49"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minimalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:51"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:52"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:54"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:55"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:57"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:58"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "assetToPythId",
            "type": "t_mapping(t_bytes32,t_bytes32)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:60"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "pyth",
            "type": "t_contract(IPyth)12062",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:63"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelay",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:65"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)93785",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:68"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)99686_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:70"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)99686_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:71"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:87"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)92347",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:88"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:89"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)41760,t_uint256))",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:91"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)41760,t_uint256))",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:92"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelayForResolving",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:100"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "marketHasCreatedAtAttribute",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:102"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:104"
          }
        ],
        "types": {
          "t_struct(AddressSet)99686_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_contract(IPyth)12062": {
            "label": "contract IPyth"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(IStakingThales)93785": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_struct(AddressSet)99686_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(IMultiCollateralOnOffRamp)92347": {
            "label": "contract IMultiCollateralOnOffRamp"
          },
          "t_mapping(t_bytes32,t_mapping(t_enum(Direction)41760,t_uint256))": {
            "label": "mapping(bytes32 => mapping(enum SpeedMarket.Direction => uint256))"
          },
          "t_mapping(t_enum(Direction)41760,t_uint256)": {
            "label": "mapping(enum SpeedMarket.Direction => uint256)"
          },
          "t_enum(Direction)41760": {
            "label": "enum SpeedMarket.Direction",
            "members": [
              "Up",
              "Down"
            ]
          }
        }
      }
    },
    "656854e192242c775d23a38d6bd0fe4bb6d64837bc2ffe9726858a96f9aedae6": {
      "address": "0x2F29ff630410647B8F81f53C7e0CfA3C1FcAcB3E",
      "txHash": "0x5b435b60a525b13f571f200d80660bdbbdccc00d8d01197075d130ae79b46114",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)93571",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:33"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)93718",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:34"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)92654",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:35"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playerPropsReceiver",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:36"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playerProp",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerProps)91354_storage)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:39"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "doesSportSupportPlayerProps",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:40"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:41"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playerIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:42"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "optionIdPerChildMarket",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:43"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:46"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "mainMarketPausedPlayerProps",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:47"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:48"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "mainMarketChildMarketPerPlayerAndOptionIndex",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint256,t_address))))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:49"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "numberOfChildMarketsPerPlayerAndOption",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_uint256)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:51"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "mainMarketPlayerOptionLineChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint16,t_address))))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:52"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:54"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "currentActiveChildMarketPerPlayerAndOption",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_address)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:55"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "normalizedOddsForMarket",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:56"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "normalizedOddsForMarketFulfilled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:57"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:58"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "childMarketLine",
            "type": "t_mapping(t_address,t_uint16)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:59"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "invalidOddsForPlayerProps",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_bool)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:60"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "createFulfilledForPlayerProps",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_bool)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:61"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "resolveFulfilledForPlayerProps",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_bool)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:62"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "pausedByInvalidOddsOnMain",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:63"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "pausedByCircuitBreakerOnMain",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:64"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playerPropsAddedForMain",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:65"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playersInAGame",
            "type": "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:67"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playersInAGameFulfilled",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bool))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:68"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "allOptionsPerPlayer",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_array(t_uint8)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:69"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "resolvedPlayerProps",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerPropsResolver)91365_storage)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:70"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "childMarketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:72"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)93571": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)93718": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)92654": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerProps)91354_storage)))": {
            "label": "mapping(bytes32 => mapping(bytes32 => mapping(uint8 => struct IGamesPlayerProps.PlayerProps)))"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerProps)91354_storage))": {
            "label": "mapping(bytes32 => mapping(uint8 => struct IGamesPlayerProps.PlayerProps))"
          },
          "t_mapping(t_uint8,t_struct(PlayerProps)91354_storage)": {
            "label": "mapping(uint8 => struct IGamesPlayerProps.PlayerProps)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(PlayerProps)91354_storage": {
            "label": "struct IGamesPlayerProps.PlayerProps",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "playerId",
                "type": "t_bytes32"
              },
              {
                "label": "option",
                "type": "t_uint8"
              },
              {
                "label": "playerName",
                "type": "t_string_storage"
              },
              {
                "label": "line",
                "type": "t_uint16"
              },
              {
                "label": "overOdds",
                "type": "t_int24"
              },
              {
                "label": "underOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint256,t_address))))": {
            "label": "mapping(address => mapping(bytes32 => mapping(uint8 => mapping(uint256 => address))))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint256,t_address)))": {
            "label": "mapping(bytes32 => mapping(uint8 => mapping(uint256 => address)))"
          },
          "t_mapping(t_uint8,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint8 => mapping(uint256 => address))"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_uint256)))": {
            "label": "mapping(address => mapping(bytes32 => mapping(uint8 => uint256)))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint8 => uint256))"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint16,t_address))))": {
            "label": "mapping(address => mapping(bytes32 => mapping(uint8 => mapping(uint16 => address))))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint16,t_address)))": {
            "label": "mapping(bytes32 => mapping(uint8 => mapping(uint16 => address)))"
          },
          "t_mapping(t_uint8,t_mapping(t_uint16,t_address))": {
            "label": "mapping(uint8 => mapping(uint16 => address))"
          },
          "t_mapping(t_uint16,t_address)": {
            "label": "mapping(uint16 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_address)))": {
            "label": "mapping(address => mapping(bytes32 => mapping(uint8 => address)))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_address))": {
            "label": "mapping(bytes32 => mapping(uint8 => address))"
          },
          "t_mapping(t_uint8,t_address)": {
            "label": "mapping(uint8 => address)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint16)": {
            "label": "mapping(address => uint16)"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_bool)))": {
            "label": "mapping(bytes32 => mapping(bytes32 => mapping(uint8 => bool)))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_bool))": {
            "label": "mapping(bytes32 => mapping(uint8 => bool))"
          },
          "t_mapping(t_uint8,t_bool)": {
            "label": "mapping(uint8 => bool)"
          },
          "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(bytes32 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(bytes32 => mapping(bytes32 => bool))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_array(t_uint8)dyn_storage))": {
            "label": "mapping(bytes32 => mapping(bytes32 => uint8[]))"
          },
          "t_mapping(t_bytes32,t_array(t_uint8)dyn_storage)": {
            "label": "mapping(bytes32 => uint8[])"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerPropsResolver)91365_storage)))": {
            "label": "mapping(bytes32 => mapping(bytes32 => mapping(uint8 => struct IGamesPlayerProps.PlayerPropsResolver)))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerPropsResolver)91365_storage))": {
            "label": "mapping(bytes32 => mapping(uint8 => struct IGamesPlayerProps.PlayerPropsResolver))"
          },
          "t_mapping(t_uint8,t_struct(PlayerPropsResolver)91365_storage)": {
            "label": "mapping(uint8 => struct IGamesPlayerProps.PlayerPropsResolver)"
          },
          "t_struct(PlayerPropsResolver)91365_storage": {
            "label": "struct IGamesPlayerProps.PlayerPropsResolver",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "playerId",
                "type": "t_bytes32"
              },
              {
                "label": "option",
                "type": "t_uint8"
              },
              {
                "label": "score",
                "type": "t_uint16"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              }
            ]
          }
        }
      }
    },
    "6bcb59e613b95f8dae48addf58c1ad0c77c842068f599b1627ca7a325ec78b97": {
      "address": "0x72b69C6C59E4F8917aa73b30Ad33b11025C34c7D",
      "txHash": "0xf692c0c76eb4bf6dea874a1a8cc87fb62b9a4790af22b77cc1cfbe74b446a375",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesPlayerPropsReceiver",
            "label": "playerProps",
            "type": "t_contract(IGamesPlayerProps)91498",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerPropsReceiver.sol:19"
          },
          {
            "contract": "GamesPlayerPropsReceiver",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)93571",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerPropsReceiver.sol:20"
          },
          {
            "contract": "GamesPlayerPropsReceiver",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerPropsReceiver.sol:22"
          },
          {
            "contract": "GamesPlayerPropsReceiver",
            "label": "isValidOptionPerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_bool))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerPropsReceiver.sol:23"
          },
          {
            "contract": "GamesPlayerPropsReceiver",
            "label": "optionsPerSport",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerPropsReceiver.sol:24"
          },
          {
            "contract": "GamesPlayerPropsReceiver",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerPropsReceiver.sol:26"
          }
        ],
        "types": {
          "t_contract(IGamesPlayerProps)91498": {
            "label": "contract IGamesPlayerProps"
          },
          "t_contract(ITherundownConsumer)93571": {
            "label": "contract ITherundownConsumer"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_uint8,t_bool))": {
            "label": "mapping(uint256 => mapping(uint8 => bool))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint8,t_bool)": {
            "label": "mapping(uint8 => bool)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "c9828bd82016976df4bf6a990b480781cee5d887b1aca0a06e6ee376cdbb0501": {
      "address": "0xCf91C94f1a06D259f817C2e5fd18a19c94802da2",
      "txHash": "0xf0b60abb4405b5128f50dd3bbb897995d13ce568eb9dba21f5d161b9cbcdbf79",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)93571",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:32"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)93718",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:33"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)92654",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:34"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)91103_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:37"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)91103_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:38"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:39"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:40"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:41"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "doesSportSupportSpreadAndTotal",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:42"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:45"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:46"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketSpreadChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_int16,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:47"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketTotalChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_uint24,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:48"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:49"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketSread",
            "type": "t_mapping(t_address,t_int16)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:50"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketTotal",
            "type": "t_mapping(t_address,t_uint24)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:51"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveTotalChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:52"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveSpreadChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:53"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "isSpreadChildMarket",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:54"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:55"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "normalizedOddsForMarketFulfilled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:56"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "normalizedOddsForMarket",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:57"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsReceiver",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:58"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)93571": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)93718": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)92654": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)91103_storage)": {
            "label": "mapping(bytes32 => struct IGamesOddsObtainer.GameOdds)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(GameOdds)91103_storage": {
            "label": "struct IGamesOddsObtainer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadHome",
                "type": "t_int16"
              },
              {
                "label": "spreadHomeOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadAway",
                "type": "t_int16"
              },
              {
                "label": "spreadAwayOdds",
                "type": "t_int24"
              },
              {
                "label": "totalOver",
                "type": "t_uint24"
              },
              {
                "label": "totalOverOdds",
                "type": "t_int24"
              },
              {
                "label": "totalUnder",
                "type": "t_uint24"
              },
              {
                "label": "totalUnderOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_int24": {
            "label": "int24"
          },
          "t_int16": {
            "label": "int16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_int16,t_address))": {
            "label": "mapping(address => mapping(int16 => address))"
          },
          "t_mapping(t_int16,t_address)": {
            "label": "mapping(int16 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint24,t_address))": {
            "label": "mapping(address => mapping(uint24 => address))"
          },
          "t_mapping(t_uint24,t_address)": {
            "label": "mapping(uint24 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_int16)": {
            "label": "mapping(address => int16)"
          },
          "t_mapping(t_address,t_uint24)": {
            "label": "mapping(address => uint24)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "8953b6d13f1a4ee1db3cbd0581e41844212b08552e124da38b932ca85abfb97b": {
      "address": "0x5311EF5370EAf6eb428DD4eA556AA3461269Aee0",
      "txHash": "0xd421eddab8553e8488224d2ab7000c459344a0accc7c0c723553a1c96f7381f7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:61"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:62"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:65"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:66"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:67"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)67560_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:70"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)67571_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:71"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)67580_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:72"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:73"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:74"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:75"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:78"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:79"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:80"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:81"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)95183",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:84"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:85"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:86"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:87"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:88"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)67508",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:94"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:95"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:96"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:97"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:98"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:99"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOnADate",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:100"
          },
          {
            "contract": "TherundownConsumer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)96263",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:102"
          },
          {
            "contract": "TherundownConsumer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)67580_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:103"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsObtainer",
            "type": "t_contract(IGamesOddsObtainer)93730",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:104"
          },
          {
            "contract": "TherundownConsumer",
            "label": "maxNumberOfMarketsToResolve",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:105"
          },
          {
            "contract": "TherundownConsumer",
            "label": "playerProps",
            "type": "t_contract(IGamesPlayerProps)93904",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:106"
          },
          {
            "contract": "TherundownConsumer",
            "label": "ignoreChildCancellationPerSportIfDraw",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:107"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)67560_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)67560_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)67571_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)67571_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)67580_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)67580_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)95183": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)67508": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          },
          "t_contract(ITherundownConsumerVerifier)96263": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(IGamesOddsObtainer)93730": {
            "label": "contract IGamesOddsObtainer"
          },
          "t_contract(IGamesPlayerProps)93904": {
            "label": "contract IGamesPlayerProps"
          }
        }
      }
    },
    "0fd7aeb32237f7f9660b89d87fbe06804b02469efa1df0686f48404e63870a5e": {
      "address": "0xB78bebCaE35B5d60A4c62505c0637f3aAe1AD9f3",
      "txHash": "0xb1540d08541d6ab1d8fe61a92a0561f57117a7d559f3ddb609a5bc3e40c2cb6a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)93571",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:27"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "invalidName",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:28"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "supportedMarketType",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:29"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultOddsThreshold",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:30"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "oddsThresholdForSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:31"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultBookmakerIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:33"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "sportIdToBookmakerIds",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:34"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "obtainer",
            "type": "t_contract(IGamesOddsObtainer)91337",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:35"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)92654",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:36"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:37"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "minOddsForCheckingThresholdDefault",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:39"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "minOddsForCheckingThresholdPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:40"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "playerProps",
            "type": "t_contract(IGamesPlayerProps)91498",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:42"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultPlayerPropsBookmakerIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:43"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "sportIdForPlayerPropsToBookmakerIds",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:44"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)93571": {
            "label": "contract ITherundownConsumer"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_contract(IGamesOddsObtainer)91337": {
            "label": "contract IGamesOddsObtainer"
          },
          "t_contract(ISportPositionalMarketManager)92654": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IGamesPlayerProps)91498": {
            "label": "contract IGamesPlayerProps"
          }
        }
      }
    },
    "6941f503038e5e911a35fd902cef63d4484744dff9ca42a278e858037a68973e": {
      "address": "0xd6D53745a423A30B97E34D77bf141e81fBc48936",
      "txHash": "0x0991ec68c05d287c819424777ff47f2460d4952d0547ab803c4a59ba0f8a5c33",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "expiryDuration",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:34"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "marketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:36"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "customMarketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:37"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:39"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)98830_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:41"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)98830_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:42"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_migratingManager",
            "type": "t_contract(SportPositionalMarketManager)81356",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:44"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sUSD",
            "type": "t_contract(IERC20)4879",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:46"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:48"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sportPositionalMarketFactory",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:49"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:50"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:51"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:52"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "cancelTimeout",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:53"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedCancelAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:54"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "oddsObtainer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:55"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "isDoubleChance",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:57"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "isDoubleChanceSupported",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:58"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "doubleChanceMarketsByParent",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:59"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "doesSportSupportDoubleChance",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:60"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "playerProps",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:61"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)98830_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(SportPositionalMarketManager)81356": {
            "label": "contract SportPositionalMarketManager"
          },
          "t_contract(IERC20)4879": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          }
        }
      }
    },
    "23fd15fbf4d94c7ad6c5edc627c6f675ed9c01df6d6423a61478c701181bb495": {
      "address": "0x02aF89a3ACD4E8a7c6Ed4A0d6672b2Ed416b92b0",
      "txHash": "0xcdd79821cd426ea73bb14b288b95eeb47d667def529d6e08a8edd111a726ecf4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportAMMRiskManager.sol:22"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportAMMRiskManager.sol:23"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/SportAMMRiskManager.sol:24"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "capPerSportAndChild",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/SportMarkets/SportAMMRiskManager.sol:25"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportAMMRiskManager.sol:26"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "defaultRiskMultiplier",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportAMMRiskManager.sol:28"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "riskMultiplierForSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/SportAMMRiskManager.sol:29"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "riskMultiplierPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportAMMRiskManager.sol:30"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "maxCap",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportAMMRiskManager.sol:32"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "maxRiskMultiplier",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportAMMRiskManager.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fd14fdd717502870deadf055ceb45efe230ac5b38b99874fea1d99c0329e0df0": {
      "address": "0xC9880B641575f22e9FcefB3DaEd88E27c23338Be",
      "txHash": "0xeb585484ca290b93e6cedda4286d5addd6d7de2585f1d1072c53530fec783370",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)548",
            "src": "contracts/SportMarkets/SportsAMM.sol:40"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:43"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:47"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:50"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:53"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:57"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:66"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:69"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:72"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:75"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)10563",
            "src": "contracts/SportMarkets/SportsAMM.sol:78"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:81"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:84"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)9516",
            "src": "contracts/SportMarkets/SportsAMM.sol:87"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:90"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:93"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:96"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportsAMM.sol:99"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:102"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:105"
          },
          {
            "contract": "SportsAMM",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:108"
          },
          {
            "contract": "SportsAMM",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:111"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:114"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:117"
          },
          {
            "contract": "SportsAMM",
            "label": "sportAmmUtils",
            "type": "t_contract(SportsAMMUtils)9489",
            "src": "contracts/SportMarkets/SportsAMM.sol:119"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:122"
          },
          {
            "contract": "SportsAMM",
            "label": "thresholdForOddsUpdate",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:126"
          },
          {
            "contract": "SportsAMM",
            "label": "wrapper",
            "type": "t_contract(ITherundownConsumerWrapper)10834",
            "src": "contracts/SportMarkets/SportsAMM.sol:129"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:132"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:135"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSportAndChild",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/SportMarkets/SportsAMM.sol:138"
          },
          {
            "contract": "SportsAMM",
            "label": "liquidityPool",
            "type": "t_contract(SportAMMLiquidityPool)3993",
            "src": "contracts/SportMarkets/SportsAMM.sol:158"
          },
          {
            "contract": "SportsAMM",
            "label": "minSpreadPerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/SportMarkets/SportsAMM.sol:161"
          },
          {
            "contract": "SportsAMM",
            "label": "isMarketForSportOnePositional",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/SportsAMM.sol:164"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOddsPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:167"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSpreadPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:170"
          },
          {
            "contract": "SportsAMM",
            "label": "riskManager",
            "type": "t_contract(ISportAMMRiskManager)9895",
            "src": "contracts/SportMarkets/SportsAMM.sol:172"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnParent",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:175"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)548": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)10563": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)9516": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(SportsAMMUtils)9489": {
            "label": "contract SportsAMMUtils"
          },
          "t_contract(ITherundownConsumerWrapper)10834": {
            "label": "contract ITherundownConsumerWrapper"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(SportAMMLiquidityPool)3993": {
            "label": "contract SportAMMLiquidityPool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportAMMRiskManager)9895": {
            "label": "contract ISportAMMRiskManager"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "dab5b76256416657c6c3605c7efd044db9553ea92650c1e67b78c327c9c64e9c": {
      "address": "0x32189668f9C6e621e1c95A60ED975dfa0c6586dc",
      "txHash": "0x48d8650fac86c45c57ed2c165a5da2b8a18e1c25a5edca0a8a830a0f8c31c54c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sportsAMM",
            "type": "t_contract(ISportsAMM)92877",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:41"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:42"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:44"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:46"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:47"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:48"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:50"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:52"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:53"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:55"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:56"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:58"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:60"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:61"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:63"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:64"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:66"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:67"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:68"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:69"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:71"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)92964",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:73"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:75"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:77"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:79"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:81"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "onlyWhitelistedStakersAllowed",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:83"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedStakers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:85"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:87"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "marketAlreadyExercisedInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:89"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundClosingPrepared",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:91"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersProcessedInRound",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:93"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "withdrawalShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:95"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "utilizationRate",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:97"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:99"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:100"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)92877": {
            "label": "contract ISportsAMM"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)92964": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e081ab1a15a1ed5c2a62090a36a7c438258f35581982c14b53ef0380be513114": {
      "address": "0x22f9192E4135e31E237A28bFDa725D68f63F1F5e",
      "txHash": "0x08ae5bbd122943138623df1e3f9385d0c3c76756f5b6dccacaa7ebf53882ba69",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)4168",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:33"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)4324",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:34"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)3905",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:35"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playerPropsReceiver",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:36"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playerProp",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerProps)3030_storage)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:39"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "doesSportSupportPlayerProps",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:40"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:41"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playerIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:42"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "optionIdPerChildMarket",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:43"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:46"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "mainMarketPausedPlayerProps",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:47"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:48"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "mainMarketChildMarketPerPlayerAndOptionIndex",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint256,t_address))))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:49"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "numberOfChildMarketsPerPlayerAndOption",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_uint256)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:51"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "mainMarketPlayerOptionLineChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint16,t_address))))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:52"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:54"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "currentActiveChildMarketPerPlayerAndOption",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_address)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:55"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "normalizedOddsForMarket",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:56"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "normalizedOddsForMarketFulfilled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:57"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:58"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "childMarketLine",
            "type": "t_mapping(t_address,t_uint16)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:59"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "invalidOddsForPlayerProps",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_bool)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:60"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "createFulfilledForPlayerProps",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_bool)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:61"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "resolveFulfilledForPlayerProps",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_bool)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:62"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "pausedByInvalidOddsOnMain",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:63"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "pausedByCircuitBreakerOnMain",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:64"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playerPropsAddedForMain",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:65"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playersInAGame",
            "type": "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:67"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playersInAGameFulfilled",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bool))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:68"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "allOptionsPerPlayer",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_array(t_uint8)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:69"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "resolvedPlayerProps",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerPropsResolver)3041_storage)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:70"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "childMarketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:72"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)4168": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)4324": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)3905": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerProps)3030_storage)))": {
            "label": "mapping(bytes32 => mapping(bytes32 => mapping(uint8 => struct IGamesPlayerProps.PlayerProps)))"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerProps)3030_storage))": {
            "label": "mapping(bytes32 => mapping(uint8 => struct IGamesPlayerProps.PlayerProps))"
          },
          "t_mapping(t_uint8,t_struct(PlayerProps)3030_storage)": {
            "label": "mapping(uint8 => struct IGamesPlayerProps.PlayerProps)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(PlayerProps)3030_storage": {
            "label": "struct IGamesPlayerProps.PlayerProps",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "playerId",
                "type": "t_bytes32"
              },
              {
                "label": "option",
                "type": "t_uint8"
              },
              {
                "label": "playerName",
                "type": "t_string_storage"
              },
              {
                "label": "line",
                "type": "t_uint16"
              },
              {
                "label": "overOdds",
                "type": "t_int24"
              },
              {
                "label": "underOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint256,t_address))))": {
            "label": "mapping(address => mapping(bytes32 => mapping(uint8 => mapping(uint256 => address))))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint256,t_address)))": {
            "label": "mapping(bytes32 => mapping(uint8 => mapping(uint256 => address)))"
          },
          "t_mapping(t_uint8,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint8 => mapping(uint256 => address))"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_uint256)))": {
            "label": "mapping(address => mapping(bytes32 => mapping(uint8 => uint256)))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint8 => uint256))"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint16,t_address))))": {
            "label": "mapping(address => mapping(bytes32 => mapping(uint8 => mapping(uint16 => address))))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint16,t_address)))": {
            "label": "mapping(bytes32 => mapping(uint8 => mapping(uint16 => address)))"
          },
          "t_mapping(t_uint8,t_mapping(t_uint16,t_address))": {
            "label": "mapping(uint8 => mapping(uint16 => address))"
          },
          "t_mapping(t_uint16,t_address)": {
            "label": "mapping(uint16 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_address)))": {
            "label": "mapping(address => mapping(bytes32 => mapping(uint8 => address)))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_address))": {
            "label": "mapping(bytes32 => mapping(uint8 => address))"
          },
          "t_mapping(t_uint8,t_address)": {
            "label": "mapping(uint8 => address)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint16)": {
            "label": "mapping(address => uint16)"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_bool)))": {
            "label": "mapping(bytes32 => mapping(bytes32 => mapping(uint8 => bool)))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_bool))": {
            "label": "mapping(bytes32 => mapping(uint8 => bool))"
          },
          "t_mapping(t_uint8,t_bool)": {
            "label": "mapping(uint8 => bool)"
          },
          "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(bytes32 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(bytes32 => mapping(bytes32 => bool))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_array(t_uint8)dyn_storage))": {
            "label": "mapping(bytes32 => mapping(bytes32 => uint8[]))"
          },
          "t_mapping(t_bytes32,t_array(t_uint8)dyn_storage)": {
            "label": "mapping(bytes32 => uint8[])"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerPropsResolver)3041_storage)))": {
            "label": "mapping(bytes32 => mapping(bytes32 => mapping(uint8 => struct IGamesPlayerProps.PlayerPropsResolver)))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerPropsResolver)3041_storage))": {
            "label": "mapping(bytes32 => mapping(uint8 => struct IGamesPlayerProps.PlayerPropsResolver))"
          },
          "t_mapping(t_uint8,t_struct(PlayerPropsResolver)3041_storage)": {
            "label": "mapping(uint8 => struct IGamesPlayerProps.PlayerPropsResolver)"
          },
          "t_struct(PlayerPropsResolver)3041_storage": {
            "label": "struct IGamesPlayerProps.PlayerPropsResolver",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "playerId",
                "type": "t_bytes32"
              },
              {
                "label": "option",
                "type": "t_uint8"
              },
              {
                "label": "score",
                "type": "t_uint16"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              }
            ]
          }
        }
      }
    },
    "7f72853bb3a59c439906bbe7d039ad5d5ed8251ccc629d3e84a534e3cd122487": {
      "address": "0xF41A9B14b5DF3DC3357AD28500EC5e900ae7a044",
      "txHash": "0x0c258adac97c0845789c1598d10086935344fbe1fa8b952ac982ae5f8d04dd5d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesPlayerPropsReceiver",
            "label": "playerProps",
            "type": "t_contract(IGamesPlayerProps)1485",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerPropsReceiver.sol:19"
          },
          {
            "contract": "GamesPlayerPropsReceiver",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)1748",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerPropsReceiver.sol:20"
          },
          {
            "contract": "GamesPlayerPropsReceiver",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerPropsReceiver.sol:22"
          },
          {
            "contract": "GamesPlayerPropsReceiver",
            "label": "isValidOptionPerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_bool))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerPropsReceiver.sol:23"
          },
          {
            "contract": "GamesPlayerPropsReceiver",
            "label": "optionsPerSport",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerPropsReceiver.sol:24"
          },
          {
            "contract": "GamesPlayerPropsReceiver",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerPropsReceiver.sol:26"
          }
        ],
        "types": {
          "t_contract(IGamesPlayerProps)1485": {
            "label": "contract IGamesPlayerProps"
          },
          "t_contract(ITherundownConsumer)1748": {
            "label": "contract ITherundownConsumer"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_uint8,t_bool))": {
            "label": "mapping(uint256 => mapping(uint8 => bool))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint8,t_bool)": {
            "label": "mapping(uint8 => bool)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "b2c963c64aa498e9aeb6d05ee8526a932405cc41255ac73c144d1c2bc15b2902": {
      "address": "0x34a061918eB8fE4De16Fb2193617e256ab00a895",
      "txHash": "0xdc1ccbe55b38545113a1c2e16d3b93db3c125d3d8286e04cfe17362888c7daf4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)94413",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:27"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "invalidName",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:28"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "supportedMarketType",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:29"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultOddsThreshold",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:30"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "oddsThresholdForSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:31"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultBookmakerIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:33"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "sportIdToBookmakerIds",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:34"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "obtainer",
            "type": "t_contract(IGamesOddsObtainer)92139",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:35"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)93489",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:36"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:37"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "minOddsForCheckingThresholdDefault",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:39"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "minOddsForCheckingThresholdPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:40"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "playerProps",
            "type": "t_contract(IGamesPlayerProps)92313",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:42"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultPlayerPropsBookmakerIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:43"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "sportIdForPlayerPropsToBookmakerIds",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:44"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)94413": {
            "label": "contract ITherundownConsumer"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_contract(IGamesOddsObtainer)92139": {
            "label": "contract IGamesOddsObtainer"
          },
          "t_contract(ISportPositionalMarketManager)93489": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IGamesPlayerProps)92313": {
            "label": "contract IGamesPlayerProps"
          }
        }
      }
    },
    "8e13647abbfbf2a20626d821b554e800d238da319d063f9f19d9d944a8829e39": {
      "address": "0x01e0e3c22f6Ff60282aE9F0066C9e8F230666DE1",
      "txHash": "0x73322b20efbfeb4508816451a1cff4c39f2cac02082314243fd4a2d2fe2ad814",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:23"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:24"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:25"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "capPerSportAndChild",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:26"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:27"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "defaultRiskMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:29"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "riskMultiplierForSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:30"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "riskMultiplierPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:31"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "maxCap",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:33"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "maxRiskMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:34"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "isMarketForSportOnePositional",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:36"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "isMarketForPlayerPropsOnePositional",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "cc3d948933b28069d0b48aaf19bb478596ffc9605fec930ef3b8ca11df1a83db": {
      "address": "0xf723aE78e1201bA916BA6CaCc4Dc0D43BC6a9075",
      "txHash": "0xed616c7c9286c29dbcc975e6ad1b6aa97b8f39ffa5135c8b1f44858bc67f1e28",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:41"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:44"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:48"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:51"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:54"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:58"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:67"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:70"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:73"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:76"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)94035",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:79"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:82"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:85"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)92016",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:88"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:91"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:94"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:97"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:100"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:103"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:106"
          },
          {
            "contract": "SportsAMM",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:109"
          },
          {
            "contract": "SportsAMM",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:112"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:115"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:118"
          },
          {
            "contract": "SportsAMM",
            "label": "sportAmmUtils",
            "type": "t_contract(SportsAMMUtils)87644",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:120"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:123"
          },
          {
            "contract": "SportsAMM",
            "label": "thresholdForOddsUpdate",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:127"
          },
          {
            "contract": "SportsAMM",
            "label": "wrapper",
            "type": "t_contract(ITherundownConsumerWrapper)94832",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:130"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:133"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:136"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSportAndChild",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:139"
          },
          {
            "contract": "SportsAMM",
            "label": "liquidityPool",
            "type": "t_contract(SportAMMLiquidityPool)47556",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:159"
          },
          {
            "contract": "SportsAMM",
            "label": "minSpreadPerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:162"
          },
          {
            "contract": "SportsAMM",
            "label": "isMarketForSportOnePositional",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:165"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOddsPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:168"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSpreadPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:171"
          },
          {
            "contract": "SportsAMM",
            "label": "riskManager",
            "type": "t_contract(ISportAMMRiskManager)93350",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:173"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnParent",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:176"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)94035": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)92016": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(SportsAMMUtils)87644": {
            "label": "contract SportsAMMUtils"
          },
          "t_contract(ITherundownConsumerWrapper)94832": {
            "label": "contract ITherundownConsumerWrapper"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(SportAMMLiquidityPool)47556": {
            "label": "contract SportAMMLiquidityPool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportAMMRiskManager)93350": {
            "label": "contract ISportAMMRiskManager"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1a8438194a894457cd9099cea42a5f3b056531c15cedd6874b5ce757b4ab28c8": {
      "address": "0x23c20d4632ADAAB56b9022E72Ed6E5fe9358952F",
      "txHash": "0x7e636b8e63254ff626a4691e516025427ea55c035387d9dd1c3d4b2a6ef94193",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)4178",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:33"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)4334",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:34"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)3915",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:35"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playerPropsReceiver",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:36"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playerProp",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerProps)3040_storage)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:39"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "doesSportSupportPlayerProps",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:40"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:41"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playerIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:42"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "optionIdPerChildMarket",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:43"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:46"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "mainMarketPausedPlayerProps",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:47"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:48"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "mainMarketChildMarketPerPlayerAndOptionIndex",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint256,t_address))))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:49"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "numberOfChildMarketsPerPlayerAndOption",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_uint256)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:51"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "mainMarketPlayerOptionLineChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint16,t_address))))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:52"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:54"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "currentActiveChildMarketPerPlayerAndOption",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_address)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:55"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "normalizedOddsForMarket",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:56"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "normalizedOddsForMarketFulfilled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:57"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:58"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "childMarketLine",
            "type": "t_mapping(t_address,t_uint16)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:59"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "invalidOddsForPlayerProps",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_bool)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:60"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "createFulfilledForPlayerProps",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_bool)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:61"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "resolveFulfilledForPlayerProps",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_bool)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:62"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "pausedByInvalidOddsOnMain",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:63"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "pausedByCircuitBreakerOnMain",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:64"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playerPropsAddedForMain",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:65"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playersInAGame",
            "type": "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:67"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playersInAGameFulfilled",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bool))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:68"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "allOptionsPerPlayer",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_array(t_uint8)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:69"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "resolvedPlayerProps",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerPropsResolver)3051_storage)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:70"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "childMarketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:72"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)4178": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)4334": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)3915": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerProps)3040_storage)))": {
            "label": "mapping(bytes32 => mapping(bytes32 => mapping(uint8 => struct IGamesPlayerProps.PlayerProps)))"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerProps)3040_storage))": {
            "label": "mapping(bytes32 => mapping(uint8 => struct IGamesPlayerProps.PlayerProps))"
          },
          "t_mapping(t_uint8,t_struct(PlayerProps)3040_storage)": {
            "label": "mapping(uint8 => struct IGamesPlayerProps.PlayerProps)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(PlayerProps)3040_storage": {
            "label": "struct IGamesPlayerProps.PlayerProps",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "playerId",
                "type": "t_bytes32"
              },
              {
                "label": "option",
                "type": "t_uint8"
              },
              {
                "label": "playerName",
                "type": "t_string_storage"
              },
              {
                "label": "line",
                "type": "t_uint16"
              },
              {
                "label": "overOdds",
                "type": "t_int24"
              },
              {
                "label": "underOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint256,t_address))))": {
            "label": "mapping(address => mapping(bytes32 => mapping(uint8 => mapping(uint256 => address))))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint256,t_address)))": {
            "label": "mapping(bytes32 => mapping(uint8 => mapping(uint256 => address)))"
          },
          "t_mapping(t_uint8,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint8 => mapping(uint256 => address))"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_uint256)))": {
            "label": "mapping(address => mapping(bytes32 => mapping(uint8 => uint256)))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint8 => uint256))"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint16,t_address))))": {
            "label": "mapping(address => mapping(bytes32 => mapping(uint8 => mapping(uint16 => address))))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint16,t_address)))": {
            "label": "mapping(bytes32 => mapping(uint8 => mapping(uint16 => address)))"
          },
          "t_mapping(t_uint8,t_mapping(t_uint16,t_address))": {
            "label": "mapping(uint8 => mapping(uint16 => address))"
          },
          "t_mapping(t_uint16,t_address)": {
            "label": "mapping(uint16 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_address)))": {
            "label": "mapping(address => mapping(bytes32 => mapping(uint8 => address)))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_address))": {
            "label": "mapping(bytes32 => mapping(uint8 => address))"
          },
          "t_mapping(t_uint8,t_address)": {
            "label": "mapping(uint8 => address)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint16)": {
            "label": "mapping(address => uint16)"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_bool)))": {
            "label": "mapping(bytes32 => mapping(bytes32 => mapping(uint8 => bool)))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_bool))": {
            "label": "mapping(bytes32 => mapping(uint8 => bool))"
          },
          "t_mapping(t_uint8,t_bool)": {
            "label": "mapping(uint8 => bool)"
          },
          "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(bytes32 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(bytes32 => mapping(bytes32 => bool))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_array(t_uint8)dyn_storage))": {
            "label": "mapping(bytes32 => mapping(bytes32 => uint8[]))"
          },
          "t_mapping(t_bytes32,t_array(t_uint8)dyn_storage)": {
            "label": "mapping(bytes32 => uint8[])"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerPropsResolver)3051_storage)))": {
            "label": "mapping(bytes32 => mapping(bytes32 => mapping(uint8 => struct IGamesPlayerProps.PlayerPropsResolver)))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerPropsResolver)3051_storage))": {
            "label": "mapping(bytes32 => mapping(uint8 => struct IGamesPlayerProps.PlayerPropsResolver))"
          },
          "t_mapping(t_uint8,t_struct(PlayerPropsResolver)3051_storage)": {
            "label": "mapping(uint8 => struct IGamesPlayerProps.PlayerPropsResolver)"
          },
          "t_struct(PlayerPropsResolver)3051_storage": {
            "label": "struct IGamesPlayerProps.PlayerPropsResolver",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "playerId",
                "type": "t_bytes32"
              },
              {
                "label": "option",
                "type": "t_uint8"
              },
              {
                "label": "score",
                "type": "t_uint16"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              }
            ]
          }
        }
      }
    },
    "f565e2756452ad339db3c5cb1e990eea710ea19e117699f98a564c3d511ef20e": {
      "address": "0xA525A0A446Dd4Bd8921840564124032aAD868c93",
      "txHash": "0x82efb0de145361c009ffa07c95555707c9ad2de7ba2da1eafcaee06585261759",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)100656_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:35"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)100656_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:36"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:41"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:43"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:45"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFee",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:46"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:48"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "supportedAsset",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:50"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minimalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:52"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:53"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:55"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:56"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:58"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:59"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "assetToPythId",
            "type": "t_mapping(t_bytes32,t_bytes32)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:61"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "pyth",
            "type": "t_contract(IPyth)12062",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:64"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelay",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:66"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)94657",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:69"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)100656_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:71"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)100656_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:72"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:88"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)93155",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:89"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:90"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)42385,t_uint256))",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:92"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)42385,t_uint256))",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:93"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelayForResolving",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:101"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "marketHasCreatedAtAttribute",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:103"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:105"
          }
        ],
        "types": {
          "t_struct(AddressSet)100656_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_contract(IPyth)12062": {
            "label": "contract IPyth"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(IStakingThales)94657": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_struct(AddressSet)100656_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(IMultiCollateralOnOffRamp)93155": {
            "label": "contract IMultiCollateralOnOffRamp"
          },
          "t_mapping(t_bytes32,t_mapping(t_enum(Direction)42385,t_uint256))": {
            "label": "mapping(bytes32 => mapping(enum SpeedMarket.Direction => uint256))"
          },
          "t_mapping(t_enum(Direction)42385,t_uint256)": {
            "label": "mapping(enum SpeedMarket.Direction => uint256)"
          },
          "t_enum(Direction)42385": {
            "label": "enum SpeedMarket.Direction",
            "members": [
              "Up",
              "Down"
            ]
          }
        }
      }
    },
    "14ded68b0ebed8bd7ed95036383abdb3efa879266b87414e601942548443c850": {
      "address": "0x38a50ebB6b299361D4492D488F95e13bE0A6b693",
      "txHash": "0x3779d6c4f533baafd3863422d72314f632933ef46e117fb9894a494821445dd2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "MultiCollateralOnOffRamp",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SpeedMarkets\\MultiCollateralOnOffRamp.sol:41"
          },
          {
            "contract": "MultiCollateralOnOffRamp",
            "label": "collateralSupported",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\MultiCollateralOnOffRamp.sol:43"
          },
          {
            "contract": "MultiCollateralOnOffRamp",
            "label": "ammsSupported",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\MultiCollateralOnOffRamp.sol:45"
          },
          {
            "contract": "MultiCollateralOnOffRamp",
            "label": "swapRouter",
            "type": "t_contract(ISwapRouter)13358",
            "src": "contracts\\SpeedMarkets\\MultiCollateralOnOffRamp.sol:47"
          },
          {
            "contract": "MultiCollateralOnOffRamp",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)93806",
            "src": "contracts\\SpeedMarkets\\MultiCollateralOnOffRamp.sol:49"
          },
          {
            "contract": "MultiCollateralOnOffRamp",
            "label": "WETH9",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\MultiCollateralOnOffRamp.sol:51"
          },
          {
            "contract": "MultiCollateralOnOffRamp",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\MultiCollateralOnOffRamp.sol:52"
          },
          {
            "contract": "MultiCollateralOnOffRamp",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\MultiCollateralOnOffRamp.sol:53"
          },
          {
            "contract": "MultiCollateralOnOffRamp",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\MultiCollateralOnOffRamp.sol:54"
          },
          {
            "contract": "MultiCollateralOnOffRamp",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\SpeedMarkets\\MultiCollateralOnOffRamp.sol:56"
          },
          {
            "contract": "MultiCollateralOnOffRamp",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\MultiCollateralOnOffRamp.sol:58"
          },
          {
            "contract": "MultiCollateralOnOffRamp",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)92535",
            "src": "contracts\\SpeedMarkets\\MultiCollateralOnOffRamp.sol:60"
          },
          {
            "contract": "MultiCollateralOnOffRamp",
            "label": "pathPerCollateral",
            "type": "t_mapping(t_address,t_bytes_storage)",
            "src": "contracts\\SpeedMarkets\\MultiCollateralOnOffRamp.sol:62"
          },
          {
            "contract": "MultiCollateralOnOffRamp",
            "label": "priceFeedKeyPerCollateral",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts\\SpeedMarkets\\MultiCollateralOnOffRamp.sol:64"
          },
          {
            "contract": "MultiCollateralOnOffRamp",
            "label": "manager",
            "type": "t_contract(IPositionalMarketManagerTruncated)93758",
            "src": "contracts\\SpeedMarkets\\MultiCollateralOnOffRamp.sol:66"
          },
          {
            "contract": "MultiCollateralOnOffRamp",
            "label": "pathPerCollateralOfframp",
            "type": "t_mapping(t_address,t_bytes_storage)",
            "src": "contracts\\SpeedMarkets\\MultiCollateralOnOffRamp.sol:68"
          },
          {
            "contract": "MultiCollateralOnOffRamp",
            "label": "maxAllowedPegSlippagePercentagePerCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SpeedMarkets\\MultiCollateralOnOffRamp.sol:70"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(ISwapRouter)13358": {
            "label": "contract ISwapRouter"
          },
          "t_contract(IPriceFeed)93806": {
            "label": "contract IPriceFeed"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(ICurveSUSD)92535": {
            "label": "contract ICurveSUSD"
          },
          "t_mapping(t_address,t_bytes_storage)": {
            "label": "mapping(address => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(IPositionalMarketManagerTruncated)93758": {
            "label": "contract IPositionalMarketManagerTruncated"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          }
        }
      }
    },
    "d407c4bd6d7fc9dc0ca847e4e2b4b15b20e0818edff320c3d809319de42abd59": {
      "address": "0x41C930190d4f3708bEA4B00a8d069d3a76a349C5",
      "txHash": "0x6c81458a9066cdfb507651ffe53f2af790500cb9a29ab8267d458c09da457d94",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:95"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:96"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "oddsObtainer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:97"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "consumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:98"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "voucherEscrow",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:99"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "dbc7d234d3a739e96dabff49f354e1aea2bd55d7b8ca9fcc20e27f4eb2d9b8d0": {
      "address": "0x4067A70366d48A406573a0122BBb603D69394c29",
      "txHash": "0x9353f67ac37c692c90ef1604c9b128dcdef81387fd6a9677b0622a05053ac488",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:43"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:46"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:48"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:51"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:54"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:58"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:67"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:70"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:73"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:76"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)95159",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:79"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:82"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:85"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)93037",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:87"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:89"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:91"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:93"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:95"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:98"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:101"
          },
          {
            "contract": "SportsAMM",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:104"
          },
          {
            "contract": "SportsAMM",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:106"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:109"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:111"
          },
          {
            "contract": "SportsAMM",
            "label": "sportAmmUtils",
            "type": "t_contract(SportsAMMUtils)88666",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:113"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:115"
          },
          {
            "contract": "SportsAMM",
            "label": "thresholdForOddsUpdate",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:119"
          },
          {
            "contract": "SportsAMM",
            "label": "wrapper",
            "type": "t_contract(ITherundownConsumerWrapper)95956",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:122"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:125"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:128"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSportAndChild",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:130"
          },
          {
            "contract": "SportsAMM",
            "label": "liquidityPool",
            "type": "t_contract(SportAMMLiquidityPool)48317",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:150"
          },
          {
            "contract": "SportsAMM",
            "label": "minSpreadPerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:152"
          },
          {
            "contract": "SportsAMM",
            "label": "isMarketForSportOnePositional",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:154"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOddsPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:156"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSpreadPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:158"
          },
          {
            "contract": "SportsAMM",
            "label": "riskManager",
            "type": "t_contract(ISportAMMRiskManager)94474",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:160"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnParent",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:162"
          },
          {
            "contract": "SportsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)93657",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:165"
          },
          {
            "contract": "SportsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:166"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)95159": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)93037": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(SportsAMMUtils)88666": {
            "label": "contract SportsAMMUtils"
          },
          "t_contract(ITherundownConsumerWrapper)95956": {
            "label": "contract ITherundownConsumerWrapper"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(SportAMMLiquidityPool)48317": {
            "label": "contract SportAMMLiquidityPool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportAMMRiskManager)94474": {
            "label": "contract ISportAMMRiskManager"
          },
          "t_contract(IMultiCollateralOnOffRamp)93657": {
            "label": "contract IMultiCollateralOnOffRamp"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b0e301e668db95c147293b559df70c6dd93e00a0f24314230aad6842c8c7f17a": {
      "address": "0x9727Fbc64B05c94286eEf3493F4CAe161B9ba3a8",
      "txHash": "0xc6956a80718be11328a86b9cb92808bc6918c6a556f0cd05fea40bebe5415d06",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:23"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:24"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:25"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "capPerSportAndChild",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:26"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:27"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "defaultRiskMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:29"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "riskMultiplierForSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:30"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "riskMultiplierPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:31"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "maxCap",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:33"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "maxRiskMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:34"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "isMarketForSportOnePositional",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:36"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "isMarketForPlayerPropsOnePositional",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:37"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "minSpreadPerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:40"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "minSupportedOddsPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:43"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "maxSpreadPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "290ecf6625b9a18e4850a3081d7d18dcb4f61855f5afa8ca5d5e681438ac9a6c": {
      "address": "0x7FBa9d5f7715f2f776afb6D3EB516eF7c1EaB294",
      "txHash": "0xde97cfd90c018625e02870a3b0532326bfcbe19985c0557f667cac35ab315889",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)14915",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)14706",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)1233",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)14992",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)13075",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:52"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:60"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:63"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)15265_storage",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)7520",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:69"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:70"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:72"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:73"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerGameCombination",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:76"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:80"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:82"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerPackedGamesCombination",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:84"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "SGPFeePerCombination",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:86"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayLP",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:88"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)13587",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:91"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:92"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)14915": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)14706": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)1233": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)14992": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)13075": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)15265_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)7520": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => uint256))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(IMultiCollateralOnOffRamp)13587": {
            "label": "contract IMultiCollateralOnOffRamp"
          }
        }
      }
    },
    "5cca1b5bc44981414f823a1d4bd45140bfd5823ab5101cf9e81e2988adcb58d8": {
      "address": "0xFE1586bF56771AacB09DF424582bF5178d7dCB20",
      "txHash": "0xcb2b52b6ef77f5f645ba1113dbb0675010e6d16803fa11551909d773bd1a2b13",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:43"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:46"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:48"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:51"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:54"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:58"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:67"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:70"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:73"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:76"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)100300",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:79"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:82"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:85"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)97931",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:87"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:89"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:91"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:93"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:95"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:98"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:101"
          },
          {
            "contract": "SportsAMM",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:104"
          },
          {
            "contract": "SportsAMM",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:106"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:109"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:111"
          },
          {
            "contract": "SportsAMM",
            "label": "sportAmmUtils",
            "type": "t_contract(SportsAMMUtils)93560",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:113"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:115"
          },
          {
            "contract": "SportsAMM",
            "label": "thresholdForOddsUpdate",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:119"
          },
          {
            "contract": "SportsAMM",
            "label": "wrapper",
            "type": "t_contract(ITherundownConsumerWrapper)101114",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:122"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:125"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:128"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSportAndChild",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:130"
          },
          {
            "contract": "SportsAMM",
            "label": "liquidityPool",
            "type": "t_contract(SportAMMLiquidityPool)48875",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:150"
          },
          {
            "contract": "SportsAMM",
            "label": "minSpreadPerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:152"
          },
          {
            "contract": "SportsAMM",
            "label": "isMarketForSportOnePositional",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:154"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOddsPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:156"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSpreadPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:158"
          },
          {
            "contract": "SportsAMM",
            "label": "riskManager",
            "type": "t_contract(ISportAMMRiskManager)99571",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:160"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnParent",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:162"
          },
          {
            "contract": "SportsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)98572",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:165"
          },
          {
            "contract": "SportsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:166"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)100300": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)97931": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(SportsAMMUtils)93560": {
            "label": "contract SportsAMMUtils"
          },
          "t_contract(ITherundownConsumerWrapper)101114": {
            "label": "contract ITherundownConsumerWrapper"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(SportAMMLiquidityPool)48875": {
            "label": "contract SportAMMLiquidityPool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportAMMRiskManager)99571": {
            "label": "contract ISportAMMRiskManager"
          },
          "t_contract(IMultiCollateralOnOffRamp)98572": {
            "label": "contract IMultiCollateralOnOffRamp"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6af3ebe6850262d84e2ded345bae5fc6d2af7cb95434547f71efb3d502594b8f": {
      "address": "0x0bb97ADfBB2cB3A7545d7712882F69a88805f9dE",
      "txHash": "0x9e41cd728cbaae9926647f9940cf67cf086fa7708025502da3a673e336a2b459",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)95183",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)94967",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)95270",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)93141",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:52"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:60"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:63"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)101269_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)61187",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:69"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:70"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:72"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:73"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerGameCombination",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:76"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:80"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:82"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerPackedGamesCombination",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:84"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "SGPFeePerCombination",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:86"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayLP",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:88"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)93761",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:91"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:92"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)95183": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)94967": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)95270": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)93141": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)101269_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)61187": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => uint256))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(IMultiCollateralOnOffRamp)93761": {
            "label": "contract IMultiCollateralOnOffRamp"
          }
        }
      }
    },
    "4a29f2843a670da62bddeeec22d59b15dc63f00e46bbd95df2db4b39b43ad5d6": {
      "address": "0xb61aE386ac7bc11CEDAD6D30AB12f28f552C688F",
      "txHash": "0x9f90fdca188c90f3fc61405bfca52ed191c9f5c9729b770303fe8b09d69a2e1a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:61"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:62"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:65"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:66"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:67"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)921_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:70"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)932_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:71"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)941_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:72"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:73"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:74"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:75"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:78"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:79"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:80"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:81"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)4850",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:84"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:85"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:86"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:87"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:88"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)869",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:94"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:95"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:96"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:97"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:98"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:99"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOnADate",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:100"
          },
          {
            "contract": "TherundownConsumer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)5006",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:102"
          },
          {
            "contract": "TherundownConsumer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)941_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:103"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsObtainer",
            "type": "t_contract(IGamesOddsObtainer)3958",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:104"
          },
          {
            "contract": "TherundownConsumer",
            "label": "maxNumberOfMarketsToResolve",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:105"
          },
          {
            "contract": "TherundownConsumer",
            "label": "playerProps",
            "type": "t_contract(IGamesPlayerProps)4132",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:106"
          },
          {
            "contract": "TherundownConsumer",
            "label": "ignoreChildCancellationPerSportIfDraw",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:107"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)921_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)921_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)932_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)932_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)941_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)941_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)4850": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)869": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          },
          "t_contract(ITherundownConsumerVerifier)5006": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(IGamesOddsObtainer)3958": {
            "label": "contract IGamesOddsObtainer"
          },
          "t_contract(IGamesPlayerProps)4132": {
            "label": "contract IGamesPlayerProps"
          }
        }
      }
    },
    "ff2a4683bfbfac044579e6b1cdac78c83b89ab6c4f7190ed128393b89d4a18bf": {
      "address": "0x1D5477DB1f8B582678f3C1A1D270f7fb7Bd7d8d8",
      "txHash": "0x93e005f152d4969c705e569ab278eef086b8e505a0f95ca7329657a0c09e39d9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)105202",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:27"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "invalidName",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:28"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "supportedMarketType",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:29"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultOddsThreshold",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:30"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "oddsThresholdForSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:31"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultBookmakerIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:33"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "sportIdToBookmakerIds",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:34"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "obtainer",
            "type": "t_contract(IGamesOddsObtainer)102470",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:35"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)104185",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:36"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:37"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "minOddsForCheckingThresholdDefault",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:39"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "minOddsForCheckingThresholdPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:40"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "playerProps",
            "type": "t_contract(IGamesPlayerProps)102658",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:42"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultPlayerPropsBookmakerIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:43"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "sportIdForPlayerPropsToBookmakerIds",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:44"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)105202": {
            "label": "contract ITherundownConsumer"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_contract(IGamesOddsObtainer)102470": {
            "label": "contract IGamesOddsObtainer"
          },
          "t_contract(ISportPositionalMarketManager)104185": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IGamesPlayerProps)102658": {
            "label": "contract IGamesPlayerProps"
          }
        }
      }
    },
    "16278d5fa640df99d7e1c12d45a498a04c184fbb5e11b9a886ac3996a8566eee": {
      "address": "0x57Ea564Ab0D93E5f594EA491e6c9AaF88628123D",
      "txHash": "0xdcedb5069e533d46985615cca9a97bea756cac5a015b287a7b2bff95ac10bafe",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:23"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:24"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:25"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "capPerSportAndChild",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:26"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:27"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "defaultRiskMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:29"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "riskMultiplierForSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:30"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "riskMultiplierPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:31"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "maxCap",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:33"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "maxRiskMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:34"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "isMarketForSportOnePositional",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:36"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "isMarketForPlayerPropsOnePositional",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:37"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "minSpreadPerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:40"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "minSupportedOddsPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:43"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "maxSpreadPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f8bc92e376a2d6f1bd154263a2c8630b8592106aa7fcd158c44110d1f812d7d5": {
      "address": "0x3B6da881AcFfcD86770674b87d2c7dCCc6E22B75",
      "txHash": "0x0d99f3707f1dc070b2189cd41275614b9e17e5c2f91de148a781dce920926e6b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)4439_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:36"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)4439_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:37"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)470",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:42"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:44"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:46"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFee",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:47"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:49"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "supportedAsset",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:51"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minimalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:53"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:54"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:56"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:57"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:59"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:60"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "assetToPythId",
            "type": "t_mapping(t_bytes32,t_bytes32)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:62"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "pyth",
            "type": "t_contract(IPyth)1502",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:65"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelay",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:67"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)4429",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:70"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)4439_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:72"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)4439_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:73"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:75"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)4192",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:76"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:77"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)1577,t_uint256))",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:79"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)1577,t_uint256))",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:80"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelayForResolving",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:82"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "marketHasCreatedAtAttribute",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:84"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:86"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "timeThresholdsForFees",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:88"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFees",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:89"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketsAMMUtils",
            "type": "t_contract(SpeedMarketsAMMUtils)4134",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:91"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "marketHasFeeAttribute",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:93"
          }
        ],
        "types": {
          "t_struct(AddressSet)4439_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)470": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_contract(IPyth)1502": {
            "label": "contract IPyth"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(IStakingThales)4429": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_struct(AddressSet)4439_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(IMultiCollateralOnOffRamp)4192": {
            "label": "contract IMultiCollateralOnOffRamp"
          },
          "t_mapping(t_bytes32,t_mapping(t_enum(Direction)1577,t_uint256))": {
            "label": "mapping(bytes32 => mapping(enum SpeedMarket.Direction => uint256))"
          },
          "t_mapping(t_enum(Direction)1577,t_uint256)": {
            "label": "mapping(enum SpeedMarket.Direction => uint256)"
          },
          "t_enum(Direction)1577": {
            "label": "enum SpeedMarket.Direction",
            "members": [
              "Up",
              "Down"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(SpeedMarketsAMMUtils)4134": {
            "label": "contract SpeedMarketsAMMUtils"
          }
        }
      }
    },
    "df516d98ad306e51fbb91f5c7e5c3be17ebc0df28b33a24d37c8e6e8343b3f29": {
      "address": "0x9c2c2EbE06E687cEE847B40F23b9F229F11F792c",
      "txHash": "0xb7eac299f49f75d4022e90d248781fea9c8d88c03c1b49915c069f67df6051b7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "SpeedMarketsAMMData",
            "label": "speedMarketsAMM",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMMData.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f23e08c0d0005b3674c69ff811c6e0bdd7afd70c942fe6f2b8200d0a8b4b0c95": {
      "address": "0x899B77fc0E210BE9ADe1531EddE6898a836eC9D1",
      "txHash": "0x08c49f5cdba17e767b7438fc744f570f9f436256c76eef3e1d569f2813bd4822",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ParlayPolicy",
            "label": "parlayMarketsAMM",
            "type": "t_contract(IParlayMarketsAMM)6450",
            "src": "contracts/SportMarkets/Parlay/ParlayPolicy.sol:21"
          },
          {
            "contract": "ParlayPolicy",
            "label": "sportsAMM",
            "type": "t_contract(ISportsAMMTiny)7373",
            "src": "contracts/SportMarkets/Parlay/ParlayPolicy.sol:22"
          },
          {
            "contract": "ParlayPolicy",
            "label": "consumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayPolicy.sol:23"
          },
          {
            "contract": "ParlayPolicy",
            "label": "eligibleSportForSamePropsCombination",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayPolicy.sol:24"
          }
        ],
        "types": {
          "t_contract(IParlayMarketsAMM)6450": {
            "label": "contract IParlayMarketsAMM"
          },
          "t_contract(ISportsAMMTiny)7373": {
            "label": "contract ISportsAMMTiny"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "816bdaebb849df2cf279db3d1bf6d3fbb41370e18c09cbf680f02c8c4a839cc0": {
      "address": "0xD2bde75380d96ff602768a3f28c1B038FD05E69C",
      "txHash": "0x34edc266f70a1a55b67537147443835d11b380664b881bf6174a53712d0d4862",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ParlayMarketData",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)106362_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:16"
          },
          {
            "contract": "ParlayMarketData",
            "label": "_parlaysInGamePosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)106362_storage))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:32"
          },
          {
            "contract": "ParlayMarketData",
            "label": "gameAddressPositionParlay",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:34"
          },
          {
            "contract": "ParlayMarketData",
            "label": "numOfParlaysInGamePosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:35"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayDetails",
            "type": "t_mapping(t_address,t_struct(ParlayDetails)56123_storage)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:37"
          },
          {
            "contract": "ParlayMarketData",
            "label": "userParlays",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:38"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayOwner",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:39"
          },
          {
            "contract": "ParlayMarketData",
            "label": "userNumOfParlays",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:40"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayMarketsAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketData.sol:41"
          }
        ],
        "types": {
          "t_struct(AddressSet)106362_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)106362_storage))": {
            "label": "mapping(address => mapping(uint256 => struct AddressSetLib.AddressSet))"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)106362_storage)": {
            "label": "mapping(uint256 => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))": {
            "label": "mapping(address => mapping(uint256 => mapping(uint256 => address)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint256 => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(ParlayDetails)56123_storage)": {
            "label": "mapping(address => struct ParlayMarketData.ParlayDetails)"
          },
          "t_struct(ParlayDetails)56123_storage": {
            "label": "struct ParlayMarketData.ParlayDetails",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "sUSDPaid",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "86c508c8e6f05d322197abb8c8e6ab78ee8455abca3d91adc51f0326b1da3203": {
      "address": "0xacE90C7af7e5767943792E76a09Fe434B3Cb8113",
      "txHash": "0x1eda2d94f624814a550fead5de9520c97261ca923d5dc40bb36e093b7d6614f2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:95"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:96"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "oddsObtainer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:97"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "consumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:98"
          },
          {
            "contract": "SportPositionalMarketData",
            "label": "voucherEscrow",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketData.sol:99"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "20af7e25b8c916915697ae56c0441d9cd69fe189a3de4f9b50a733467419f2b6": {
      "address": "0x11A771D2039B9b01894A445817DeA1baaD1210Ca",
      "txHash": "0x00e7e64242360cd6c6157496d414c015979c54cd10e576d619f226a05a694514",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)100215",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)100006",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)100346",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)97977",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:52"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:56"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:60"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:63"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)106362_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:66"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)65796",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:69"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:70"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:72"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:73"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerGameCombination",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:76"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:80"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:82"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerPackedGamesCombination",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:84"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "SGPFeePerCombination",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:86"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayLP",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:88"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)98618",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:91"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:92"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayPolicy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:94"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)100215": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)100006": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)100346": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)97977": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)106362_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)65796": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => uint256))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(IMultiCollateralOnOffRamp)98618": {
            "label": "contract IMultiCollateralOnOffRamp"
          }
        }
      }
    },
    "ac546cffd0c42f6a5925a3c2c44c98264a8e43b78fb2ae4c7940cde033363036": {
      "address": "0x7a2183Cd08518b888F8d21f555BF5038bb99211a",
      "txHash": "0xe71680971820648623fa9cd23c534208adcb37aa5b1024e92fd3df7a31612e74",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "expiryDuration",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:34"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "marketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:36"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "customMarketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:37"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:39"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)106936_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:41"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)106936_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:42"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_migratingManager",
            "type": "t_contract(SportPositionalMarketManager)88696",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:44"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sUSD",
            "type": "t_contract(IERC20)4879",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:46"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:48"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sportPositionalMarketFactory",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:49"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:50"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:51"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:52"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "cancelTimeout",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:53"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedCancelAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:54"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "oddsObtainer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:55"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "isDoubleChance",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:57"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "isDoubleChanceSupported",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:58"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "doubleChanceMarketsByParent",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:59"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "doesSportSupportDoubleChance",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:60"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "playerProps",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:61"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)106936_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(SportPositionalMarketManager)88696": {
            "label": "contract SportPositionalMarketManager"
          },
          "t_contract(IERC20)4879": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          }
        }
      }
    },
    "957b90ac583bb9596bdbe4ba7b680ce831fbfb1a87a57422dfd2eb075480b105": {
      "address": "0x1161A09C71f48476BA3c9beaC28a8524F69aCB66",
      "txHash": "0x8667de2b2670f61163c3e1604e802abd3d08d8b2f6dbb586dc595e8a8a69f981",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)105144",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:33"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)105300",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:34"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)104127",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:35"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playerPropsReceiver",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:36"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playerProp",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerProps)102429_storage)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:39"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "doesSportSupportPlayerProps",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:40"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:41"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playerIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:42"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "optionIdPerChildMarket",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:43"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:46"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "mainMarketPausedPlayerProps",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:47"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:48"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "mainMarketChildMarketPerPlayerAndOptionIndex",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint256,t_address))))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:49"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "numberOfChildMarketsPerPlayerAndOption",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_uint256)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:51"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "mainMarketPlayerOptionLineChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint16,t_address))))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:52"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:54"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "currentActiveChildMarketPerPlayerAndOption",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_address)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:55"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "normalizedOddsForMarket",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:56"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "normalizedOddsForMarketFulfilled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:57"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:58"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "childMarketLine",
            "type": "t_mapping(t_address,t_uint16)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:59"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "invalidOddsForPlayerProps",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_bool)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:60"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "createFulfilledForPlayerProps",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_bool)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:61"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "resolveFulfilledForPlayerProps",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_bool)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:62"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "pausedByInvalidOddsOnMain",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:63"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "pausedByCircuitBreakerOnMain",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:64"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playerPropsAddedForMain",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:65"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playersInAGame",
            "type": "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:67"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playersInAGameFulfilled",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bool))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:68"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "allOptionsPerPlayer",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_array(t_uint8)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:69"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "resolvedPlayerProps",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerPropsResolver)102440_storage)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:70"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "childMarketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:72"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)105144": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)105300": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)104127": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerProps)102429_storage)))": {
            "label": "mapping(bytes32 => mapping(bytes32 => mapping(uint8 => struct IGamesPlayerProps.PlayerProps)))"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerProps)102429_storage))": {
            "label": "mapping(bytes32 => mapping(uint8 => struct IGamesPlayerProps.PlayerProps))"
          },
          "t_mapping(t_uint8,t_struct(PlayerProps)102429_storage)": {
            "label": "mapping(uint8 => struct IGamesPlayerProps.PlayerProps)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(PlayerProps)102429_storage": {
            "label": "struct IGamesPlayerProps.PlayerProps",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "playerId",
                "type": "t_bytes32"
              },
              {
                "label": "option",
                "type": "t_uint8"
              },
              {
                "label": "playerName",
                "type": "t_string_storage"
              },
              {
                "label": "line",
                "type": "t_uint16"
              },
              {
                "label": "overOdds",
                "type": "t_int24"
              },
              {
                "label": "underOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint256,t_address))))": {
            "label": "mapping(address => mapping(bytes32 => mapping(uint8 => mapping(uint256 => address))))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint256,t_address)))": {
            "label": "mapping(bytes32 => mapping(uint8 => mapping(uint256 => address)))"
          },
          "t_mapping(t_uint8,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint8 => mapping(uint256 => address))"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_uint256)))": {
            "label": "mapping(address => mapping(bytes32 => mapping(uint8 => uint256)))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint8 => uint256))"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint16,t_address))))": {
            "label": "mapping(address => mapping(bytes32 => mapping(uint8 => mapping(uint16 => address))))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint16,t_address)))": {
            "label": "mapping(bytes32 => mapping(uint8 => mapping(uint16 => address)))"
          },
          "t_mapping(t_uint8,t_mapping(t_uint16,t_address))": {
            "label": "mapping(uint8 => mapping(uint16 => address))"
          },
          "t_mapping(t_uint16,t_address)": {
            "label": "mapping(uint16 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_address)))": {
            "label": "mapping(address => mapping(bytes32 => mapping(uint8 => address)))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_address))": {
            "label": "mapping(bytes32 => mapping(uint8 => address))"
          },
          "t_mapping(t_uint8,t_address)": {
            "label": "mapping(uint8 => address)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint16)": {
            "label": "mapping(address => uint16)"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_bool)))": {
            "label": "mapping(bytes32 => mapping(bytes32 => mapping(uint8 => bool)))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_bool))": {
            "label": "mapping(bytes32 => mapping(uint8 => bool))"
          },
          "t_mapping(t_uint8,t_bool)": {
            "label": "mapping(uint8 => bool)"
          },
          "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(bytes32 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(bytes32 => mapping(bytes32 => bool))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_array(t_uint8)dyn_storage))": {
            "label": "mapping(bytes32 => mapping(bytes32 => uint8[]))"
          },
          "t_mapping(t_bytes32,t_array(t_uint8)dyn_storage)": {
            "label": "mapping(bytes32 => uint8[])"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerPropsResolver)102440_storage)))": {
            "label": "mapping(bytes32 => mapping(bytes32 => mapping(uint8 => struct IGamesPlayerProps.PlayerPropsResolver)))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerPropsResolver)102440_storage))": {
            "label": "mapping(bytes32 => mapping(uint8 => struct IGamesPlayerProps.PlayerPropsResolver))"
          },
          "t_mapping(t_uint8,t_struct(PlayerPropsResolver)102440_storage)": {
            "label": "mapping(uint8 => struct IGamesPlayerProps.PlayerPropsResolver)"
          },
          "t_struct(PlayerPropsResolver)102440_storage": {
            "label": "struct IGamesPlayerProps.PlayerPropsResolver",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "playerId",
                "type": "t_bytes32"
              },
              {
                "label": "option",
                "type": "t_uint8"
              },
              {
                "label": "score",
                "type": "t_uint16"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              }
            ]
          }
        }
      }
    },
    "1dafb2706092dc6291fa88683275a57d1b420cf978e212ec111deda1d72a9a8e": {
      "address": "0x23DCAB8632aE3Cd97246345466887C62DC1fbF23",
      "txHash": "0xa84415e115a3829e257d633eee888daf46ae15b2be6bca066e53a04499855d57",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:25"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:26"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:27"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "capPerSportAndChild",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:28"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:29"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "defaultRiskMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:31"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "riskMultiplierForSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:32"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "riskMultiplierPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:33"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "maxCap",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:35"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "maxRiskMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:36"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "isMarketForSportOnePositional",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:38"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "isMarketForPlayerPropsOnePositional",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:39"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "minSpreadPerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:42"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "minSupportedOddsPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:45"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "maxSpreadPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:48"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "dynamicLiquidityCutoffTimePerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:50"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "dynamicLiquidityCutoffDividerPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "62c873750092c2348cd85dfe7b00f177cf76f9ef6dc05825d164cddf9494916b": {
      "address": "0xdbd09d7bFc71Dc93bDA3592F47E11a063E97f679",
      "txHash": "0xaa5b754e4ae1d4bfa727a1b877c76a269cd768dac63e18dc3a6d0181173fdb26",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:43"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:46"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:48"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:51"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:54"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:58"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:67"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:70"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:73"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:76"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)99807",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:79"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:82"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:85"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)97410",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:87"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:89"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:91"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:93"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:95"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:98"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:100"
          },
          {
            "contract": "SportsAMM",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:103"
          },
          {
            "contract": "SportsAMM",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:105"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:107"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:109"
          },
          {
            "contract": "SportsAMM",
            "label": "sportAmmUtils",
            "type": "t_contract(SportsAMMUtils)93039",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:111"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:113"
          },
          {
            "contract": "SportsAMM",
            "label": "thresholdForOddsUpdate",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:117"
          },
          {
            "contract": "SportsAMM",
            "label": "wrapper",
            "type": "t_contract(ITherundownConsumerWrapper)100621",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:120"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:123"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:126"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSportAndChild",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:128"
          },
          {
            "contract": "SportsAMM",
            "label": "liquidityPool",
            "type": "t_contract(SportAMMLiquidityPool)48875",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:148"
          },
          {
            "contract": "SportsAMM",
            "label": "minSpreadPerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:150"
          },
          {
            "contract": "SportsAMM",
            "label": "isMarketForSportOnePositional",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:152"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOddsPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:154"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSpreadPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:156"
          },
          {
            "contract": "SportsAMM",
            "label": "riskManager",
            "type": "t_contract(ISportAMMRiskManager)99050",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:158"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnParent",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:160"
          },
          {
            "contract": "SportsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)98051",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:163"
          },
          {
            "contract": "SportsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:164"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)99807": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)97410": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(SportsAMMUtils)93039": {
            "label": "contract SportsAMMUtils"
          },
          "t_contract(ITherundownConsumerWrapper)100621": {
            "label": "contract ITherundownConsumerWrapper"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(SportAMMLiquidityPool)48875": {
            "label": "contract SportAMMLiquidityPool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportAMMRiskManager)99050": {
            "label": "contract ISportAMMRiskManager"
          },
          "t_contract(IMultiCollateralOnOffRamp)98051": {
            "label": "contract IMultiCollateralOnOffRamp"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "79ee97e048f394acf4722c216805df58a07355a8e1960888b0d823b93e792747": {
      "address": "0x52fFd7edF83A7c594377482aA4Ed7365C46d4F08",
      "txHash": "0x84b533bdc0ef41287d772023c4d90d5659527d8fa78207f4be029369c52f89ef",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)100391",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)100157",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)100522",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)98125",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:55"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:60"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:63"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)106538_storage",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:71"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)65771",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:73"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:74"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:76"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:77"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerGameCombination",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:80"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:84"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:86"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerPackedGamesCombination",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:88"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "SGPFeePerCombination",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:90"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayLP",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:92"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)98766",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:95"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:96"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayPolicy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:98"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)100391": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)100157": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)100522": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)98125": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)106538_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)65771": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => uint256))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(IMultiCollateralOnOffRamp)98766": {
            "label": "contract IMultiCollateralOnOffRamp"
          }
        }
      }
    },
    "97b4f19b81bec46b86899573dc6df08731fb9fde0876f79b5bc7ace686d5b540": {
      "address": "0xf2ac0F03d7A79E415AB17365749fB9BB88FE718A",
      "txHash": "0xcff1f0b880a0180e935d49acd287bc38527ef7c44c357593b3eee55adc3bb29e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:61"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:62"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:65"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:66"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:67"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)72126_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:70"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)72137_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:71"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)72146_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:72"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:73"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:74"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:75"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:78"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:79"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:80"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:81"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)100623",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:84"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:85"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:86"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:87"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:88"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)72074",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:94"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:95"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:96"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:97"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:98"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:99"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOnADate",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:100"
          },
          {
            "contract": "TherundownConsumer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)101796",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:102"
          },
          {
            "contract": "TherundownConsumer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)72146_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:103"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsObtainer",
            "type": "t_contract(IGamesOddsObtainer)98944",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:104"
          },
          {
            "contract": "TherundownConsumer",
            "label": "maxNumberOfMarketsToResolve",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:105"
          },
          {
            "contract": "TherundownConsumer",
            "label": "playerProps",
            "type": "t_contract(IGamesPlayerProps)99132",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:106"
          },
          {
            "contract": "TherundownConsumer",
            "label": "ignoreChildCancellationPerSportIfDraw",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:107"
          },
          {
            "contract": "TherundownConsumer",
            "label": "maxNumberOfMarketsToCreate",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:108"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)72126_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)72126_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)72137_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)72137_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)72146_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)72146_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)100623": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)72074": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          },
          "t_contract(ITherundownConsumerVerifier)101796": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(IGamesOddsObtainer)98944": {
            "label": "contract IGamesOddsObtainer"
          },
          "t_contract(IGamesPlayerProps)99132": {
            "label": "contract IGamesPlayerProps"
          }
        }
      }
    },
    "507100458433ce23d0811afe8c24ba60a72af4021f9eab71bc2d4c07898cc061": {
      "address": "0x9193ddF8973CD8d1D5b830b929c2dc2964AEfd5e",
      "txHash": "0x9f13fa2d8109c0229ee2d4102c066280117e233f16497ed2ef211a2d8112be7b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:43"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:46"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:48"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:51"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:54"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:58"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:67"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:70"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:73"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:76"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)100559",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:79"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:82"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:85"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)98155",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:87"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:89"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:91"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:93"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:95"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:98"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:100"
          },
          {
            "contract": "SportsAMM",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:103"
          },
          {
            "contract": "SportsAMM",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:105"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:107"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:109"
          },
          {
            "contract": "SportsAMM",
            "label": "sportAmmUtils",
            "type": "t_contract(SportsAMMUtils)93784",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:111"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:113"
          },
          {
            "contract": "SportsAMM",
            "label": "thresholdForOddsUpdate",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:117"
          },
          {
            "contract": "SportsAMM",
            "label": "wrapper",
            "type": "t_contract(ITherundownConsumerWrapper)101373",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:120"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:123"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:126"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSportAndChild",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:128"
          },
          {
            "contract": "SportsAMM",
            "label": "liquidityPool",
            "type": "t_contract(SportAMMLiquidityPool)48875",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:148"
          },
          {
            "contract": "SportsAMM",
            "label": "minSpreadPerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:150"
          },
          {
            "contract": "SportsAMM",
            "label": "isMarketForSportOnePositional",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:152"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOddsPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:154"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSpreadPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:156"
          },
          {
            "contract": "SportsAMM",
            "label": "riskManager",
            "type": "t_contract(ISportAMMRiskManager)99795",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:158"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnParent",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:160"
          },
          {
            "contract": "SportsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)98796",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:163"
          },
          {
            "contract": "SportsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:164"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)100559": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)98155": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(SportsAMMUtils)93784": {
            "label": "contract SportsAMMUtils"
          },
          "t_contract(ITherundownConsumerWrapper)101373": {
            "label": "contract ITherundownConsumerWrapper"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(SportAMMLiquidityPool)48875": {
            "label": "contract SportAMMLiquidityPool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportAMMRiskManager)99795": {
            "label": "contract ISportAMMRiskManager"
          },
          "t_contract(IMultiCollateralOnOffRamp)98796": {
            "label": "contract IMultiCollateralOnOffRamp"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "75086c864b40a3f6a2511438567cf1a2516ff52771a0bc884fa40c6549f651a2": {
      "address": "0x6e598eebF9Aba224c59F0C9Aa2AFe38d51933B51",
      "txHash": "0xcf9e6e3c53de4a17e72685dc4f2dc6e5eb1e463c4cc321bb73b3d4fede2fa93d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)100428",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)100194",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)100559",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)98155",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:55"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:60"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:63"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)106575_storage",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:71"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)65779",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:73"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:74"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:76"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:77"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerGameCombination",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:80"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:84"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:86"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerPackedGamesCombination",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:88"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "SGPFeePerCombination",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:90"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayLP",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:92"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)98796",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:95"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:96"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayPolicy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:98"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)100428": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)100194": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)100559": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)98155": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)106575_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)65779": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => uint256))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(IMultiCollateralOnOffRamp)98796": {
            "label": "contract IMultiCollateralOnOffRamp"
          }
        }
      }
    },
    "45ccbfd0ce8fd2231c282c9346acf6e4c2074c0a284f49a1271ce29eb25b1698": {
      "address": "0xf4D9a551b3a96bFFb764385707fC6d8d5895CF9A",
      "txHash": "0xbba8a47366b76c768f1dd4086fb1dd796f34ae64fe565675aa0470b0fea67d16",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)106565_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:36"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)106565_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:37"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:42"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:44"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:46"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFee",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:47"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:49"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "supportedAsset",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:51"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minimalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:53"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:54"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:56"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:57"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:59"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:60"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "assetToPythId",
            "type": "t_mapping(t_bytes32,t_bytes32)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:62"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "pyth",
            "type": "t_contract(IPyth)12062",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:65"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelay",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:67"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)100549",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:70"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)106565_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:72"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)106565_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:73"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:75"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)98786",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:76"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:77"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)42583,t_uint256))",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:79"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)42583,t_uint256))",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:80"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelayForResolving",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:82"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "marketHasCreatedAtAttribute",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:84"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:86"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "timeThresholdsForFees",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:88"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFees",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:89"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketsAMMUtils",
            "type": "t_contract(SpeedMarketsAMMUtils)45799",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:91"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "marketHasFeeAttribute",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:93"
          }
        ],
        "types": {
          "t_struct(AddressSet)106565_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_contract(IPyth)12062": {
            "label": "contract IPyth"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(IStakingThales)100549": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_struct(AddressSet)106565_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(IMultiCollateralOnOffRamp)98786": {
            "label": "contract IMultiCollateralOnOffRamp"
          },
          "t_mapping(t_bytes32,t_mapping(t_enum(Direction)42583,t_uint256))": {
            "label": "mapping(bytes32 => mapping(enum SpeedMarket.Direction => uint256))"
          },
          "t_mapping(t_enum(Direction)42583,t_uint256)": {
            "label": "mapping(enum SpeedMarket.Direction => uint256)"
          },
          "t_enum(Direction)42583": {
            "label": "enum SpeedMarket.Direction",
            "members": [
              "Up",
              "Down"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(SpeedMarketsAMMUtils)45799": {
            "label": "contract SpeedMarketsAMMUtils"
          }
        }
      }
    },
    "815d4e0060d1a424c4215c2f76ddaf33ecdce69407538f03fb320c58b171089d": {
      "address": "0x305842e1773F204BDdBCdc6d60c4aFA3202856F5",
      "txHash": "0xd00f4504e4c3bbeb5c29aeca429d076a66cbe8ea2b9e1e4efc4d07daf16840f7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)548",
            "src": "contracts/SportMarkets/SportsAMM.sol:43"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:46"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:48"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:51"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:54"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:58"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:67"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:70"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:73"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:76"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)10894",
            "src": "contracts/SportMarkets/SportsAMM.sol:79"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:82"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:85"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)9667",
            "src": "contracts/SportMarkets/SportsAMM.sol:87"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:89"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:91"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:93"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportsAMM.sol:95"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:98"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:100"
          },
          {
            "contract": "SportsAMM",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:103"
          },
          {
            "contract": "SportsAMM",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportsAMM.sol:105"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:107"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:109"
          },
          {
            "contract": "SportsAMM",
            "label": "sportAmmUtils",
            "type": "t_contract(SportsAMMUtils)9640",
            "src": "contracts/SportMarkets/SportsAMM.sol:111"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:113"
          },
          {
            "contract": "SportsAMM",
            "label": "thresholdForOddsUpdate",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportsAMM.sol:117"
          },
          {
            "contract": "SportsAMM",
            "label": "wrapper",
            "type": "t_contract(ITherundownConsumerWrapper)11187",
            "src": "contracts/SportMarkets/SportsAMM.sol:120"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:123"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:126"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSportAndChild",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/SportMarkets/SportsAMM.sol:128"
          },
          {
            "contract": "SportsAMM",
            "label": "liquidityPool",
            "type": "t_contract(SportAMMLiquidityPool)4027",
            "src": "contracts/SportMarkets/SportsAMM.sol:148"
          },
          {
            "contract": "SportsAMM",
            "label": "minSpreadPerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/SportMarkets/SportsAMM.sol:150"
          },
          {
            "contract": "SportsAMM",
            "label": "isMarketForSportOnePositional",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/SportsAMM.sol:152"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOddsPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:154"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSpreadPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:156"
          },
          {
            "contract": "SportsAMM",
            "label": "riskManager",
            "type": "t_contract(ISportAMMRiskManager)10172",
            "src": "contracts/SportMarkets/SportsAMM.sol:158"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnParent",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/SportsAMM.sol:160"
          },
          {
            "contract": "SportsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)9725",
            "src": "contracts/SportMarkets/SportsAMM.sol:163"
          },
          {
            "contract": "SportsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportsAMM.sol:164"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)548": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)10894": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)9667": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(SportsAMMUtils)9640": {
            "label": "contract SportsAMMUtils"
          },
          "t_contract(ITherundownConsumerWrapper)11187": {
            "label": "contract ITherundownConsumerWrapper"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(SportAMMLiquidityPool)4027": {
            "label": "contract SportAMMLiquidityPool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportAMMRiskManager)10172": {
            "label": "contract ISportAMMRiskManager"
          },
          "t_contract(IMultiCollateralOnOffRamp)9725": {
            "label": "contract IMultiCollateralOnOffRamp"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "49bc24af155d5e328ccae322b83adb8964d1ef98dad2a18490a3da6c39ece2f1": {
      "address": "0xa70EfF9115a5FAEB360eA48AC696Fd8DE501819a",
      "txHash": "0xf48dc39ac402c97a3150e5c468c1b22e430ae2f784ba96cffce18ee0368a7ffd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "SportPositionalMarketFactory",
            "label": "positionalMarketManager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketFactory.sol:16"
          },
          {
            "contract": "SportPositionalMarketFactory",
            "label": "positionalMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketFactory.sol:18"
          },
          {
            "contract": "SportPositionalMarketFactory",
            "label": "positionMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketFactory.sol:19"
          },
          {
            "contract": "SportPositionalMarketFactory",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketFactory.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8f99fa5c704bdca0b841c9a041ed654048f133daec58e4f45900709588d4691a": {
      "address": "0xaDB6BA905f74E2EC04a509e10e521aa8F81F1009",
      "txHash": "0x5e569b73c4f2f7bab5d6080d3f3f77aa74b09760df247a19e2aa7d70b8d5f115",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sportsAMM",
            "type": "t_contract(ISportsAMM)104654",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:41"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8368",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:42"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:44"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:46"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:47"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:48"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:50"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:52"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:53"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:55"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:56"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:58"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:60"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:61"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:63"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:64"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:66"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:67"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:68"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:69"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:71"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)104794",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:73"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:75"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:77"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:79"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:81"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "onlyWhitelistedStakersAllowed",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:83"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedStakers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:85"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:87"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "marketAlreadyExercisedInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:89"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundClosingPrepared",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:91"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersProcessedInRound",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:93"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "withdrawalShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:95"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "utilizationRate",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:97"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:99"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:100"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)104654": {
            "label": "contract ISportsAMM"
          },
          "t_contract(IERC20Upgradeable)8368": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)104794": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "533b2e0a2df3def0d7596ab381830522b9d1f6c3983f956dc160a675e3a7b6bd": {
      "address": "0x5a3A8DfFEa94281DBC839842B1027A16b740f948",
      "txHash": "0xfcd609af23beab8cc7b571905d657dd590702ade2156c23df784289f77db7160",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)18950",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)18716",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)1233",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)19027",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)16979",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:55"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:60"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:63"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)19317_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:71"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)11216",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:73"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:74"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:76"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:77"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerGameCombination",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:80"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:84"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:86"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerPackedGamesCombination",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:88"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "SGPFeePerCombination",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:90"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayLP",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:92"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)17512",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:95"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:96"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayPolicy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:98"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)18950": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)18716": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)1233": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)19027": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)16979": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)19317_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)11216": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => uint256))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(IMultiCollateralOnOffRamp)17512": {
            "label": "contract IMultiCollateralOnOffRamp"
          }
        }
      }
    },
    "dee1dcc39ea5f381af60774bb32d48bbf89566ffe6c2ba42dd8a09dc7d7da26a": {
      "address": "0x3286BBFa514FcA1F1117430d1Dae62A99B3E6441",
      "txHash": "0x26fae4917d64047379f7aead9486d7fae53e5d46c2c746347689d68fccff02f7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "expiryDuration",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:34"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "marketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:36"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "customMarketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:37"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:39"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)8588_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:41"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)8588_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:42"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_migratingManager",
            "type": "t_contract(SportPositionalMarketManager)6731",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:44"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sUSD",
            "type": "t_contract(IERC20)157",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:46"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:48"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sportPositionalMarketFactory",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:49"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:50"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:51"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:52"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "cancelTimeout",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:53"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedCancelAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:54"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "oddsObtainer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:55"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "isDoubleChance",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:57"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "isDoubleChanceSupported",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:58"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "doubleChanceMarketsByParent",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:59"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "doesSportSupportDoubleChance",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:60"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "playerProps",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:61"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)8588_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(SportPositionalMarketManager)6731": {
            "label": "contract SportPositionalMarketManager"
          },
          "t_contract(IERC20)157": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          }
        }
      }
    },
    "1ac829f9df1513d16fc60427cf0f22c7e87490f63371e4504ec486d6f8a455ac": {
      "address": "0x6FD14581fFe95212Fc2A70F19aB155902153D128",
      "txHash": "0x64fd8fc62c8f68e5c3701404a90bdc408ca3107b89d1e94bd871a8caf628ff32",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "SportPositionalMarketFactory",
            "label": "positionalMarketManager",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketFactory.sol:16"
          },
          {
            "contract": "SportPositionalMarketFactory",
            "label": "positionalMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketFactory.sol:18"
          },
          {
            "contract": "SportPositionalMarketFactory",
            "label": "positionMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketFactory.sol:19"
          },
          {
            "contract": "SportPositionalMarketFactory",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketFactory.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "aedb5345fa6ca162370bf6a6c111851ca871bf6212d25bca0b01cddca8bfb2cd": {
      "address": "0xb6cda560CE4a494d66b2Ea1cCa87BCD7EF8bb02E",
      "txHash": "0x51a86af6adda9c59d725e30c2771bb3fe0b062786d504798259d53090f7b5f26",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:41"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)110323_storage",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:43"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)110323_storage",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:44"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)110323_storage)",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:46"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)110323_storage)",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:47"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minChainedMarkets",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:49"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxChainedMarkets",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:50"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minTimeFrame",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:52"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxTimeFrame",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:53"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:55"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:56"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxProfitPerIndividualMarket",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:58"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "payoutMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:60"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxRisk",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:62"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "currentRisk",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:63"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "chainedSpeedMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:65"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:67"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)101742",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:70"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(AddressSet)110323_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(AddressSet)110323_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IAddressManager)101742": {
            "label": "contract IAddressManager"
          }
        }
      }
    },
    "bffda22227d618bce3dd8e3ddd90e7fd1e738abfc32148d1ea0f63998fed71ee": {
      "address": "0x3c442B518F2A7CF8b81F3aeD020aA8EF046c35c5",
      "txHash": "0x36a11e7461983985f27194ca149e49aac0d5f33e807995da6958c02c01184917",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)108619_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:38"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)108619_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:39"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:44"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:46"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:48"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFee",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:49"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:51"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "supportedAsset",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:53"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minimalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:55"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:56"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:58"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:59"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:61"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:62"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "assetToPythId",
            "type": "t_mapping(t_bytes32,t_bytes32)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:64"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "pyth",
            "type": "t_contract(IPyth)12062",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:66"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelay",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:68"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)102596",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:70"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)108619_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:72"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)108619_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:73"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:75"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)100741",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:76"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:77"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)44962,t_uint256))",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:79"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)44962,t_uint256))",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:80"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelayForResolving",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:82"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "marketHasCreatedAtAttribute",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:84"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:86"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "timeThresholdsForFees",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:88"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFees",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:89"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketsAMMUtils",
            "type": "t_contract(SpeedMarketsAMMUtils)48935",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:91"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "marketHasFeeAttribute",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:93"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)99985",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:96"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxSkewImpact",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:98"
          }
        ],
        "types": {
          "t_struct(AddressSet)108619_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_contract(IPyth)12062": {
            "label": "contract IPyth"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(IStakingThales)102596": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_struct(AddressSet)108619_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(IMultiCollateralOnOffRamp)100741": {
            "label": "contract IMultiCollateralOnOffRamp"
          },
          "t_mapping(t_bytes32,t_mapping(t_enum(Direction)44962,t_uint256))": {
            "label": "mapping(bytes32 => mapping(enum SpeedMarket.Direction => uint256))"
          },
          "t_mapping(t_enum(Direction)44962,t_uint256)": {
            "label": "mapping(enum SpeedMarket.Direction => uint256)"
          },
          "t_enum(Direction)44962": {
            "label": "enum SpeedMarket.Direction",
            "members": [
              "Up",
              "Down"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(SpeedMarketsAMMUtils)48935": {
            "label": "contract SpeedMarketsAMMUtils"
          },
          "t_contract(IAddressManager)99985": {
            "label": "contract IAddressManager"
          }
        }
      }
    },
    "d7933e009250f0343ad0fc83266faef9ed39dcd050237d2ac4dc62c8560b5f49": {
      "address": "0x30e7dc66a57E1eEe4f101762E498631aa6e539A3",
      "txHash": "0xf48c927d519a4e4d5856531fd6e4938a0b36c03fbe4600415ccd1c0400c855b1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "SpeedMarketsAMMData",
            "label": "speedMarketsAMM",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMMData.sol:19"
          },
          {
            "contract": "SpeedMarketsAMMData",
            "label": "chainedSpeedMarketsAMM",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMMData.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "6a9fa228a037b3425fc23af46f04c48db45551e0bcbdd1622eadb528182e4eef": {
      "address": "0xde4D28bdf33b527c8eEFe01064E6D629F833ce72",
      "txHash": "0xa4c7edba8870914df941fb3dce4b7407fad8ca313919ddf4111bcb0c1c52f5ef",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "AddressManager",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\AddressManager\\AddressManager.sol:15"
          },
          {
            "contract": "AddressManager",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\AddressManager\\AddressManager.sol:17"
          },
          {
            "contract": "AddressManager",
            "label": "stakingThales",
            "type": "t_address",
            "src": "contracts\\AddressManager\\AddressManager.sol:19"
          },
          {
            "contract": "AddressManager",
            "label": "multiCollateralOnOffRamp",
            "type": "t_address",
            "src": "contracts\\AddressManager\\AddressManager.sol:21"
          },
          {
            "contract": "AddressManager",
            "label": "pyth",
            "type": "t_address",
            "src": "contracts\\AddressManager\\AddressManager.sol:23"
          },
          {
            "contract": "AddressManager",
            "label": "speedMarketsAMM",
            "type": "t_address",
            "src": "contracts\\AddressManager\\AddressManager.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b777ecfe9af0eaeb32b4476521c2955a5dad9d5ef4415724f453be0b35c69b82": {
      "address": "0x794668C4e3a5EDd6B6C4e9842DF7f109f7141F2B",
      "txHash": "0x8579787e4f8d8a0c05d79f45237fd71755bb0402ebaf7ea4e1f105732878ac8f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "CCIPReceiverProxy",
            "label": "i_router",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/CCIPReceiverProxy.sol:12"
          },
          {
            "contract": "CrossChainCollector",
            "label": "s_router",
            "type": "t_contract(IRouterClient)64",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:25"
          },
          {
            "contract": "CrossChainCollector",
            "label": "stakingThales",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:26"
          },
          {
            "contract": "CrossChainCollector",
            "label": "masterCollector",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:28"
          },
          {
            "contract": "CrossChainCollector",
            "label": "masterCollectorChain",
            "type": "t_uint64",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:29"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainSelector",
            "type": "t_mapping(t_uint256,t_uint64)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:31"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainSelectorIndex",
            "type": "t_mapping(t_uint64,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:32"
          },
          {
            "contract": "CrossChainCollector",
            "label": "collectorAddress",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:33"
          },
          {
            "contract": "CrossChainCollector",
            "label": "lastPeriodForChain",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:35"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainStakedAmountInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:36"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainEscrowedAmountInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:37"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainBaseRewardsInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:38"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainExtraRewardsInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:39"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainBonusPointsInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:40"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainRevenueInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:41"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainRevenueShareInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:42"
          },
          {
            "contract": "CrossChainCollector",
            "label": "calculatedStakedAmountForPeriod",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:44"
          },
          {
            "contract": "CrossChainCollector",
            "label": "calculatedEscrowedAmountForPeriod",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:45"
          },
          {
            "contract": "CrossChainCollector",
            "label": "calculatedBonusPointsForPeriod",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:46"
          },
          {
            "contract": "CrossChainCollector",
            "label": "calculatedRevenueForPeriod",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:47"
          },
          {
            "contract": "CrossChainCollector",
            "label": "messageIdAlreadyReceived",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:49"
          },
          {
            "contract": "CrossChainCollector",
            "label": "messagesReceivedFromChainSelector",
            "type": "t_mapping(t_uint256,t_uint64)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:50"
          },
          {
            "contract": "CrossChainCollector",
            "label": "messagesReceived",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:51"
          },
          {
            "contract": "CrossChainCollector",
            "label": "numOfMessagesReceived",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:52"
          },
          {
            "contract": "CrossChainCollector",
            "label": "numOfActiveCollectors",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:54"
          },
          {
            "contract": "CrossChainCollector",
            "label": "period",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:55"
          },
          {
            "contract": "CrossChainCollector",
            "label": "baseRewardsPerPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:56"
          },
          {
            "contract": "CrossChainCollector",
            "label": "extraRewardsPerPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:57"
          },
          {
            "contract": "CrossChainCollector",
            "label": "collectedResultsForPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:58"
          },
          {
            "contract": "CrossChainCollector",
            "label": "lastPeriodBeforeTesting",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:59"
          },
          {
            "contract": "CrossChainCollector",
            "label": "readyToBroadcast",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:61"
          },
          {
            "contract": "CrossChainCollector",
            "label": "readOnlyMode",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:62"
          },
          {
            "contract": "CrossChainCollector",
            "label": "gasLimitUsed",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:63"
          }
        ],
        "types": {
          "t_contract(IRouterClient)64": {
            "label": "contract IRouterClient"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint64,t_uint256)": {
            "label": "mapping(uint64 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          }
        }
      }
    },
    "2f76733666856ef4f86499599e2500650462389fd840f6dcff828af4fdb15c0d": {
      "address": "0xe02e12C409c8b71C22E9e7eFD49D95e5811155E0",
      "txHash": "0x4b341a3c1263a05dcd4ef27714d98890b63d79be2e6a3dc6bf0616f16e9c41e6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:61"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:62"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:65"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:66"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:67"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)870_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:70"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)881_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:71"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)890_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:72"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:73"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:74"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:75"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:78"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:79"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:80"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:81"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)4961",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:84"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:85"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:86"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:87"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:88"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)818",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:94"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:95"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:96"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:97"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:98"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:99"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOnADate",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:100"
          },
          {
            "contract": "TherundownConsumer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)5117",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:102"
          },
          {
            "contract": "TherundownConsumer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)890_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:103"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsObtainer",
            "type": "t_contract(IGamesOddsObtainer)4035",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:104"
          },
          {
            "contract": "TherundownConsumer",
            "label": "maxNumberOfMarketsToResolve",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:105"
          },
          {
            "contract": "TherundownConsumer",
            "label": "playerProps",
            "type": "t_contract(IGamesPlayerProps)4223",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:106"
          },
          {
            "contract": "TherundownConsumer",
            "label": "ignoreChildCancellationPerSportIfDraw",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:107"
          },
          {
            "contract": "TherundownConsumer",
            "label": "maxNumberOfMarketsToCreate",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:108"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketForTeamName",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:109"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)870_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)870_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)881_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)881_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)890_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)890_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)4961": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)818": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          },
          "t_contract(ITherundownConsumerVerifier)5117": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(IGamesOddsObtainer)4035": {
            "label": "contract IGamesOddsObtainer"
          },
          "t_contract(IGamesPlayerProps)4223": {
            "label": "contract IGamesPlayerProps"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)"
          }
        }
      }
    },
    "176457665aca3b557d4a7e810c825866989a1a3542150c8d12767f25976b5168": {
      "address": "0x761716Ca41fC05fA3A58dC036A5C3Fdb95b58446",
      "txHash": "0xef82e25099f80fd3fc8d5639a554099437818ef548535327f38e9f581307e640",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)4582",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:27"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "invalidName",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:28"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "supportedMarketType",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:29"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultOddsThreshold",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:30"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "oddsThresholdForSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:31"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultBookmakerIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:33"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "sportIdToBookmakerIds",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:34"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "obtainer",
            "type": "t_contract(IGamesOddsObtainer)3369",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:35"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)4295",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:36"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:37"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "minOddsForCheckingThresholdDefault",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:39"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "minOddsForCheckingThresholdPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:40"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "playerProps",
            "type": "t_contract(IGamesPlayerProps)3557",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:42"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "defaultPlayerPropsBookmakerIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:43"
          },
          {
            "contract": "TherundownConsumerVerifier",
            "label": "sportIdForPlayerPropsToBookmakerIds",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumerVerifier.sol:44"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)4582": {
            "label": "contract ITherundownConsumer"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_contract(IGamesOddsObtainer)3369": {
            "label": "contract IGamesOddsObtainer"
          },
          "t_contract(ISportPositionalMarketManager)4295": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IGamesPlayerProps)3557": {
            "label": "contract IGamesPlayerProps"
          }
        }
      }
    },
    "9aef88c0c6f21d469e097343f0e3ccbb7798bfc74190dd0304da4f2c5e3325ad": {
      "address": "0xC975234E39Cd7A0fc428aa8C5df77920BC07f46c",
      "txHash": "0xbdce491253f1314cd8e8582574752d999721ce0f545e5963f467722bf90e1bbd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)4429",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:32"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)4585",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:33"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)4142",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:34"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)3148_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:37"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)3148_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:38"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:39"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:40"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:41"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "doesSportSupportSpreadAndTotal",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:42"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:45"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:46"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketSpreadChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_int16,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:47"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketTotalChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_uint24,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:48"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:49"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketSread",
            "type": "t_mapping(t_address,t_int16)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:50"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketTotal",
            "type": "t_mapping(t_address,t_uint24)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:51"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveTotalChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:52"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveSpreadChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:53"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "isSpreadChildMarket",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:54"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:55"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "normalizedOddsForMarketFulfilled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:56"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "normalizedOddsForMarket",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:57"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsReceiver",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:58"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "playersReportTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:59"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "waitTimePlayersReport",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:60"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)4429": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)4585": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)4142": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)3148_storage)": {
            "label": "mapping(bytes32 => struct IGamesOddsObtainer.GameOdds)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(GameOdds)3148_storage": {
            "label": "struct IGamesOddsObtainer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadHome",
                "type": "t_int16"
              },
              {
                "label": "spreadHomeOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadAway",
                "type": "t_int16"
              },
              {
                "label": "spreadAwayOdds",
                "type": "t_int24"
              },
              {
                "label": "totalOver",
                "type": "t_uint24"
              },
              {
                "label": "totalOverOdds",
                "type": "t_int24"
              },
              {
                "label": "totalUnder",
                "type": "t_uint24"
              },
              {
                "label": "totalUnderOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_int24": {
            "label": "int24"
          },
          "t_int16": {
            "label": "int16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_int16,t_address))": {
            "label": "mapping(address => mapping(int16 => address))"
          },
          "t_mapping(t_int16,t_address)": {
            "label": "mapping(int16 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint24,t_address))": {
            "label": "mapping(address => mapping(uint24 => address))"
          },
          "t_mapping(t_uint24,t_address)": {
            "label": "mapping(uint24 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_int16)": {
            "label": "mapping(address => int16)"
          },
          "t_mapping(t_address,t_uint24)": {
            "label": "mapping(address => uint24)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "555a180ec4680352b60981c5eea5b1e15461a004c972a4ee629f99f806872a91": {
      "address": "0x52aFDe5Ea3134e103eAFc7754Ee0436c0FF6e763",
      "txHash": "0xbbf34f778d4f291c8cc5471244aa9203bfff2e41b47ffbd57275a7fb3f9d131c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesOddsReceiver",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)1585",
            "src": "contracts/SportMarkets/Rundown/GamesOddsReciever.sol:19"
          },
          {
            "contract": "GamesOddsReceiver",
            "label": "obtainer",
            "type": "t_contract(IGamesOddsObtainer)1298",
            "src": "contracts/SportMarkets/Rundown/GamesOddsReciever.sol:20"
          },
          {
            "contract": "GamesOddsReceiver",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsReciever.sol:22"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)1585": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(IGamesOddsObtainer)1298": {
            "label": "contract IGamesOddsObtainer"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "ca327183c0fcc1d4653a1e161547e7975ff8137a66a38eb60eaa6c77692a0481": {
      "address": "0xc2b53282D74d1193B909F3b17DF175391bdbCFDA",
      "txHash": "0xf86ff1478d8ecc0a2cc52e6a83c0224a86338346ce9742e62c1619c6c527897a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)105323",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:34"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)105479",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:35"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)104299",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:36"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playerPropsReceiver",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:37"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playerProp",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerProps)102598_storage)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:40"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "doesSportSupportPlayerProps",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:41"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:42"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playerIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:43"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "optionIdPerChildMarket",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:44"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:47"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "mainMarketPausedPlayerProps",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:48"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:49"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "mainMarketChildMarketPerPlayerAndOptionIndex",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint256,t_address))))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:50"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "numberOfChildMarketsPerPlayerAndOption",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_uint256)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:52"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "mainMarketPlayerOptionLineChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint16,t_address))))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:53"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:55"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "currentActiveChildMarketPerPlayerAndOption",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_address)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:56"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "normalizedOddsForMarket",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:57"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "normalizedOddsForMarketFulfilled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:58"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:59"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "childMarketLine",
            "type": "t_mapping(t_address,t_uint16)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:60"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "invalidOddsForPlayerProps",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_bool)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:61"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "createFulfilledForPlayerProps",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_bool)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:62"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "resolveFulfilledForPlayerProps",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_bool)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:63"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "pausedByInvalidOddsOnMain",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:64"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "pausedByCircuitBreakerOnMain",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:65"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playerPropsAddedForMain",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:66"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playersInAGame",
            "type": "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:68"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playersInAGameFulfilled",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bool))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:69"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "allOptionsPerPlayer",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_array(t_uint8)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:70"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "resolvedPlayerProps",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerPropsResolver)102609_storage)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:71"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "childMarketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:73"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "currentMainMarketForPlayer",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:74"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)105323": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)105479": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)104299": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerProps)102598_storage)))": {
            "label": "mapping(bytes32 => mapping(bytes32 => mapping(uint8 => struct IGamesPlayerProps.PlayerProps)))"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerProps)102598_storage))": {
            "label": "mapping(bytes32 => mapping(uint8 => struct IGamesPlayerProps.PlayerProps))"
          },
          "t_mapping(t_uint8,t_struct(PlayerProps)102598_storage)": {
            "label": "mapping(uint8 => struct IGamesPlayerProps.PlayerProps)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(PlayerProps)102598_storage": {
            "label": "struct IGamesPlayerProps.PlayerProps",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "playerId",
                "type": "t_bytes32"
              },
              {
                "label": "option",
                "type": "t_uint8"
              },
              {
                "label": "playerName",
                "type": "t_string_storage"
              },
              {
                "label": "line",
                "type": "t_uint16"
              },
              {
                "label": "overOdds",
                "type": "t_int24"
              },
              {
                "label": "underOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint256,t_address))))": {
            "label": "mapping(address => mapping(bytes32 => mapping(uint8 => mapping(uint256 => address))))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint256,t_address)))": {
            "label": "mapping(bytes32 => mapping(uint8 => mapping(uint256 => address)))"
          },
          "t_mapping(t_uint8,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint8 => mapping(uint256 => address))"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_uint256)))": {
            "label": "mapping(address => mapping(bytes32 => mapping(uint8 => uint256)))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint8 => uint256))"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint16,t_address))))": {
            "label": "mapping(address => mapping(bytes32 => mapping(uint8 => mapping(uint16 => address))))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint16,t_address)))": {
            "label": "mapping(bytes32 => mapping(uint8 => mapping(uint16 => address)))"
          },
          "t_mapping(t_uint8,t_mapping(t_uint16,t_address))": {
            "label": "mapping(uint8 => mapping(uint16 => address))"
          },
          "t_mapping(t_uint16,t_address)": {
            "label": "mapping(uint16 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_address)))": {
            "label": "mapping(address => mapping(bytes32 => mapping(uint8 => address)))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_address))": {
            "label": "mapping(bytes32 => mapping(uint8 => address))"
          },
          "t_mapping(t_uint8,t_address)": {
            "label": "mapping(uint8 => address)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint16)": {
            "label": "mapping(address => uint16)"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_bool)))": {
            "label": "mapping(bytes32 => mapping(bytes32 => mapping(uint8 => bool)))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_bool))": {
            "label": "mapping(bytes32 => mapping(uint8 => bool))"
          },
          "t_mapping(t_uint8,t_bool)": {
            "label": "mapping(uint8 => bool)"
          },
          "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(bytes32 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(bytes32 => mapping(bytes32 => bool))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_array(t_uint8)dyn_storage))": {
            "label": "mapping(bytes32 => mapping(bytes32 => uint8[]))"
          },
          "t_mapping(t_bytes32,t_array(t_uint8)dyn_storage)": {
            "label": "mapping(bytes32 => uint8[])"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerPropsResolver)102609_storage)))": {
            "label": "mapping(bytes32 => mapping(bytes32 => mapping(uint8 => struct IGamesPlayerProps.PlayerPropsResolver)))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerPropsResolver)102609_storage))": {
            "label": "mapping(bytes32 => mapping(uint8 => struct IGamesPlayerProps.PlayerPropsResolver))"
          },
          "t_mapping(t_uint8,t_struct(PlayerPropsResolver)102609_storage)": {
            "label": "mapping(uint8 => struct IGamesPlayerProps.PlayerPropsResolver)"
          },
          "t_struct(PlayerPropsResolver)102609_storage": {
            "label": "struct IGamesPlayerProps.PlayerPropsResolver",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "playerId",
                "type": "t_bytes32"
              },
              {
                "label": "option",
                "type": "t_uint8"
              },
              {
                "label": "score",
                "type": "t_uint16"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              }
            ]
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          }
        }
      }
    },
    "11d7e2acfa86798ab59fcc077f4ea992486d56b3d55ada578a7cc1ea88bf554d": {
      "address": "0xA5Cd9824C27cd86E5EA4304Ae224523B60645A04",
      "txHash": "0x0b8719aa53f98592c39fc09ef063aa1017bf181f21e2d50035c6fe5b5e9ed81c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesOddsReceiver",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)1582",
            "src": "contracts/SportMarkets/Rundown/GamesOddsReciever.sol:19"
          },
          {
            "contract": "GamesOddsReceiver",
            "label": "obtainer",
            "type": "t_contract(IGamesOddsObtainer)1295",
            "src": "contracts/SportMarkets/Rundown/GamesOddsReciever.sol:20"
          },
          {
            "contract": "GamesOddsReceiver",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsReciever.sol:22"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)1582": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(IGamesOddsObtainer)1295": {
            "label": "contract IGamesOddsObtainer"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "1647aba1be5afd9d6125d42066c82aaf6a8ba41d1b3bc6cdf3533eb97b99c81f": {
      "address": "0x2dd26ED7F8e0eC78D0fE448f31B0552236be1403",
      "txHash": "0x97f4c68a195a73ede49b5e1e614ffcc0e8b52da25c1e2d269c41949aa591bdf2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)103313",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:34"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)103469",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:35"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)102289",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:36"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playerPropsReceiver",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:37"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playerProp",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerProps)100562_storage)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:40"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "doesSportSupportPlayerProps",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:41"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:42"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playerIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:43"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "optionIdPerChildMarket",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:44"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:47"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "mainMarketPausedPlayerProps",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:48"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:49"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "mainMarketChildMarketPerPlayerAndOptionIndex",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint256,t_address))))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:50"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "numberOfChildMarketsPerPlayerAndOption",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_uint256)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:52"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "mainMarketPlayerOptionLineChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint16,t_address))))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:53"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:55"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "currentActiveChildMarketPerPlayerAndOption",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_address)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:56"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "normalizedOddsForMarket",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:57"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "normalizedOddsForMarketFulfilled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:58"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:59"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "childMarketLine",
            "type": "t_mapping(t_address,t_uint16)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:60"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "invalidOddsForPlayerProps",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_bool)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:61"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "createFulfilledForPlayerProps",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_bool)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:62"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "resolveFulfilledForPlayerProps",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_bool)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:63"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "pausedByInvalidOddsOnMain",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:64"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "pausedByCircuitBreakerOnMain",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:65"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playerPropsAddedForMain",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:66"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playersInAGame",
            "type": "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:68"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playersInAGameFulfilled",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bool))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:69"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "allOptionsPerPlayer",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_array(t_uint8)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:70"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "resolvedPlayerProps",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerPropsResolver)100573_storage)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:71"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "childMarketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:73"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "currentMainMarketForPlayer",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:74"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)103313": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)103469": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)102289": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerProps)100562_storage)))": {
            "label": "mapping(bytes32 => mapping(bytes32 => mapping(uint8 => struct IGamesPlayerProps.PlayerProps)))"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerProps)100562_storage))": {
            "label": "mapping(bytes32 => mapping(uint8 => struct IGamesPlayerProps.PlayerProps))"
          },
          "t_mapping(t_uint8,t_struct(PlayerProps)100562_storage)": {
            "label": "mapping(uint8 => struct IGamesPlayerProps.PlayerProps)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(PlayerProps)100562_storage": {
            "label": "struct IGamesPlayerProps.PlayerProps",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "playerId",
                "type": "t_bytes32"
              },
              {
                "label": "option",
                "type": "t_uint8"
              },
              {
                "label": "playerName",
                "type": "t_string_storage"
              },
              {
                "label": "line",
                "type": "t_uint16"
              },
              {
                "label": "overOdds",
                "type": "t_int24"
              },
              {
                "label": "underOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint256,t_address))))": {
            "label": "mapping(address => mapping(bytes32 => mapping(uint8 => mapping(uint256 => address))))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint256,t_address)))": {
            "label": "mapping(bytes32 => mapping(uint8 => mapping(uint256 => address)))"
          },
          "t_mapping(t_uint8,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint8 => mapping(uint256 => address))"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_uint256)))": {
            "label": "mapping(address => mapping(bytes32 => mapping(uint8 => uint256)))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint8 => uint256))"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint16,t_address))))": {
            "label": "mapping(address => mapping(bytes32 => mapping(uint8 => mapping(uint16 => address))))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint16,t_address)))": {
            "label": "mapping(bytes32 => mapping(uint8 => mapping(uint16 => address)))"
          },
          "t_mapping(t_uint8,t_mapping(t_uint16,t_address))": {
            "label": "mapping(uint8 => mapping(uint16 => address))"
          },
          "t_mapping(t_uint16,t_address)": {
            "label": "mapping(uint16 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_address)))": {
            "label": "mapping(address => mapping(bytes32 => mapping(uint8 => address)))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_address))": {
            "label": "mapping(bytes32 => mapping(uint8 => address))"
          },
          "t_mapping(t_uint8,t_address)": {
            "label": "mapping(uint8 => address)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint16)": {
            "label": "mapping(address => uint16)"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_bool)))": {
            "label": "mapping(bytes32 => mapping(bytes32 => mapping(uint8 => bool)))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_bool))": {
            "label": "mapping(bytes32 => mapping(uint8 => bool))"
          },
          "t_mapping(t_uint8,t_bool)": {
            "label": "mapping(uint8 => bool)"
          },
          "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(bytes32 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(bytes32 => mapping(bytes32 => bool))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_array(t_uint8)dyn_storage))": {
            "label": "mapping(bytes32 => mapping(bytes32 => uint8[]))"
          },
          "t_mapping(t_bytes32,t_array(t_uint8)dyn_storage)": {
            "label": "mapping(bytes32 => uint8[])"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerPropsResolver)100573_storage)))": {
            "label": "mapping(bytes32 => mapping(bytes32 => mapping(uint8 => struct IGamesPlayerProps.PlayerPropsResolver)))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerPropsResolver)100573_storage))": {
            "label": "mapping(bytes32 => mapping(uint8 => struct IGamesPlayerProps.PlayerPropsResolver))"
          },
          "t_mapping(t_uint8,t_struct(PlayerPropsResolver)100573_storage)": {
            "label": "mapping(uint8 => struct IGamesPlayerProps.PlayerPropsResolver)"
          },
          "t_struct(PlayerPropsResolver)100573_storage": {
            "label": "struct IGamesPlayerProps.PlayerPropsResolver",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "playerId",
                "type": "t_bytes32"
              },
              {
                "label": "option",
                "type": "t_uint8"
              },
              {
                "label": "score",
                "type": "t_uint16"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              }
            ]
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          }
        }
      }
    },
    "9a62b5c7cd15379f444d9395e814fbdbb23f72e681de16f856d709ccac2256c1": {
      "address": "0x13A675dFc8B385ea3Dd4c169eEaBcfEA0e880D1c",
      "txHash": "0x3c81091f546cb4d0e26a60b91450645c547d1a32d38ebd8a919f031325582d84",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ParlayMarketData",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)108528_storage",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketData.sol:16"
          },
          {
            "contract": "ParlayMarketData",
            "label": "_parlaysInGamePosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)108528_storage))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketData.sol:32"
          },
          {
            "contract": "ParlayMarketData",
            "label": "gameAddressPositionParlay",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketData.sol:34"
          },
          {
            "contract": "ParlayMarketData",
            "label": "numOfParlaysInGamePosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketData.sol:35"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayDetails",
            "type": "t_mapping(t_address,t_struct(ParlayDetails)58349_storage)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketData.sol:37"
          },
          {
            "contract": "ParlayMarketData",
            "label": "userParlays",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketData.sol:38"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayOwner",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketData.sol:39"
          },
          {
            "contract": "ParlayMarketData",
            "label": "userNumOfParlays",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketData.sol:40"
          },
          {
            "contract": "ParlayMarketData",
            "label": "parlayMarketsAMM",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketData.sol:41"
          }
        ],
        "types": {
          "t_struct(AddressSet)108528_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)108528_storage))": {
            "label": "mapping(address => mapping(uint256 => struct AddressSetLib.AddressSet))"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)108528_storage)": {
            "label": "mapping(uint256 => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))": {
            "label": "mapping(address => mapping(uint256 => mapping(uint256 => address)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint256 => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_struct(ParlayDetails)58349_storage)": {
            "label": "mapping(address => struct ParlayMarketData.ParlayDetails)"
          },
          "t_struct(ParlayDetails)58349_storage": {
            "label": "struct ParlayMarketData.ParlayDetails",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "sUSDPaid",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0c4672c6c6f3d2bd136136084e2057ad78bd7f544a5db0bba746a3596cf72fdb": {
      "address": "0x551524F613c31b62f1517020534EE8Aa61bbaA85",
      "txHash": "0x681a30debfe34e9ea8010b8174186a503f81da6b48908fb6a95d751eb1d49d21",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:43"
          },
          {
            "contract": "SportsAMM",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:46"
          },
          {
            "contract": "SportsAMM",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:48"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spread",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:51"
          },
          {
            "contract": "SportsAMM",
            "label": "max_spread",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:54"
          },
          {
            "contract": "SportsAMM",
            "label": "minimalTimeLeftToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:58"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnGame",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:67"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:70"
          },
          {
            "contract": "SportsAMM",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:73"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:76"
          },
          {
            "contract": "SportsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)102505",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:79"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:82"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:85"
          },
          {
            "contract": "SportsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)99994",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:87"
          },
          {
            "contract": "SportsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:89"
          },
          {
            "contract": "SportsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:91"
          },
          {
            "contract": "SportsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:93"
          },
          {
            "contract": "SportsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:95"
          },
          {
            "contract": "SportsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:98"
          },
          {
            "contract": "SportsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:100"
          },
          {
            "contract": "SportsAMM",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:103"
          },
          {
            "contract": "SportsAMM",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:105"
          },
          {
            "contract": "SportsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:107"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:109"
          },
          {
            "contract": "SportsAMM",
            "label": "sportAmmUtils",
            "type": "t_contract(SportsAMMUtils)95500",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:111"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:113"
          },
          {
            "contract": "SportsAMM",
            "label": "thresholdForOddsUpdate",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:117"
          },
          {
            "contract": "SportsAMM",
            "label": "wrapper",
            "type": "t_contract(ITherundownConsumerWrapper)103326",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:120"
          },
          {
            "contract": "SportsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:123"
          },
          {
            "contract": "SportsAMM",
            "label": "min_spreadPerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:126"
          },
          {
            "contract": "SportsAMM",
            "label": "capPerSportAndChild",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:128"
          },
          {
            "contract": "SportsAMM",
            "label": "liquidityPool",
            "type": "t_contract(SportAMMLiquidityPool)51944",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:148"
          },
          {
            "contract": "SportsAMM",
            "label": "minSpreadPerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:150"
          },
          {
            "contract": "SportsAMM",
            "label": "isMarketForSportOnePositional",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:152"
          },
          {
            "contract": "SportsAMM",
            "label": "minSupportedOddsPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:154"
          },
          {
            "contract": "SportsAMM",
            "label": "maxSpreadPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:156"
          },
          {
            "contract": "SportsAMM",
            "label": "riskManager",
            "type": "t_contract(ISportAMMRiskManager)101711",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:158"
          },
          {
            "contract": "SportsAMM",
            "label": "spentOnParent",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:160"
          },
          {
            "contract": "SportsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)100650",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:163"
          },
          {
            "contract": "SportsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\SportsAMM.sol:164"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IStakingThales)102505": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)99994": {
            "label": "contract ICurveSUSD"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(SportsAMMUtils)95500": {
            "label": "contract SportsAMMUtils"
          },
          "t_contract(ITherundownConsumerWrapper)103326": {
            "label": "contract ITherundownConsumerWrapper"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(SportAMMLiquidityPool)51944": {
            "label": "contract SportAMMLiquidityPool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportAMMRiskManager)101711": {
            "label": "contract ISportAMMRiskManager"
          },
          "t_contract(IMultiCollateralOnOffRamp)100650": {
            "label": "contract IMultiCollateralOnOffRamp"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8d1120a512a0db25772b6da03cb860c6a6b691fd1ae978a6481bff265a26e357": {
      "address": "0x3F5C6f464F356eE47786f727434d2977c3F94c9c",
      "txHash": "0xa15019844a1147c94888e074df7f99855834d6b6f6b02f7bc6a00b499276a5f2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "parlayAMM",
            "type": "t_contract(IParlayMarketsAMM)103236",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:42"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8368",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:43"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:45"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:47"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:48"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:50"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:52"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:54"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:55"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:57"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:58"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:60"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:62"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:63"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:65"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:66"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:68"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:69"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:70"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:71"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:73"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)104794",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:75"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:77"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:79"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:81"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:83"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "onlyWhitelistedStakersAllowed",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:85"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "whitelistedStakers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:87"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:89"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "marketAlreadyExercisedInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:91"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "roundClosingPrepared",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:93"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "usersProcessedInRound",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:95"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "withdrawalShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:97"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "parlayMarketRound",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:99"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "utilizationRate",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:101"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:103"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:104"
          }
        ],
        "types": {
          "t_contract(IParlayMarketsAMM)103236": {
            "label": "contract IParlayMarketsAMM"
          },
          "t_contract(IERC20Upgradeable)8368": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)104794": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "36c312d0fdae8094173483c99c70c6eebd841cf9765afd8336647d46fdafd626": {
      "address": "0x3F9D3eF1FB6A450B5e878Cb9Fd3019dB81f6Bc22",
      "txHash": "0xd2ffd9820a77f7a183cb89a7f6ebba3bdad867af58bea583fb9dff5eae464b4d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:25"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "defaultCapPerGame",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:26"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "capPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:27"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "capPerSportAndChild",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:28"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "capPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:29"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "defaultRiskMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:31"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "riskMultiplierForSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:32"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "riskMultiplierPerMarket",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:33"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "maxCap",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:35"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "maxRiskMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:36"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "isMarketForSportOnePositional",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:38"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "isMarketForPlayerPropsOnePositional",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:39"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "minSpreadPerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:42"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "minSupportedOddsPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:45"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "maxSpreadPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:48"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "dynamicLiquidityCutoffTimePerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:50"
          },
          {
            "contract": "SportAMMRiskManager",
            "label": "dynamicLiquidityCutoffDividerPerSport",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\SportAMMRiskManager.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2c78c9c4c86a8ccb662286d6ad953f58d0a427a8992bf51645083cc042dce08b": {
      "address": "0x5d347BD589b2640CF32e337451C99d8EDA40E4e8",
      "txHash": "0x714a888294f69a1a66865b822ab1590d76a03ce54315366e7a487545776e0c05",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "expiryDuration",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:34"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "marketCreationEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:36"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "customMarketCreationEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:37"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:39"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)18583_storage",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:41"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)18583_storage",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:42"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_migratingManager",
            "type": "t_contract(SportPositionalMarketManager)16340",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:44"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sUSD",
            "type": "t_contract(IERC20)157",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:46"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:48"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sportPositionalMarketFactory",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:49"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:50"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:51"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:52"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "cancelTimeout",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:53"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedCancelAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:54"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "oddsObtainer",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:55"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "isDoubleChance",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:57"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "isDoubleChanceSupported",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:58"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "doubleChanceMarketsByParent",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:59"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "doesSportSupportDoubleChance",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:60"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "playerProps",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\SportPositions\\SportPositionalMarketManager.sol:61"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)18583_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(SportPositionalMarketManager)16340": {
            "label": "contract SportPositionalMarketManager"
          },
          "t_contract(IERC20)157": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          }
        }
      }
    },
    "14847d016d97da1ac9a8fbc2df2731f1cb6120f44d4a58f462b76429a0ab5ea5": {
      "address": "0xa469d7c6F32Ba3d5783c294Dff317c405666b43b",
      "txHash": "0x218a05124392575a92740899986b28fd8b9d2e40eb2a256333babe97fa8ca9dd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)17556",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)17315",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)1233",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)17633",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)15526",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:55"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:60"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:63"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)17930_storage",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:71"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)9738",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:73"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:74"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:76"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:77"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerGameCombination",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:80"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:84"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:86"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerPackedGamesCombination",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:88"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "SGPFeePerCombination",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:90"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayLP",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:92"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)16074",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:95"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:96"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayPolicy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:98"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerMarketAndPosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:100"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaysWithNewFormat",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:102"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)17556": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)17315": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)1233": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)17633": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)15526": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)17930_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)9738": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => uint256))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(IMultiCollateralOnOffRamp)16074": {
            "label": "contract IMultiCollateralOnOffRamp"
          }
        }
      }
    },
    "1ce004b7a3816f51d122f811233eab03e920bab244319d3298ea0af153bcd849": {
      "address": "0x5bcbE95244D542E8232e45E6dC5E66483Bc16998",
      "txHash": "0xbde34d68344c64ef0ba85c55cd38c3ba7d0fbe3b2d83ea02ff4199f07f320928",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)102377",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)102136",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)102508",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)99997",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:55"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:60"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:63"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)108531_storage",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:71"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)66617",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:73"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:74"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:76"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:77"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerGameCombination",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:80"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:84"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:86"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerPackedGamesCombination",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:88"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "SGPFeePerCombination",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:90"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayLP",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:92"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)100653",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:95"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:96"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayPolicy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:98"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerMarketAndPosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:100"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaysWithNewFormat",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:102"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)102377": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)102136": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)102508": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)99997": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)108531_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)66617": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => uint256))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(IMultiCollateralOnOffRamp)100653": {
            "label": "contract IMultiCollateralOnOffRamp"
          }
        }
      }
    },
    "3521e9ebc05fb346d037da311e6ebaee68f68fe72ffa2eda00320ba54ab02b27": {
      "address": "0x1D623F4C4Db359F85bac1E211b791267721e0c4a",
      "txHash": "0x9b2ffb3b64ec4f46c5c6798aadd6965ba08e239f05470c2cb3c832f3374be245",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)102377",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)102136",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8234",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)102508",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)99997",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:55"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:60"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:63"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)108531_storage",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:71"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)66617",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:73"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:74"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:76"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:77"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerGameCombination",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:80"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:84"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:86"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerPackedGamesCombination",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:88"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "SGPFeePerCombination",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:90"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayLP",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:92"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)100653",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:95"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:96"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayPolicy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:98"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerMarketAndPosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:100"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaysWithNewFormat",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayMarketsAMM.sol:102"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)102377": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)102136": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)8234": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)102508": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)99997": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)108531_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)66617": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => uint256))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(IMultiCollateralOnOffRamp)100653": {
            "label": "contract IMultiCollateralOnOffRamp"
          }
        }
      }
    },
    "fb507ceff9996cc965f3acb1f431d8f4bfb0c48882de2fcfcd4d6c29d58e9c48": {
      "address": "0x45BE47DbD54B77e16d9CcfDeF1BCb320425dDa1D",
      "txHash": "0x4f05cea07875331d0a0994f57d55b8d92b7a45d475527b1f251d495a1bb2d395",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8368",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:41"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)113924_storage",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:43"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)113924_storage",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:44"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)113924_storage)",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:46"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)113924_storage)",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:47"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minChainedMarkets",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:49"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxChainedMarkets",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:50"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minTimeFrame",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:52"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxTimeFrame",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:53"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:55"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:56"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxProfitPerIndividualMarket",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:58"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "payoutMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:60"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxRisk",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:62"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "currentRisk",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:63"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "chainedSpeedMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:65"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:67"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)104776",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:70"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "payoutMultipliers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:74"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)8368": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(AddressSet)113924_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(AddressSet)113924_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IAddressManager)104776": {
            "label": "contract IAddressManager"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "d8628c5dcf4d1d43859b9b37a478f36649833532cb906b5332818a457d40ea48": {
      "address": "0x5b0a67Ea3b35D1a6Ee8c59b6c77917B9A43783AB",
      "txHash": "0x589f5ec946278577b33ddb4c76bd97909c39bdd9549c87cfe567382c4d3304d9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "SpeedMarketsAMMData",
            "label": "speedMarketsAMM",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMMData.sol:19"
          },
          {
            "contract": "SpeedMarketsAMMData",
            "label": "chainedSpeedMarketsAMM",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMMData.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e50b3d3d45bc516ba7a29d74c8c165576cd68547354cc7e4d73ff81afd9bfc66": {
      "address": "0x674d702069a7c12389B65a39b5a33829280f0E23",
      "txHash": "0xbdcd0c01ca6826559bbe42ce3f03f2b7529ff07d79bf941afb5b0dcd936e91d4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SafeBoxBuffer",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)101507",
            "src": "contracts\\EscrowAndStaking\\SafeBoxBuffer.sol:17"
          },
          {
            "contract": "SafeBoxBuffer",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8368",
            "src": "contracts\\EscrowAndStaking\\SafeBoxBuffer.sol:18"
          }
        ],
        "types": {
          "t_contract(IAddressManager)101507": {
            "label": "contract IAddressManager"
          },
          "t_contract(IERC20Upgradeable)8368": {
            "label": "contract IERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "2ece03a1e6430e262b796620226a3d97c4f18153a5434d795b4e9ade4045ee51": {
      "address": "0x393960FF3e10e13A2aEc0F4b1E79fA2B5f544B80",
      "txHash": "0xd795312277eee7e8b47a914baca452f968f79ca51deb1a676a68ebfd468a1b44",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "AddressManager",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/AddressManager/AddressManager.sol:15"
          },
          {
            "contract": "AddressManager",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/AddressManager/AddressManager.sol:17"
          },
          {
            "contract": "AddressManager",
            "label": "stakingThales",
            "type": "t_address",
            "src": "contracts/AddressManager/AddressManager.sol:19"
          },
          {
            "contract": "AddressManager",
            "label": "multiCollateralOnOffRamp",
            "type": "t_address",
            "src": "contracts/AddressManager/AddressManager.sol:21"
          },
          {
            "contract": "AddressManager",
            "label": "pyth",
            "type": "t_address",
            "src": "contracts/AddressManager/AddressManager.sol:23"
          },
          {
            "contract": "AddressManager",
            "label": "speedMarketsAMM",
            "type": "t_address",
            "src": "contracts/AddressManager/AddressManager.sol:25"
          },
          {
            "contract": "AddressManager",
            "label": "addressBook",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "src": "contracts/AddressManager/AddressManager.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "36a10e67ba79c975aba2bdb88ab769b1702491024f2103e64e24977b06ee1633": {
      "address": "0xb800CD549EE60aE9C3eAa49981aa0f06Ffd0b114",
      "txHash": "0x68c61a01c50cbe59b973b5ac7252981bef1575b1e6b4151f4396c61aa16c41ca",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "expiryDuration",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:34"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "marketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:36"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "customMarketCreationEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:37"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:39"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)8696_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:41"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)8696_storage",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:42"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "_migratingManager",
            "type": "t_contract(SportPositionalMarketManager)6804",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:44"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sUSD",
            "type": "t_contract(IERC20)157",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:46"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "theRundownConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:48"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "sportPositionalMarketFactory",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:49"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:50"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:51"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "apexConsumer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:52"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "cancelTimeout",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:53"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "whitelistedCancelAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:54"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "oddsObtainer",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:55"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "isDoubleChance",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:57"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "isDoubleChanceSupported",
            "type": "t_bool",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:58"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "doubleChanceMarketsByParent",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:59"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "doesSportSupportDoubleChance",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:60"
          },
          {
            "contract": "SportPositionalMarketManager",
            "label": "playerProps",
            "type": "t_address",
            "src": "contracts/SportMarkets/SportPositions/SportPositionalMarketManager.sol:61"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)8696_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(SportPositionalMarketManager)6804": {
            "label": "contract SportPositionalMarketManager"
          },
          "t_contract(IERC20)157": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          }
        }
      }
    },
    "6278700487ffc3b093e9747f94ce81284cc9ba4b7443c874ac2e3622c4323770": {
      "address": "0xEd31481E4B1ded06ee5ed48C0205fA479Ffeb866",
      "txHash": "0x63a59bb6f1e3191dc988c4e1c5321d013e4ed0902a4c1739aa741be600676752",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "CCIPReceiverProxy",
            "label": "i_router",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/CCIPReceiverProxy.sol:12"
          },
          {
            "contract": "CrossChainCollector",
            "label": "s_router",
            "type": "t_contract(IRouterClient)64",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:26"
          },
          {
            "contract": "CrossChainCollector",
            "label": "stakingThales",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:27"
          },
          {
            "contract": "CrossChainCollector",
            "label": "masterCollector",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:29"
          },
          {
            "contract": "CrossChainCollector",
            "label": "masterCollectorChain",
            "type": "t_uint64",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:31"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainSelector",
            "type": "t_mapping(t_uint256,t_uint64)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:34"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainSelectorIndex",
            "type": "t_mapping(t_uint64,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:36"
          },
          {
            "contract": "CrossChainCollector",
            "label": "collectorAddress",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:38"
          },
          {
            "contract": "CrossChainCollector",
            "label": "lastPeriodForChain",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:40"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainStakedAmountInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:43"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainEscrowedAmountInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:44"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainBaseRewardsInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:45"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainExtraRewardsInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:46"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainBonusPointsInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:47"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainRevenueInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:48"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainRevenueShareInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:49"
          },
          {
            "contract": "CrossChainCollector",
            "label": "calculatedStakedAmountForPeriod",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:51"
          },
          {
            "contract": "CrossChainCollector",
            "label": "calculatedEscrowedAmountForPeriod",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:52"
          },
          {
            "contract": "CrossChainCollector",
            "label": "calculatedBonusPointsForPeriod",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:53"
          },
          {
            "contract": "CrossChainCollector",
            "label": "calculatedRevenueForPeriod",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:54"
          },
          {
            "contract": "CrossChainCollector",
            "label": "messageIdAlreadyReceived",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:56"
          },
          {
            "contract": "CrossChainCollector",
            "label": "messagesReceivedFromChainSelector",
            "type": "t_mapping(t_uint256,t_uint64)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:57"
          },
          {
            "contract": "CrossChainCollector",
            "label": "messagesReceived",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:58"
          },
          {
            "contract": "CrossChainCollector",
            "label": "numOfMessagesReceived",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:59"
          },
          {
            "contract": "CrossChainCollector",
            "label": "numOfActiveCollectors",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:61"
          },
          {
            "contract": "CrossChainCollector",
            "label": "period",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:62"
          },
          {
            "contract": "CrossChainCollector",
            "label": "baseRewardsPerPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:63"
          },
          {
            "contract": "CrossChainCollector",
            "label": "extraRewardsPerPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:64"
          },
          {
            "contract": "CrossChainCollector",
            "label": "collectedResultsForPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:65"
          },
          {
            "contract": "CrossChainCollector",
            "label": "lastPeriodBeforeTesting",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:66"
          },
          {
            "contract": "CrossChainCollector",
            "label": "readyToBroadcast",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:68"
          },
          {
            "contract": "CrossChainCollector",
            "label": "readOnlyMode",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:69"
          },
          {
            "contract": "CrossChainCollector",
            "label": "gasLimitUsed",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:70"
          },
          {
            "contract": "CrossChainCollector",
            "label": "weeklyRewardsDecreaseFactor",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:71"
          },
          {
            "contract": "CrossChainCollector",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)2111",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:73"
          }
        ],
        "types": {
          "t_contract(IRouterClient)64": {
            "label": "contract IRouterClient"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint64,t_uint256)": {
            "label": "mapping(uint64 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_contract(IAddressManager)2111": {
            "label": "contract IAddressManager"
          }
        }
      }
    },
    "bb58c686649da9c5e9aaf630046f9385b2e7b35e742224245f6679c2cfdb65d8": {
      "address": "0x0cE3FE9DaE09Ef908Ca22b7C9a9C831dc4b05414",
      "txHash": "0x79fc4ebef89d08dbec09dc01fd0baf17817197df5b900afc0d65862d80e9ab0d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)113924_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:38"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)113924_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:39"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8368",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:44"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:46"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:48"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFee",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:49"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:51"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "supportedAsset",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:53"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minimalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:55"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:56"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:58"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:59"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:61"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:62"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "assetToPythId",
            "type": "t_mapping(t_bytes32,t_bytes32)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:64"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "pyth",
            "type": "t_contract(IPyth)12196",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:66"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelay",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:68"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)107624",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:70"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)113924_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:72"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)113924_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:73"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:75"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)105558",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:76"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:77"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)46852,t_uint256))",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:79"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)46852,t_uint256))",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:80"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelayForResolving",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:82"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "marketHasCreatedAtAttribute",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:84"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:86"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "timeThresholdsForFees",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:88"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFees",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:89"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketsAMMUtils",
            "type": "t_contract(SpeedMarketsAMMUtils)53427",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:91"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "marketHasFeeAttribute",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:93"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)104776",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:96"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxSkewImpact",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:98"
          }
        ],
        "types": {
          "t_struct(AddressSet)113924_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)8368": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_contract(IPyth)12196": {
            "label": "contract IPyth"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(IStakingThales)107624": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_struct(AddressSet)113924_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(IMultiCollateralOnOffRamp)105558": {
            "label": "contract IMultiCollateralOnOffRamp"
          },
          "t_mapping(t_bytes32,t_mapping(t_enum(Direction)46852,t_uint256))": {
            "label": "mapping(bytes32 => mapping(enum SpeedMarket.Direction => uint256))"
          },
          "t_mapping(t_enum(Direction)46852,t_uint256)": {
            "label": "mapping(enum SpeedMarket.Direction => uint256)"
          },
          "t_enum(Direction)46852": {
            "label": "enum SpeedMarket.Direction",
            "members": [
              "Up",
              "Down"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(SpeedMarketsAMMUtils)53427": {
            "label": "contract SpeedMarketsAMMUtils"
          },
          "t_contract(IAddressManager)104776": {
            "label": "contract IAddressManager"
          }
        }
      }
    },
    "71ca7a597159640117d0cb23f5a58375c3091cd7d10069af74719b06501296ff": {
      "address": "0xE9Ec756Eb37452F3e00D0409ce96C53E97f1c286",
      "txHash": "0x3081ed181628f41944aae9a9972308bf22fb4ec9050f9fbe74bb74a4faa985ce",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "CCIPReceiverProxy",
            "label": "i_router",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/CCIPReceiverProxy.sol:12"
          },
          {
            "contract": "CrossChainCollector",
            "label": "s_router",
            "type": "t_contract(IRouterClient)64",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:26"
          },
          {
            "contract": "CrossChainCollector",
            "label": "stakingThales",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:27"
          },
          {
            "contract": "CrossChainCollector",
            "label": "masterCollector",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:29"
          },
          {
            "contract": "CrossChainCollector",
            "label": "masterCollectorChain",
            "type": "t_uint64",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:31"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainSelector",
            "type": "t_mapping(t_uint256,t_uint64)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:34"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainSelectorIndex",
            "type": "t_mapping(t_uint64,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:36"
          },
          {
            "contract": "CrossChainCollector",
            "label": "collectorAddress",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:38"
          },
          {
            "contract": "CrossChainCollector",
            "label": "lastPeriodForChain",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:40"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainStakedAmountInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:43"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainEscrowedAmountInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:44"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainBaseRewardsInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:45"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainExtraRewardsInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:46"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainBonusPointsInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:47"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainRevenueInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:48"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainRevenueShareInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:49"
          },
          {
            "contract": "CrossChainCollector",
            "label": "calculatedStakedAmountForPeriod",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:51"
          },
          {
            "contract": "CrossChainCollector",
            "label": "calculatedEscrowedAmountForPeriod",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:52"
          },
          {
            "contract": "CrossChainCollector",
            "label": "calculatedBonusPointsForPeriod",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:53"
          },
          {
            "contract": "CrossChainCollector",
            "label": "calculatedRevenueForPeriod",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:54"
          },
          {
            "contract": "CrossChainCollector",
            "label": "messageIdAlreadyReceived",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:56"
          },
          {
            "contract": "CrossChainCollector",
            "label": "messagesReceivedFromChainSelector",
            "type": "t_mapping(t_uint256,t_uint64)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:57"
          },
          {
            "contract": "CrossChainCollector",
            "label": "messagesReceived",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:58"
          },
          {
            "contract": "CrossChainCollector",
            "label": "numOfMessagesReceived",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:59"
          },
          {
            "contract": "CrossChainCollector",
            "label": "numOfActiveCollectors",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:61"
          },
          {
            "contract": "CrossChainCollector",
            "label": "period",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:62"
          },
          {
            "contract": "CrossChainCollector",
            "label": "baseRewardsPerPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:63"
          },
          {
            "contract": "CrossChainCollector",
            "label": "extraRewardsPerPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:64"
          },
          {
            "contract": "CrossChainCollector",
            "label": "collectedResultsForPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:65"
          },
          {
            "contract": "CrossChainCollector",
            "label": "lastPeriodBeforeTesting",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:66"
          },
          {
            "contract": "CrossChainCollector",
            "label": "readyToBroadcast",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:68"
          },
          {
            "contract": "CrossChainCollector",
            "label": "readOnlyMode",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:69"
          },
          {
            "contract": "CrossChainCollector",
            "label": "gasLimitUsed",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:70"
          },
          {
            "contract": "CrossChainCollector",
            "label": "weeklyRewardsDecreaseFactor",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:71"
          },
          {
            "contract": "CrossChainCollector",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)2148",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:73"
          },
          {
            "contract": "CrossChainCollector",
            "label": "localChainSelector",
            "type": "t_uint64",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:78"
          }
        ],
        "types": {
          "t_contract(IRouterClient)64": {
            "label": "contract IRouterClient"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint64,t_uint256)": {
            "label": "mapping(uint64 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_contract(IAddressManager)2148": {
            "label": "contract IAddressManager"
          }
        }
      }
    },
    "d501431a5380501da06c25d8efb1f026eea89e4a4a06923ee009b4a2fd417ef8": {
      "address": "0xCd39Ca01844b07c47f19d7Aca120F9681e9dd33A",
      "txHash": "0x51b06909aa66e41ada76bf74140d5bd5a1d2694a74cb3ea19a2ee8541678b2a1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "CCIPReceiverProxy",
            "label": "i_router",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/CCIPReceiverProxy.sol:12"
          },
          {
            "contract": "CrossChainCollector",
            "label": "s_router",
            "type": "t_contract(IRouterClient)293",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:26"
          },
          {
            "contract": "CrossChainCollector",
            "label": "stakingThales",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:27"
          },
          {
            "contract": "CrossChainCollector",
            "label": "masterCollector",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:29"
          },
          {
            "contract": "CrossChainCollector",
            "label": "masterCollectorChain",
            "type": "t_uint64",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:31"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainSelector",
            "type": "t_mapping(t_uint256,t_uint64)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:34"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainSelectorIndex",
            "type": "t_mapping(t_uint64,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:36"
          },
          {
            "contract": "CrossChainCollector",
            "label": "collectorAddress",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:38"
          },
          {
            "contract": "CrossChainCollector",
            "label": "lastPeriodForChain",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:40"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainStakedAmountInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:43"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainEscrowedAmountInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:44"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainBaseRewardsInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:45"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainExtraRewardsInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:46"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainBonusPointsInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:47"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainRevenueInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:48"
          },
          {
            "contract": "CrossChainCollector",
            "label": "chainRevenueShareInPeriod",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:49"
          },
          {
            "contract": "CrossChainCollector",
            "label": "calculatedStakedAmountForPeriod",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:51"
          },
          {
            "contract": "CrossChainCollector",
            "label": "calculatedEscrowedAmountForPeriod",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:52"
          },
          {
            "contract": "CrossChainCollector",
            "label": "calculatedBonusPointsForPeriod",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:53"
          },
          {
            "contract": "CrossChainCollector",
            "label": "calculatedRevenueForPeriod",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:54"
          },
          {
            "contract": "CrossChainCollector",
            "label": "messageIdAlreadyReceived",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:56"
          },
          {
            "contract": "CrossChainCollector",
            "label": "messagesReceivedFromChainSelector",
            "type": "t_mapping(t_uint256,t_uint64)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:57"
          },
          {
            "contract": "CrossChainCollector",
            "label": "messagesReceived",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:58"
          },
          {
            "contract": "CrossChainCollector",
            "label": "numOfMessagesReceived",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:59"
          },
          {
            "contract": "CrossChainCollector",
            "label": "numOfActiveCollectors",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:61"
          },
          {
            "contract": "CrossChainCollector",
            "label": "period",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:62"
          },
          {
            "contract": "CrossChainCollector",
            "label": "baseRewardsPerPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:63"
          },
          {
            "contract": "CrossChainCollector",
            "label": "extraRewardsPerPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:64"
          },
          {
            "contract": "CrossChainCollector",
            "label": "collectedResultsForPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:65"
          },
          {
            "contract": "CrossChainCollector",
            "label": "lastPeriodBeforeTesting",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:66"
          },
          {
            "contract": "CrossChainCollector",
            "label": "readyToBroadcast",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:68"
          },
          {
            "contract": "CrossChainCollector",
            "label": "readOnlyMode",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:69"
          },
          {
            "contract": "CrossChainCollector",
            "label": "gasLimitUsed",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:70"
          },
          {
            "contract": "CrossChainCollector",
            "label": "weeklyRewardsDecreaseFactor",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:71"
          },
          {
            "contract": "CrossChainCollector",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)102142",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:73"
          },
          {
            "contract": "CrossChainCollector",
            "label": "localChainSelector",
            "type": "t_uint64",
            "src": "contracts/EscrowAndStaking/CrossChainCollector.sol:78"
          }
        ],
        "types": {
          "t_contract(IRouterClient)293": {
            "label": "contract IRouterClient"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint64,t_uint256)": {
            "label": "mapping(uint64 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_contract(IAddressManager)102142": {
            "label": "contract IAddressManager"
          }
        }
      }
    },
    "df59e2fceed6306331727303d451de125c2afd937e43d1b937278d86684b99aa": {
      "address": "0x8ebBF37C80aFE0Fcfa569DeAc810bDe641225E4f",
      "txHash": "0x24b9611d43cceafc27e587c7a5afa0801fc7adfd17bfe539469033465be393f4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyPausable.sol:12"
          },
          {
            "contract": "StakingData",
            "label": "stakingThales",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingData.sol:50"
          },
          {
            "contract": "StakingData",
            "label": "escrowThales",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingData.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b83226511c09d4bdcdd52c6dc8ded4a58f5f54bf642809075aceef4f24b0b5a9": {
      "address": "0xdD462615884E70C80037cCf8Aa0f82cb06056D81",
      "txHash": "0x6585cea3c3c48760d642a4bd655b190083e604fc1719e34a6348ea903d638893",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyPausable.sol:12"
          },
          {
            "contract": "StakingThales",
            "label": "iEscrowThales",
            "type": "t_contract(IEscrowThales)2560",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:37"
          },
          {
            "contract": "StakingThales",
            "label": "stakingToken",
            "type": "t_contract(IERC20)3775",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:38"
          },
          {
            "contract": "StakingThales",
            "label": "feeToken",
            "type": "t_contract(IERC20)3775",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:39"
          },
          {
            "contract": "StakingThales",
            "label": "SNXRewards",
            "type": "t_contract(ISNXRewards)2968",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:40"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRoyale",
            "type": "t_contract(IThalesRoyale)3310",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:41"
          },
          {
            "contract": "StakingThales",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)2930",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:42"
          },
          {
            "contract": "StakingThales",
            "label": "periodsOfStaking",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:44"
          },
          {
            "contract": "StakingThales",
            "label": "lastPeriodTimeStamp",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:45"
          },
          {
            "contract": "StakingThales",
            "label": "durationPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:46"
          },
          {
            "contract": "StakingThales",
            "label": "unstakeDurationPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:47"
          },
          {
            "contract": "StakingThales",
            "label": "startTimeStamp",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:48"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodRewards",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:49"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodFees",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:50"
          },
          {
            "contract": "StakingThales",
            "label": "distributeFeesEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:51"
          },
          {
            "contract": "StakingThales",
            "label": "fixedPeriodReward",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:52"
          },
          {
            "contract": "StakingThales",
            "label": "periodExtraReward",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:53"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXRewardsInPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:54"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXFeesInPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:55"
          },
          {
            "contract": "StakingThales",
            "label": "claimEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:56"
          },
          {
            "contract": "StakingThales",
            "label": "stakerLifetimeRewardsClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:58"
          },
          {
            "contract": "StakingThales",
            "label": "stakerFeesClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:59"
          },
          {
            "contract": "StakingThales",
            "label": "_totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:61"
          },
          {
            "contract": "StakingThales",
            "label": "_totalEscrowedAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:62"
          },
          {
            "contract": "StakingThales",
            "label": "_totalPendingStakeAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:63"
          },
          {
            "contract": "StakingThales",
            "label": "_totalUnclaimedRewards",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:64"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardsClaimed",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:65"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardFeesClaimed",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:66"
          },
          {
            "contract": "StakingThales",
            "label": "lastUnstakeTime",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:68"
          },
          {
            "contract": "StakingThales",
            "label": "unstaking",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:69"
          },
          {
            "contract": "StakingThales",
            "label": "unstakingAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:70"
          },
          {
            "contract": "StakingThales",
            "label": "_stakedBalances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:71"
          },
          {
            "contract": "StakingThales",
            "label": "_lastRewardsClaimedPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:72"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:73"
          },
          {
            "contract": "StakingThales",
            "label": "lastAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:82"
          },
          {
            "contract": "StakingThales",
            "label": "stakerAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)197_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:83"
          },
          {
            "contract": "StakingThales",
            "label": "extraRewardsActive",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:85"
          },
          {
            "contract": "StakingThales",
            "label": "ThalesStakingRewardsPool",
            "type": "t_contract(IThalesStakingRewardsPool)3320",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:86"
          },
          {
            "contract": "StakingThales",
            "label": "maxSNXRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:88"
          },
          {
            "contract": "StakingThales",
            "label": "maxAMMVolumeRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:89"
          },
          {
            "contract": "StakingThales",
            "label": "AMMVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:90"
          },
          {
            "contract": "StakingThales",
            "label": "maxThalesRoyaleRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:91"
          },
          {
            "contract": "StakingThales",
            "label": "SNXVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:96"
          },
          {
            "contract": "StakingThales",
            "label": "_lastStakingPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:98"
          },
          {
            "contract": "StakingThales",
            "label": "totalStakedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:100"
          },
          {
            "contract": "StakingThales",
            "label": "totalEscrowedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:101"
          },
          {
            "contract": "StakingThales",
            "label": "exoticBonds",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:102"
          },
          {
            "contract": "StakingThales",
            "label": "addressResolver",
            "type": "t_contract(IAddressResolver)2443",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:104"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:106"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:107"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:109"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)197_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:110"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesRangedAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:111"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)197_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:112"
          },
          {
            "contract": "StakingThales",
            "label": "lastExoticMarketsUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:113"
          },
          {
            "contract": "StakingThales",
            "label": "exoticMarketsVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)197_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:114"
          },
          {
            "contract": "StakingThales",
            "label": "lastSportsAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:115"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)197_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:116"
          },
          {
            "contract": "StakingThales",
            "label": "canClaimOnBehalf",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:118"
          },
          {
            "contract": "StakingThales",
            "label": "mergeAccountEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:120"
          },
          {
            "contract": "StakingThales",
            "label": "delegatedVolume",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:122"
          },
          {
            "contract": "StakingThales",
            "label": "supportedSportVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:123"
          },
          {
            "contract": "StakingThales",
            "label": "supportedAMMVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:124"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMLiquidityPool",
            "type": "t_contract(ISportsAMMLiquidityPool)2978",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:126"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMMLiquidityPool",
            "type": "t_contract(IThalesAMMLiquidityPool)3241",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:127"
          },
          {
            "contract": "StakingThales",
            "label": "stakingThalesBonusRewardsManager",
            "type": "t_contract(IStakingThalesBonusRewardsManager)3099",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:129"
          },
          {
            "contract": "StakingThales",
            "label": "parlayAMMLiquidityPool",
            "type": "t_contract(IParlayAMMLiquidityPool)2598",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:130"
          },
          {
            "contract": "StakingThales",
            "label": "readOnlyMode",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:132"
          },
          {
            "contract": "StakingThales",
            "label": "closingPeriodInProgress",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:133"
          },
          {
            "contract": "StakingThales",
            "label": "closingPeriodPauseTime",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:134"
          },
          {
            "contract": "StakingThales",
            "label": "sendCCIPMessage",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:136"
          }
        ],
        "types": {
          "t_contract(IEscrowThales)2560": {
            "label": "contract IEscrowThales"
          },
          "t_contract(IERC20)3775": {
            "label": "contract IERC20"
          },
          "t_contract(ISNXRewards)2968": {
            "label": "contract ISNXRewards"
          },
          "t_contract(IThalesRoyale)3310": {
            "label": "contract IThalesRoyale"
          },
          "t_contract(IPriceFeed)2930": {
            "label": "contract IPriceFeed"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)197_storage)4_storage)": {
            "label": "mapping(address => struct StakingThales.AMMVolumeEntry[4])"
          },
          "t_array(t_struct(AMMVolumeEntry)197_storage)4_storage": {
            "label": "struct StakingThales.AMMVolumeEntry[4]"
          },
          "t_struct(AMMVolumeEntry)197_storage": {
            "label": "struct StakingThales.AMMVolumeEntry",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "period",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IThalesStakingRewardsPool)3320": {
            "label": "contract IThalesStakingRewardsPool"
          },
          "t_contract(IAddressResolver)2443": {
            "label": "contract IAddressResolver"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_contract(ISportsAMMLiquidityPool)2978": {
            "label": "contract ISportsAMMLiquidityPool"
          },
          "t_contract(IThalesAMMLiquidityPool)3241": {
            "label": "contract IThalesAMMLiquidityPool"
          },
          "t_contract(IStakingThalesBonusRewardsManager)3099": {
            "label": "contract IStakingThalesBonusRewardsManager"
          },
          "t_contract(IParlayAMMLiquidityPool)2598": {
            "label": "contract IParlayAMMLiquidityPool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6464f6656ff26209fad22a54cc7e380bac93f93a5b120e5a08d28e4dee3d96dc": {
      "address": "0x0Adf65a2Ae54b479e66AFA7490A125867183f1e0",
      "txHash": "0x30166ed3f67592b67af70c45dae3aa6da87cb844ac3b8d4136a157f1178cbed2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)4385",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:34"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)4541",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:35"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)4098",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:36"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playerPropsReceiver",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:37"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playerProp",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerProps)3189_storage)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:40"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "doesSportSupportPlayerProps",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:41"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:42"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playerIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:43"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "optionIdPerChildMarket",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:44"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:47"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "mainMarketPausedPlayerProps",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:48"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:49"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "mainMarketChildMarketPerPlayerAndOptionIndex",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint256,t_address))))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:50"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "numberOfChildMarketsPerPlayerAndOption",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_uint256)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:52"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "mainMarketPlayerOptionLineChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint16,t_address))))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:53"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:55"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "currentActiveChildMarketPerPlayerAndOption",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_address)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:56"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "normalizedOddsForMarket",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:57"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "normalizedOddsForMarketFulfilled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:58"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:59"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "childMarketLine",
            "type": "t_mapping(t_address,t_uint16)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:60"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "invalidOddsForPlayerProps",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_bool)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:61"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "createFulfilledForPlayerProps",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_bool)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:62"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "resolveFulfilledForPlayerProps",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_bool)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:63"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "pausedByInvalidOddsOnMain",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:64"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "pausedByCircuitBreakerOnMain",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:65"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playerPropsAddedForMain",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:66"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playersInAGame",
            "type": "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:68"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "playersInAGameFulfilled",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bool))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:69"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "allOptionsPerPlayer",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_array(t_uint8)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:70"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "resolvedPlayerProps",
            "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerPropsResolver)3200_storage)))",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:71"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "childMarketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:73"
          },
          {
            "contract": "GamesPlayerProps",
            "label": "currentMainMarketForPlayer",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesPlayerProps.sol:74"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)4385": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)4541": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)4098": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerProps)3189_storage)))": {
            "label": "mapping(bytes32 => mapping(bytes32 => mapping(uint8 => struct IGamesPlayerProps.PlayerProps)))"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerProps)3189_storage))": {
            "label": "mapping(bytes32 => mapping(uint8 => struct IGamesPlayerProps.PlayerProps))"
          },
          "t_mapping(t_uint8,t_struct(PlayerProps)3189_storage)": {
            "label": "mapping(uint8 => struct IGamesPlayerProps.PlayerProps)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(PlayerProps)3189_storage": {
            "label": "struct IGamesPlayerProps.PlayerProps",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "playerId",
                "type": "t_bytes32"
              },
              {
                "label": "option",
                "type": "t_uint8"
              },
              {
                "label": "playerName",
                "type": "t_string_storage"
              },
              {
                "label": "line",
                "type": "t_uint16"
              },
              {
                "label": "overOdds",
                "type": "t_int24"
              },
              {
                "label": "underOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint256,t_address))))": {
            "label": "mapping(address => mapping(bytes32 => mapping(uint8 => mapping(uint256 => address))))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint256,t_address)))": {
            "label": "mapping(bytes32 => mapping(uint8 => mapping(uint256 => address)))"
          },
          "t_mapping(t_uint8,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint8 => mapping(uint256 => address))"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_uint256)))": {
            "label": "mapping(address => mapping(bytes32 => mapping(uint8 => uint256)))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_uint256))": {
            "label": "mapping(bytes32 => mapping(uint8 => uint256))"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint16,t_address))))": {
            "label": "mapping(address => mapping(bytes32 => mapping(uint8 => mapping(uint16 => address))))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_mapping(t_uint16,t_address)))": {
            "label": "mapping(bytes32 => mapping(uint8 => mapping(uint16 => address)))"
          },
          "t_mapping(t_uint8,t_mapping(t_uint16,t_address))": {
            "label": "mapping(uint8 => mapping(uint16 => address))"
          },
          "t_mapping(t_uint16,t_address)": {
            "label": "mapping(uint16 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_uint8,t_address)))": {
            "label": "mapping(address => mapping(bytes32 => mapping(uint8 => address)))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_address))": {
            "label": "mapping(bytes32 => mapping(uint8 => address))"
          },
          "t_mapping(t_uint8,t_address)": {
            "label": "mapping(uint8 => address)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint16)": {
            "label": "mapping(address => uint16)"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_bool)))": {
            "label": "mapping(bytes32 => mapping(bytes32 => mapping(uint8 => bool)))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_bool))": {
            "label": "mapping(bytes32 => mapping(uint8 => bool))"
          },
          "t_mapping(t_uint8,t_bool)": {
            "label": "mapping(uint8 => bool)"
          },
          "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(bytes32 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(bytes32 => mapping(bytes32 => bool))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_array(t_uint8)dyn_storage))": {
            "label": "mapping(bytes32 => mapping(bytes32 => uint8[]))"
          },
          "t_mapping(t_bytes32,t_array(t_uint8)dyn_storage)": {
            "label": "mapping(bytes32 => uint8[])"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerPropsResolver)3200_storage)))": {
            "label": "mapping(bytes32 => mapping(bytes32 => mapping(uint8 => struct IGamesPlayerProps.PlayerPropsResolver)))"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint8,t_struct(PlayerPropsResolver)3200_storage))": {
            "label": "mapping(bytes32 => mapping(uint8 => struct IGamesPlayerProps.PlayerPropsResolver))"
          },
          "t_mapping(t_uint8,t_struct(PlayerPropsResolver)3200_storage)": {
            "label": "mapping(uint8 => struct IGamesPlayerProps.PlayerPropsResolver)"
          },
          "t_struct(PlayerPropsResolver)3200_storage": {
            "label": "struct IGamesPlayerProps.PlayerPropsResolver",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "playerId",
                "type": "t_bytes32"
              },
              {
                "label": "option",
                "type": "t_uint8"
              },
              {
                "label": "score",
                "type": "t_uint16"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              }
            ]
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          }
        }
      }
    },
    "8bb4581239418e08e3531ebdeff92f02c1b3dce168c8efe25a1b51d8344f8437": {
      "address": "0x3a70ca99b493757FDA907C328AAE5A6b339d4Ed6",
      "txHash": "0xb31e8fcb0a277ac73a333210d1c7594003a17c2337752769a6b96541fbc4c4f5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "TherundownConsumer",
            "label": "wrapperAddress",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:61"
          },
          {
            "contract": "TherundownConsumer",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:62"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesCreated",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:65"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesResolved",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:66"
          },
          {
            "contract": "TherundownConsumer",
            "label": "requestIdGamesOdds",
            "type": "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:67"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameCreated",
            "type": "t_mapping(t_bytes32,t_struct(GameCreate)870_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:70"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameResolved",
            "type": "t_mapping(t_bytes32,t_struct(GameResolve)881_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:71"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)890_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:72"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsIdPerGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:73"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledCreated",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:74"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameFulfilledResolved",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:75"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportedSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:78"
          },
          {
            "contract": "TherundownConsumer",
            "label": "twoPositionSport",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:79"
          },
          {
            "contract": "TherundownConsumer",
            "label": "supportResolveGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:80"
          },
          {
            "contract": "TherundownConsumer",
            "label": "cancelGameStatuses",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:81"
          },
          {
            "contract": "TherundownConsumer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)4968",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:84"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketPerGameId",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:85"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameIdPerMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:86"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketResolved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:87"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCanceled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:88"
          },
          {
            "contract": "TherundownConsumer",
            "label": "queues",
            "type": "t_contract(GamesQueue)818",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:91"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:92"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDate",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:93"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isSportOnADate",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:94"
          },
          {
            "contract": "TherundownConsumer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:95"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:96"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gamesPerDatePerSport",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:97"
          },
          {
            "contract": "TherundownConsumer",
            "label": "isPausedByCanceledStatus",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:98"
          },
          {
            "contract": "TherundownConsumer",
            "label": "canMarketBeUpdated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:99"
          },
          {
            "contract": "TherundownConsumer",
            "label": "gameOnADate",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:100"
          },
          {
            "contract": "TherundownConsumer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)5124",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:102"
          },
          {
            "contract": "TherundownConsumer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)890_storage)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:103"
          },
          {
            "contract": "TherundownConsumer",
            "label": "oddsObtainer",
            "type": "t_contract(IGamesOddsObtainer)4042",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:104"
          },
          {
            "contract": "TherundownConsumer",
            "label": "maxNumberOfMarketsToResolve",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:105"
          },
          {
            "contract": "TherundownConsumer",
            "label": "playerProps",
            "type": "t_contract(IGamesPlayerProps)4230",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:106"
          },
          {
            "contract": "TherundownConsumer",
            "label": "ignoreChildCancellationPerSportIfDraw",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:107"
          },
          {
            "contract": "TherundownConsumer",
            "label": "maxNumberOfMarketsToCreate",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:108"
          },
          {
            "contract": "TherundownConsumer",
            "label": "marketForTeamName",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "src": "contracts/SportMarkets/Rundown/TherundownConsumer.sol:109"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(bytes32 => bytes[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(GameCreate)870_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameCreate)"
          },
          "t_struct(GameCreate)870_storage": {
            "label": "struct TherundownConsumer.GameCreate",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "homeTeam",
                "type": "t_string_storage"
              },
              {
                "label": "awayTeam",
                "type": "t_string_storage"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int24": {
            "label": "int24"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(GameResolve)881_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameResolve)"
          },
          "t_struct(GameResolve)881_storage": {
            "label": "struct TherundownConsumer.GameResolve",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeScore",
                "type": "t_uint8"
              },
              {
                "label": "awayScore",
                "type": "t_uint8"
              },
              {
                "label": "statusId",
                "type": "t_uint8"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)890_storage)": {
            "label": "mapping(bytes32 => struct TherundownConsumer.GameOdds)"
          },
          "t_struct(GameOdds)890_storage": {
            "label": "struct TherundownConsumer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ISportPositionalMarketManager)4968": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_contract(GamesQueue)818": {
            "label": "contract GamesQueue"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => bytes32[]))"
          },
          "t_contract(ITherundownConsumerVerifier)5124": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(IGamesOddsObtainer)4042": {
            "label": "contract IGamesOddsObtainer"
          },
          "t_contract(IGamesPlayerProps)4230": {
            "label": "contract IGamesPlayerProps"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)"
          }
        }
      }
    },
    "fad4f898f1bfb91748aa2bfaaf9cd6a384bfd59186045f7c1dc439624f29a1dc": {
      "address": "0xF3C8D948C04A40DD500BD8Ee7C620093d581c5db",
      "txHash": "0xea09464f52c730049d86048da769e395361bd7dad2e5a6d730bd78c04a14fca9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "consumer",
            "type": "t_contract(ITherundownConsumer)4466",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:32"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "verifier",
            "type": "t_contract(ITherundownConsumerVerifier)4622",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:33"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "sportsManager",
            "type": "t_contract(ISportPositionalMarketManager)4179",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:34"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)3183_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:37"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "backupOdds",
            "type": "t_mapping(t_bytes32,t_struct(GameOdds)3183_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:38"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "invalidOdds",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:39"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsLastPulledForGame",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:40"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "gameIdPerChildMarket",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:41"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "doesSportSupportSpreadAndTotal",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:42"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketChildMarketIndex",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:45"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "numberOfChildMarkets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:46"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketSpreadChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_int16,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:47"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "mainMarketTotalChildMarket",
            "type": "t_mapping(t_address,t_mapping(t_uint24,t_address))",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:48"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketMainMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:49"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketSread",
            "type": "t_mapping(t_address,t_int16)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:50"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketTotal",
            "type": "t_mapping(t_address,t_uint24)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:51"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveTotalChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:52"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "currentActiveSpreadChildMarket",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:53"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "isSpreadChildMarket",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:54"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "childMarketCreated",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:55"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "normalizedOddsForMarketFulfilled",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:56"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "normalizedOddsForMarket",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:57"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "oddsReceiver",
            "type": "t_address",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:58"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "playersReportTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:59"
          },
          {
            "contract": "GamesOddsObtainer",
            "label": "waitTimePlayersReport",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Rundown/GamesOddsObtainer.sol:60"
          }
        ],
        "types": {
          "t_contract(ITherundownConsumer)4466": {
            "label": "contract ITherundownConsumer"
          },
          "t_contract(ITherundownConsumerVerifier)4622": {
            "label": "contract ITherundownConsumerVerifier"
          },
          "t_contract(ISportPositionalMarketManager)4179": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_mapping(t_bytes32,t_struct(GameOdds)3183_storage)": {
            "label": "mapping(bytes32 => struct IGamesOddsObtainer.GameOdds)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(GameOdds)3183_storage": {
            "label": "struct IGamesOddsObtainer.GameOdds",
            "members": [
              {
                "label": "gameId",
                "type": "t_bytes32"
              },
              {
                "label": "homeOdds",
                "type": "t_int24"
              },
              {
                "label": "awayOdds",
                "type": "t_int24"
              },
              {
                "label": "drawOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadHome",
                "type": "t_int16"
              },
              {
                "label": "spreadHomeOdds",
                "type": "t_int24"
              },
              {
                "label": "spreadAway",
                "type": "t_int16"
              },
              {
                "label": "spreadAwayOdds",
                "type": "t_int24"
              },
              {
                "label": "totalOver",
                "type": "t_uint24"
              },
              {
                "label": "totalOverOdds",
                "type": "t_int24"
              },
              {
                "label": "totalUnder",
                "type": "t_uint24"
              },
              {
                "label": "totalUnderOdds",
                "type": "t_int24"
              }
            ]
          },
          "t_int24": {
            "label": "int24"
          },
          "t_int16": {
            "label": "int16"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_int16,t_address))": {
            "label": "mapping(address => mapping(int16 => address))"
          },
          "t_mapping(t_int16,t_address)": {
            "label": "mapping(int16 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint24,t_address))": {
            "label": "mapping(address => mapping(uint24 => address))"
          },
          "t_mapping(t_uint24,t_address)": {
            "label": "mapping(uint24 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_int16)": {
            "label": "mapping(address => int16)"
          },
          "t_mapping(t_address,t_uint24)": {
            "label": "mapping(address => uint24)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "499db1973c244fc526fb3978afdf322ee6c6a9ead25df61b68c658a3513a57ae": {
      "address": "0x45509D5e7d64EEb42780C18134E2719bdB30f56e",
      "txHash": "0xdf6a1093bcc1fb13ba1fb94e6c100a8147129256a2f2a44fd5421d02beefd970",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sportsAMM",
            "type": "t_contract(ISportsAMM)4782",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:41"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)470",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:42"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:44"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:46"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:47"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:48"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:50"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:52"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:53"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:55"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:56"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:58"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:60"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:61"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:63"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:64"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:66"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:67"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:68"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:69"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:71"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)4868",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:73"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:75"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:77"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:79"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:81"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "onlyWhitelistedStakersAllowed",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:83"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "whitelistedStakers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:85"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:87"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "marketAlreadyExercisedInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:89"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "roundClosingPrepared",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:91"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "usersProcessedInRound",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:93"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "withdrawalShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:95"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "utilizationRate",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:97"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:99"
          },
          {
            "contract": "SportAMMLiquidityPool",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\LiquidityPool\\SportAMMLiquidityPool.sol:100"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)4782": {
            "label": "contract ISportsAMM"
          },
          "t_contract(IERC20Upgradeable)470": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)4868": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "88f35b5988ee10f06b5ce4f246b6320572d60b4629b55ca21da41a4ad2a48e29": {
      "address": "0x27DEF19D961DA1E06C994bc016245fe06cd992f5",
      "txHash": "0x0bb3b81b81856a25fbd67402b9441504557a5f1c4e07c7b6b5a79bff734e1533",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "parlayAMM",
            "type": "t_contract(IParlayMarketsAMM)16865",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:42"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)1472",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:43"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:45"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:47"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:48"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:50"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:52"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:54"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:55"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:57"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:58"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:60"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:62"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:63"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:65"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:66"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:68"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:69"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:70"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:71"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:73"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)18110",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:75"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:77"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:79"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:81"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:83"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "onlyWhitelistedStakersAllowed",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:85"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "whitelistedStakers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:87"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:89"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "marketAlreadyExercisedInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:91"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "roundClosingPrepared",
            "type": "t_bool",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:93"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "usersProcessedInRound",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:95"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "withdrawalShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:97"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "parlayMarketRound",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:99"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "utilizationRate",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:101"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:103"
          },
          {
            "contract": "ParlayAMMLiquidityPool",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SportMarkets\\Parlay\\ParlayLP\\ParlayAMMLiquidityPool.sol:104"
          }
        ],
        "types": {
          "t_contract(IParlayMarketsAMM)16865": {
            "label": "contract IParlayMarketsAMM"
          },
          "t_contract(IERC20Upgradeable)1472": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)18110": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d216ac2717cb3fd346329323b6f4dbcf67d6009784a742bea0fa3b01d19a0a6d": {
      "address": "0xd26199e65Cb3935560117C83c5ad87c80B9E4a11",
      "txHash": "0x93984e91f6c69369475895bc30510f1551b957e3f0e2302cfe5548816d2ded8e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "thalesAMM",
            "type": "t_contract(IThalesAMM)4367",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:41"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)470",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:42"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "started",
            "type": "t_bool",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:44"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "round",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:46"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "roundLength",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:47"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "firstRoundStartTime",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:48"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "roundPools",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:50"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "usersPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:52"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "userInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:53"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "balancesPerRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:55"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "allocationPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:56"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "withdrawalRequested",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:58"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "tradingMarketsPerRound",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:60"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "isTradingMarketInARound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:61"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "profitAndLossPerRound",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:63"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "cumulativeProfitAndLoss",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:64"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "maxAllowedDeposit",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:66"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "minDepositAmount",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:67"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "maxAllowedUsers",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:68"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "usersCurrentlyInPool",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:69"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "defaultLiquidityProvider",
            "type": "t_address",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:71"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)4225",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:73"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "stakedThalesMultiplier",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:75"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "poolRoundMastercopy",
            "type": "t_address",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:77"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "whitelistedDeposits",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:79"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:81"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "onlyWhitelistedStakersAllowed",
            "type": "t_bool",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:83"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "whitelistedStakers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:85"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "needsTransformingCollateral",
            "type": "t_bool",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:87"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "marketAlreadyExercisedInRound",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:89"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "roundClosingPrepared",
            "type": "t_bool",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:91"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "usersProcessedInRound",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:93"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "marketsProcessedInRound",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:95"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "withdrawalShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:97"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "utilizationRate",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:99"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:101"
          },
          {
            "contract": "ThalesAMMLiquidityPool",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\AMM\\LiquidityPool\\ThalesAMMLiquidityPool.sol:102"
          }
        ],
        "types": {
          "t_contract(IThalesAMM)4367": {
            "label": "contract IThalesAMM"
          },
          "t_contract(IERC20Upgradeable)470": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IStakingThales)4225": {
            "label": "contract IStakingThales"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2238d360e1688f0130b352e2a34ddf831464d894074f6e0a1a2bbabdb84ac123": {
      "address": "0xb8e8E6cF3AbD16070013B23c92601D0eeA83a02E",
      "txHash": "0x82544439993f537defdf0743a0065783525a9942e4a2526f16f5679e70e46d75",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SafeBoxBuffer",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)104781",
            "src": "contracts\\EscrowAndStaking\\SafeBoxBuffer.sol:17"
          },
          {
            "contract": "SafeBoxBuffer",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8368",
            "src": "contracts\\EscrowAndStaking\\SafeBoxBuffer.sol:18"
          }
        ],
        "types": {
          "t_contract(IAddressManager)104781": {
            "label": "contract IAddressManager"
          },
          "t_contract(IERC20Upgradeable)8368": {
            "label": "contract IERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "01e0376a9a7b8534bfde7d56034b9f1a04b3c512da1d96e20524f72dc436746d": {
      "address": "0xb9D759b6028AB47de9302d3F8807a4c706110517",
      "txHash": "0x52ea8025ee06601a689b4759251e78cd17dfe908bc15403bc30773e37bb4b1ea",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyPausable.sol:12"
          },
          {
            "contract": "StakingThales",
            "label": "iEscrowThales",
            "type": "t_contract(IEscrowThales)2569",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:37"
          },
          {
            "contract": "StakingThales",
            "label": "stakingToken",
            "type": "t_contract(IERC20)3784",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:38"
          },
          {
            "contract": "StakingThales",
            "label": "feeToken",
            "type": "t_contract(IERC20)3784",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:39"
          },
          {
            "contract": "StakingThales",
            "label": "SNXRewards",
            "type": "t_contract(ISNXRewards)2977",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:40"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRoyale",
            "type": "t_contract(IThalesRoyale)3319",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:41"
          },
          {
            "contract": "StakingThales",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)2939",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:42"
          },
          {
            "contract": "StakingThales",
            "label": "periodsOfStaking",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:44"
          },
          {
            "contract": "StakingThales",
            "label": "lastPeriodTimeStamp",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:45"
          },
          {
            "contract": "StakingThales",
            "label": "durationPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:46"
          },
          {
            "contract": "StakingThales",
            "label": "unstakeDurationPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:47"
          },
          {
            "contract": "StakingThales",
            "label": "startTimeStamp",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:48"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodRewards",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:49"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodFees",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:50"
          },
          {
            "contract": "StakingThales",
            "label": "distributeFeesEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:51"
          },
          {
            "contract": "StakingThales",
            "label": "fixedPeriodReward",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:52"
          },
          {
            "contract": "StakingThales",
            "label": "periodExtraReward",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:53"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXRewardsInPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:54"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXFeesInPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:55"
          },
          {
            "contract": "StakingThales",
            "label": "claimEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:56"
          },
          {
            "contract": "StakingThales",
            "label": "stakerLifetimeRewardsClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:58"
          },
          {
            "contract": "StakingThales",
            "label": "stakerFeesClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:59"
          },
          {
            "contract": "StakingThales",
            "label": "_totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:61"
          },
          {
            "contract": "StakingThales",
            "label": "_totalEscrowedAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:62"
          },
          {
            "contract": "StakingThales",
            "label": "_totalPendingStakeAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:63"
          },
          {
            "contract": "StakingThales",
            "label": "_totalUnclaimedRewards",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:64"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardsClaimed",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:65"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardFeesClaimed",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:66"
          },
          {
            "contract": "StakingThales",
            "label": "lastUnstakeTime",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:68"
          },
          {
            "contract": "StakingThales",
            "label": "unstaking",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:69"
          },
          {
            "contract": "StakingThales",
            "label": "unstakingAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:70"
          },
          {
            "contract": "StakingThales",
            "label": "_stakedBalances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:71"
          },
          {
            "contract": "StakingThales",
            "label": "_lastRewardsClaimedPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:72"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:73"
          },
          {
            "contract": "StakingThales",
            "label": "lastAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:82"
          },
          {
            "contract": "StakingThales",
            "label": "stakerAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)197_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:83"
          },
          {
            "contract": "StakingThales",
            "label": "extraRewardsActive",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:85"
          },
          {
            "contract": "StakingThales",
            "label": "ThalesStakingRewardsPool",
            "type": "t_contract(IThalesStakingRewardsPool)3329",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:86"
          },
          {
            "contract": "StakingThales",
            "label": "maxSNXRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:88"
          },
          {
            "contract": "StakingThales",
            "label": "maxAMMVolumeRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:89"
          },
          {
            "contract": "StakingThales",
            "label": "AMMVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:90"
          },
          {
            "contract": "StakingThales",
            "label": "maxThalesRoyaleRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:91"
          },
          {
            "contract": "StakingThales",
            "label": "SNXVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:96"
          },
          {
            "contract": "StakingThales",
            "label": "_lastStakingPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:98"
          },
          {
            "contract": "StakingThales",
            "label": "totalStakedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:100"
          },
          {
            "contract": "StakingThales",
            "label": "totalEscrowedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:101"
          },
          {
            "contract": "StakingThales",
            "label": "exoticBonds",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:102"
          },
          {
            "contract": "StakingThales",
            "label": "addressResolver",
            "type": "t_contract(IAddressResolver)2452",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:104"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:106"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:107"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:109"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)197_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:110"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesRangedAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:111"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)197_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:112"
          },
          {
            "contract": "StakingThales",
            "label": "lastExoticMarketsUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:113"
          },
          {
            "contract": "StakingThales",
            "label": "exoticMarketsVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)197_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:114"
          },
          {
            "contract": "StakingThales",
            "label": "lastSportsAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:115"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)197_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:116"
          },
          {
            "contract": "StakingThales",
            "label": "canClaimOnBehalf",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:118"
          },
          {
            "contract": "StakingThales",
            "label": "mergeAccountEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:120"
          },
          {
            "contract": "StakingThales",
            "label": "delegatedVolume",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:122"
          },
          {
            "contract": "StakingThales",
            "label": "supportedSportVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:123"
          },
          {
            "contract": "StakingThales",
            "label": "supportedAMMVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:124"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMLiquidityPool",
            "type": "t_contract(ISportsAMMLiquidityPool)2987",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:126"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMMLiquidityPool",
            "type": "t_contract(IThalesAMMLiquidityPool)3250",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:127"
          },
          {
            "contract": "StakingThales",
            "label": "stakingThalesBonusRewardsManager",
            "type": "t_contract(IStakingThalesBonusRewardsManager)3108",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:129"
          },
          {
            "contract": "StakingThales",
            "label": "parlayAMMLiquidityPool",
            "type": "t_contract(IParlayAMMLiquidityPool)2607",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:130"
          },
          {
            "contract": "StakingThales",
            "label": "readOnlyMode",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:132"
          },
          {
            "contract": "StakingThales",
            "label": "closingPeriodInProgress",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:133"
          },
          {
            "contract": "StakingThales",
            "label": "closingPeriodPauseTime",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:134"
          },
          {
            "contract": "StakingThales",
            "label": "sendCCIPMessage",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:136"
          }
        ],
        "types": {
          "t_contract(IEscrowThales)2569": {
            "label": "contract IEscrowThales"
          },
          "t_contract(IERC20)3784": {
            "label": "contract IERC20"
          },
          "t_contract(ISNXRewards)2977": {
            "label": "contract ISNXRewards"
          },
          "t_contract(IThalesRoyale)3319": {
            "label": "contract IThalesRoyale"
          },
          "t_contract(IPriceFeed)2939": {
            "label": "contract IPriceFeed"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)197_storage)4_storage)": {
            "label": "mapping(address => struct StakingThales.AMMVolumeEntry[4])"
          },
          "t_array(t_struct(AMMVolumeEntry)197_storage)4_storage": {
            "label": "struct StakingThales.AMMVolumeEntry[4]"
          },
          "t_struct(AMMVolumeEntry)197_storage": {
            "label": "struct StakingThales.AMMVolumeEntry",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "period",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IThalesStakingRewardsPool)3329": {
            "label": "contract IThalesStakingRewardsPool"
          },
          "t_contract(IAddressResolver)2452": {
            "label": "contract IAddressResolver"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_contract(ISportsAMMLiquidityPool)2987": {
            "label": "contract ISportsAMMLiquidityPool"
          },
          "t_contract(IThalesAMMLiquidityPool)3250": {
            "label": "contract IThalesAMMLiquidityPool"
          },
          "t_contract(IStakingThalesBonusRewardsManager)3108": {
            "label": "contract IStakingThalesBonusRewardsManager"
          },
          "t_contract(IParlayAMMLiquidityPool)2607": {
            "label": "contract IParlayAMMLiquidityPool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e36d741bd41116d9f2bc09fc6e25b6b600d7690053f03bd2674af9b9de4a94ad": {
      "address": "0x24aF2757DA0898D14A0691604D11542Ad60b8bce",
      "txHash": "0xe95bda535ecd1c1e7a0282cac6aeb8fea0a0df3994eb1172602b93025aeb7ecc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyPausable.sol:12"
          },
          {
            "contract": "StakingThales",
            "label": "iEscrowThales",
            "type": "t_contract(IEscrowThales)2672",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:37"
          },
          {
            "contract": "StakingThales",
            "label": "stakingToken",
            "type": "t_contract(IERC20)3896",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:38"
          },
          {
            "contract": "StakingThales",
            "label": "feeToken",
            "type": "t_contract(IERC20)3896",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:39"
          },
          {
            "contract": "StakingThales",
            "label": "SNXRewards",
            "type": "t_contract(ISNXRewards)3080",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:40"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRoyale",
            "type": "t_contract(IThalesRoyale)3431",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:41"
          },
          {
            "contract": "StakingThales",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)3042",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:42"
          },
          {
            "contract": "StakingThales",
            "label": "periodsOfStaking",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:44"
          },
          {
            "contract": "StakingThales",
            "label": "lastPeriodTimeStamp",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:45"
          },
          {
            "contract": "StakingThales",
            "label": "durationPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:46"
          },
          {
            "contract": "StakingThales",
            "label": "unstakeDurationPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:47"
          },
          {
            "contract": "StakingThales",
            "label": "startTimeStamp",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:48"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodRewards",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:49"
          },
          {
            "contract": "StakingThales",
            "label": "currentPeriodFees",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:50"
          },
          {
            "contract": "StakingThales",
            "label": "distributeFeesEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:51"
          },
          {
            "contract": "StakingThales",
            "label": "fixedPeriodReward",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:52"
          },
          {
            "contract": "StakingThales",
            "label": "periodExtraReward",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:53"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXRewardsInPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:54"
          },
          {
            "contract": "StakingThales",
            "label": "totalSNXFeesInPeriod",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:55"
          },
          {
            "contract": "StakingThales",
            "label": "claimEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:56"
          },
          {
            "contract": "StakingThales",
            "label": "stakerLifetimeRewardsClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:58"
          },
          {
            "contract": "StakingThales",
            "label": "stakerFeesClaimed",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:59"
          },
          {
            "contract": "StakingThales",
            "label": "_totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:61"
          },
          {
            "contract": "StakingThales",
            "label": "_totalEscrowedAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:62"
          },
          {
            "contract": "StakingThales",
            "label": "_totalPendingStakeAmount",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:63"
          },
          {
            "contract": "StakingThales",
            "label": "_totalUnclaimedRewards",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:64"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardsClaimed",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:65"
          },
          {
            "contract": "StakingThales",
            "label": "_totalRewardFeesClaimed",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:66"
          },
          {
            "contract": "StakingThales",
            "label": "lastUnstakeTime",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:68"
          },
          {
            "contract": "StakingThales",
            "label": "unstaking",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:69"
          },
          {
            "contract": "StakingThales",
            "label": "unstakingAmount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:70"
          },
          {
            "contract": "StakingThales",
            "label": "_stakedBalances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:71"
          },
          {
            "contract": "StakingThales",
            "label": "_lastRewardsClaimedPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:72"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:73"
          },
          {
            "contract": "StakingThales",
            "label": "lastAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:82"
          },
          {
            "contract": "StakingThales",
            "label": "stakerAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)197_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:83"
          },
          {
            "contract": "StakingThales",
            "label": "extraRewardsActive",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:85"
          },
          {
            "contract": "StakingThales",
            "label": "ThalesStakingRewardsPool",
            "type": "t_contract(IThalesStakingRewardsPool)3441",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:86"
          },
          {
            "contract": "StakingThales",
            "label": "maxSNXRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:88"
          },
          {
            "contract": "StakingThales",
            "label": "maxAMMVolumeRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:89"
          },
          {
            "contract": "StakingThales",
            "label": "AMMVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:90"
          },
          {
            "contract": "StakingThales",
            "label": "maxThalesRoyaleRewardsPercentage",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:91"
          },
          {
            "contract": "StakingThales",
            "label": "SNXVolumeRewardsMultiplier",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:96"
          },
          {
            "contract": "StakingThales",
            "label": "_lastStakingPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:98"
          },
          {
            "contract": "StakingThales",
            "label": "totalStakedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:100"
          },
          {
            "contract": "StakingThales",
            "label": "totalEscrowedLastPeriodEnd",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:101"
          },
          {
            "contract": "StakingThales",
            "label": "exoticBonds",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:102"
          },
          {
            "contract": "StakingThales",
            "label": "addressResolver",
            "type": "t_contract(IAddressResolver)2555",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:104"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:106"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:107"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:109"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)197_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:110"
          },
          {
            "contract": "StakingThales",
            "label": "lastThalesRangedAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:111"
          },
          {
            "contract": "StakingThales",
            "label": "thalesRangedAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)197_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:112"
          },
          {
            "contract": "StakingThales",
            "label": "lastExoticMarketsUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:113"
          },
          {
            "contract": "StakingThales",
            "label": "exoticMarketsVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)197_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:114"
          },
          {
            "contract": "StakingThales",
            "label": "lastSportsAMMUpdatePeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:115"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMVolume",
            "type": "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)197_storage)4_storage)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:116"
          },
          {
            "contract": "StakingThales",
            "label": "canClaimOnBehalf",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:118"
          },
          {
            "contract": "StakingThales",
            "label": "mergeAccountEnabled",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:120"
          },
          {
            "contract": "StakingThales",
            "label": "delegatedVolume",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:122"
          },
          {
            "contract": "StakingThales",
            "label": "supportedSportVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:123"
          },
          {
            "contract": "StakingThales",
            "label": "supportedAMMVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:124"
          },
          {
            "contract": "StakingThales",
            "label": "sportsAMMLiquidityPool",
            "type": "t_contract(ISportsAMMLiquidityPool)3090",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:126"
          },
          {
            "contract": "StakingThales",
            "label": "thalesAMMLiquidityPool",
            "type": "t_contract(IThalesAMMLiquidityPool)3362",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:127"
          },
          {
            "contract": "StakingThales",
            "label": "stakingThalesBonusRewardsManager",
            "type": "t_contract(IStakingThalesBonusRewardsManager)3220",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:129"
          },
          {
            "contract": "StakingThales",
            "label": "parlayAMMLiquidityPool",
            "type": "t_contract(IParlayAMMLiquidityPool)2710",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:130"
          },
          {
            "contract": "StakingThales",
            "label": "readOnlyMode",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:132"
          },
          {
            "contract": "StakingThales",
            "label": "closingPeriodInProgress",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:133"
          },
          {
            "contract": "StakingThales",
            "label": "closingPeriodPauseTime",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:134"
          },
          {
            "contract": "StakingThales",
            "label": "sendCCIPMessage",
            "type": "t_bool",
            "src": "contracts/EscrowAndStaking/StakingThales.sol:136"
          }
        ],
        "types": {
          "t_contract(IEscrowThales)2672": {
            "label": "contract IEscrowThales"
          },
          "t_contract(IERC20)3896": {
            "label": "contract IERC20"
          },
          "t_contract(ISNXRewards)3080": {
            "label": "contract ISNXRewards"
          },
          "t_contract(IThalesRoyale)3431": {
            "label": "contract IThalesRoyale"
          },
          "t_contract(IPriceFeed)3042": {
            "label": "contract IPriceFeed"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_array(t_struct(AMMVolumeEntry)197_storage)4_storage)": {
            "label": "mapping(address => struct StakingThales.AMMVolumeEntry[4])"
          },
          "t_array(t_struct(AMMVolumeEntry)197_storage)4_storage": {
            "label": "struct StakingThales.AMMVolumeEntry[4]"
          },
          "t_struct(AMMVolumeEntry)197_storage": {
            "label": "struct StakingThales.AMMVolumeEntry",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "period",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IThalesStakingRewardsPool)3441": {
            "label": "contract IThalesStakingRewardsPool"
          },
          "t_contract(IAddressResolver)2555": {
            "label": "contract IAddressResolver"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_contract(ISportsAMMLiquidityPool)3090": {
            "label": "contract ISportsAMMLiquidityPool"
          },
          "t_contract(IThalesAMMLiquidityPool)3362": {
            "label": "contract IThalesAMMLiquidityPool"
          },
          "t_contract(IStakingThalesBonusRewardsManager)3220": {
            "label": "contract IStakingThalesBonusRewardsManager"
          },
          "t_contract(IParlayAMMLiquidityPool)2710": {
            "label": "contract IParlayAMMLiquidityPool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6e38f30eb0fb1607b9892ed0bbe9262415248e81325484561c81555c51995428": {
      "address": "0x342D29603CE81cF3aC1B004A5e19C6Ff6d7fe516",
      "txHash": "0x945a203a3ea9fe8d74874adbdb7903fdc0da377e59c7b92b8732212aa6dc25c4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SpeedMarketsAMMCreator",
            "label": "maxCreationDelay",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMMCreator.sol:79"
          },
          {
            "contract": "SpeedMarketsAMMCreator",
            "label": "pendingSpeedMarkets",
            "type": "t_array(t_struct(PendingSpeedMarket)6499_storage)dyn_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMMCreator.sol:81"
          },
          {
            "contract": "SpeedMarketsAMMCreator",
            "label": "pendingChainedSpeedMarkets",
            "type": "t_array(t_struct(PendingChainedSpeedMarket)6541_storage)dyn_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMMCreator.sol:82"
          },
          {
            "contract": "SpeedMarketsAMMCreator",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)7644",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMMCreator.sol:84"
          },
          {
            "contract": "SpeedMarketsAMMCreator",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMMCreator.sol:86"
          }
        ],
        "types": {
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_struct(PendingSpeedMarket)6499_storage)dyn_storage": {
            "label": "struct SpeedMarketsAMMCreator.PendingSpeedMarket[]"
          },
          "t_struct(PendingSpeedMarket)6499_storage": {
            "label": "struct SpeedMarketsAMMCreator.PendingSpeedMarket",
            "members": [
              {
                "label": "user",
                "type": "t_address"
              },
              {
                "label": "asset",
                "type": "t_bytes32"
              },
              {
                "label": "strikeTime",
                "type": "t_uint64"
              },
              {
                "label": "delta",
                "type": "t_uint64"
              },
              {
                "label": "strikePrice",
                "type": "t_uint256"
              },
              {
                "label": "strikePriceSlippage",
                "type": "t_uint256"
              },
              {
                "label": "direction",
                "type": "t_enum(Direction)3828"
              },
              {
                "label": "collateral",
                "type": "t_address"
              },
              {
                "label": "buyinAmount",
                "type": "t_uint256"
              },
              {
                "label": "referrer",
                "type": "t_address"
              },
              {
                "label": "skewImpact",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_enum(Direction)3828": {
            "label": "enum SpeedMarket.Direction",
            "members": [
              "Up",
              "Down"
            ]
          },
          "t_array(t_struct(PendingChainedSpeedMarket)6541_storage)dyn_storage": {
            "label": "struct SpeedMarketsAMMCreator.PendingChainedSpeedMarket[]"
          },
          "t_struct(PendingChainedSpeedMarket)6541_storage": {
            "label": "struct SpeedMarketsAMMCreator.PendingChainedSpeedMarket",
            "members": [
              {
                "label": "user",
                "type": "t_address"
              },
              {
                "label": "asset",
                "type": "t_bytes32"
              },
              {
                "label": "timeFrame",
                "type": "t_uint64"
              },
              {
                "label": "strikePrice",
                "type": "t_uint256"
              },
              {
                "label": "strikePriceSlippage",
                "type": "t_uint256"
              },
              {
                "label": "directions",
                "type": "t_array(t_enum(Direction)3828)dyn_storage"
              },
              {
                "label": "collateral",
                "type": "t_address"
              },
              {
                "label": "buyinAmount",
                "type": "t_uint256"
              },
              {
                "label": "referrer",
                "type": "t_address"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_enum(Direction)3828)dyn_storage": {
            "label": "enum SpeedMarket.Direction[]"
          },
          "t_contract(IAddressManager)7644": {
            "label": "contract IAddressManager"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "fd34fcafe8d8f47c489dff5e2b31aa1eeb9a67fc5e88cc047e32b8cede59bd5c": {
      "address": "0x5d7e21B2D18bc536C35B96e9e840bEC4017aF153",
      "txHash": "0x371491da3b7ebfc95190910aac0664889f609f98025dd212f86fd2ce94ec4754",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)4706_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:38"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)4706_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:39"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)470",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:44"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:46"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:48"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFee",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:49"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:51"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "supportedAsset",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:53"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minimalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:55"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:56"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:58"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:59"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:61"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:62"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "assetToPythId",
            "type": "t_mapping(t_bytes32,t_bytes32)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:64"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "pyth",
            "type": "t_contract(IPyth)1502",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:66"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelay",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:68"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)4696",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:70"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)4706_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:72"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)4706_storage)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:73"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:75"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)4399",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:76"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:77"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)1579,t_uint256))",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:79"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)1579,t_uint256))",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:80"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelayForResolving",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:82"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "marketHasCreatedAtAttribute",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:84"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:86"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "timeThresholdsForFees",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:88"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFees",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:89"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketsAMMUtils",
            "type": "t_contract(SpeedMarketsAMMUtils)4241",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:91"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "marketHasFeeAttribute",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:93"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)4316",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:96"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxSkewImpact",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:98"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "skewSlippage",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\SpeedMarketsAMM.sol:99"
          }
        ],
        "types": {
          "t_struct(AddressSet)4706_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)470": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_contract(IPyth)1502": {
            "label": "contract IPyth"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(IStakingThales)4696": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_struct(AddressSet)4706_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(IMultiCollateralOnOffRamp)4399": {
            "label": "contract IMultiCollateralOnOffRamp"
          },
          "t_mapping(t_bytes32,t_mapping(t_enum(Direction)1579,t_uint256))": {
            "label": "mapping(bytes32 => mapping(enum SpeedMarket.Direction => uint256))"
          },
          "t_mapping(t_enum(Direction)1579,t_uint256)": {
            "label": "mapping(enum SpeedMarket.Direction => uint256)"
          },
          "t_enum(Direction)1579": {
            "label": "enum SpeedMarket.Direction",
            "members": [
              "Up",
              "Down"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(SpeedMarketsAMMUtils)4241": {
            "label": "contract SpeedMarketsAMMUtils"
          },
          "t_contract(IAddressManager)4316": {
            "label": "contract IAddressManager"
          }
        }
      }
    },
    "a325680e34606e03da311786a3b79d5658116c4f7ae5b350b4352bd54f43652c": {
      "address": "0xD89d52288432Bad90729244Fe0945468294b639C",
      "txHash": "0xc6384da9c81787c1b199ac447030393f7560d2fb625d32e0239ebd50ba220f10",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\utils\\proxy\\solidity-0.8.0\\ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)470",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:41"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)7035_storage",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:43"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)7035_storage",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:44"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)7035_storage)",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:46"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)7035_storage)",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:47"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minChainedMarkets",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:49"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxChainedMarkets",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:50"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minTimeFrame",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:52"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxTimeFrame",
            "type": "t_uint64",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:53"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:55"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:56"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxProfitPerIndividualMarket",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:58"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "payoutMultiplier",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:60"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxRisk",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:62"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "currentRisk",
            "type": "t_uint256",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:63"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "chainedSpeedMarketMastercopy",
            "type": "t_address",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:65"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:67"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)6565",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:70"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "payoutMultipliers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\SpeedMarkets\\ChainedSpeedMarketsAMM.sol:74"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)470": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(AddressSet)7035_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(AddressSet)7035_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IAddressManager)6565": {
            "label": "contract IAddressManager"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "00bfcbee5af28c1e9ce28fbd92b89642624e86ee5af603313bfc1e4d4f684e75": {
      "address": "0xcCF365e42b3F7Ea4AC6831a3506998C374a5396A",
      "txHash": "0xf6684209b4591c78f94682e828e16d1864b5449d152a73bac504d5d45433b93d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SpeedMarketsAMMData",
            "label": "speedMarketsAMM",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMMData.sol:19"
          },
          {
            "contract": "SpeedMarketsAMMData",
            "label": "chainedSpeedMarketsAMM",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMMData.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9fa3529de69954723c616e2a6187e7eee8597b7889171b1e16ee9ae66fdf97da": {
      "address": "0xA2d2f7a4D4fD502E824951365BC11df191Be789A",
      "txHash": "0xcf30ffea6accbff9b410298b2ff8025b42ce24b6e35bd7473c1248adcd23e698",
      "layout": {
        "storage": [
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SafeBoxBuyback",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)229",
            "src": "contracts/AMM/SafeBoxBuyback.sol:19"
          },
          {
            "contract": "SafeBoxBuyback",
            "label": "thalesToken",
            "type": "t_contract(IERC20Upgradeable)229",
            "src": "contracts/AMM/SafeBoxBuyback.sol:20"
          },
          {
            "contract": "SafeBoxBuyback",
            "label": "WETH9",
            "type": "t_address",
            "src": "contracts/AMM/SafeBoxBuyback.sol:21"
          },
          {
            "contract": "SafeBoxBuyback",
            "label": "swapRouter",
            "type": "t_contract(ISwapRouter)1337",
            "src": "contracts/AMM/SafeBoxBuyback.sol:23"
          },
          {
            "contract": "SafeBoxBuyback",
            "label": "uniswapFactory",
            "type": "t_contract(IUniswapV3Factory)781",
            "src": "contracts/AMM/SafeBoxBuyback.sol:24"
          },
          {
            "contract": "SafeBoxBuyback",
            "label": "sUSDperTick",
            "type": "t_uint256",
            "src": "contracts/AMM/SafeBoxBuyback.sol:26"
          },
          {
            "contract": "SafeBoxBuyback",
            "label": "tickLength",
            "type": "t_uint256",
            "src": "contracts/AMM/SafeBoxBuyback.sol:27"
          },
          {
            "contract": "SafeBoxBuyback",
            "label": "lastBuyback",
            "type": "t_uint256",
            "src": "contracts/AMM/SafeBoxBuyback.sol:28"
          },
          {
            "contract": "SafeBoxBuyback",
            "label": "buybacksEnabled",
            "type": "t_bool",
            "src": "contracts/AMM/SafeBoxBuyback.sol:30"
          },
          {
            "contract": "SafeBoxBuyback",
            "label": "minAccepted",
            "type": "t_uint256",
            "src": "contracts/AMM/SafeBoxBuyback.sol:32"
          },
          {
            "contract": "SafeBoxBuyback",
            "label": "pathToUse",
            "type": "t_bytes_storage",
            "src": "contracts/AMM/SafeBoxBuyback.sol:34"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)229": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(ISwapRouter)1337": {
            "label": "contract ISwapRouter"
          },
          "t_contract(IUniswapV3Factory)781": {
            "label": "contract IUniswapV3Factory"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes_storage": {
            "label": "bytes"
          }
        }
      }
    },
    "642c3c13147bc619ec5621cf4e0312525c9ea8c444eb39730f16638bc9d215b4": {
      "address": "0x085D2f2EeF311cA8AD9667B604495FDA10Fb7536",
      "txHash": "0xac1ae62b2bdca8ead62f61f8f56ab0711b4452446967340c7aa9ce4cc96d4d4d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportsAmm",
            "type": "t_contract(ISportsAMM)17464",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:41"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sportManager",
            "type": "t_contract(ISportPositionalMarketManager)17223",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:42"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)1233",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:43"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)17573",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:45"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveSUSD",
            "type": "t_contract(ICurveSUSD)15400",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:46"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:48"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayMarketData",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:49"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:50"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:51"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:53"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "usdt",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:54"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "dai",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:55"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:57"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaySize",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:58"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:59"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxSupportedOdds",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:60"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:61"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "referrerFee",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:63"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "curveOnrampEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:64"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "reducedFeesEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:65"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "_knownMarkets",
            "type": "t_struct(AddressSet)17870_storage",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:67"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "resolvedParlay",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:68"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedPegSlippagePercentage",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:71"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayVerifier",
            "type": "t_contract(ParlayVerifier)9547",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:73"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "minUSDAmount",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:74"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "maxAllowedRiskPerCombination",
            "type": "t_uint256",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:76"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerCombination",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:77"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerGameCombination",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:80"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "safeBoxFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:84"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayAmmFeePerAddress",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:86"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerPackedGamesCombination",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:88"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "SGPFeePerCombination",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:90"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayLP",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:92"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)15982",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:95"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:96"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlayPolicy",
            "type": "t_address",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:98"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "riskPerMarketAndPosition",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:100"
          },
          {
            "contract": "ParlayMarketsAMM",
            "label": "parlaysWithNewFormat",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SportMarkets/Parlay/ParlayMarketsAMM.sol:102"
          }
        ],
        "types": {
          "t_contract(ISportsAMM)17464": {
            "label": "contract ISportsAMM"
          },
          "t_contract(ISportPositionalMarketManager)17223": {
            "label": "contract ISportPositionalMarketManager"
          },
          "t_contract(IERC20Upgradeable)1233": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStakingThales)17573": {
            "label": "contract IStakingThales"
          },
          "t_contract(ICurveSUSD)15400": {
            "label": "contract ICurveSUSD"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)17870_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(ParlayVerifier)9547": {
            "label": "contract ParlayVerifier"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256))))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => uint256))))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256))))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => mapping(address => uint256)))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256))))": {
            "label": "mapping(address => mapping(address => mapping(address => mapping(address => uint256))))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(IMultiCollateralOnOffRamp)15982": {
            "label": "contract IMultiCollateralOnOffRamp"
          }
        }
      }
    },
    "0673421a3320b0aae0ffbba91de09d6bc61ff9232158ef20212d233c81b5689c": {
      "address": "0xe0253d6781710c63E537586704E74A366FCAf39E",
      "txHash": "0x5b5a14aed412cf2ab6efeadb525ce6437ad682ed213b31cd601a242c8a597974",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/upgrades-core/contracts/Initializable.sol:63"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/ProxyPausable.sol:12"
          },
          {
            "contract": "ThalesStakingRewardsPool",
            "label": "iStakingThales",
            "type": "t_contract(IStakingThales)561",
            "src": "contracts/EscrowAndStaking/ThalesStakingRewardsPool.sol:28"
          },
          {
            "contract": "ThalesStakingRewardsPool",
            "label": "iEscrowThales",
            "type": "t_contract(IEscrowThales)452",
            "src": "contracts/EscrowAndStaking/ThalesStakingRewardsPool.sol:29"
          },
          {
            "contract": "ThalesStakingRewardsPool",
            "label": "rewardToken",
            "type": "t_contract(IERC20)1026",
            "src": "contracts/EscrowAndStaking/ThalesStakingRewardsPool.sol:30"
          },
          {
            "contract": "ThalesStakingRewardsPool",
            "label": "lifetimeClaimedRewards",
            "type": "t_uint256",
            "src": "contracts/EscrowAndStaking/ThalesStakingRewardsPool.sol:32"
          }
        ],
        "types": {
          "t_contract(IStakingThales)561": {
            "label": "contract IStakingThales"
          },
          "t_contract(IEscrowThales)452": {
            "label": "contract IEscrowThales"
          },
          "t_contract(IERC20)1026": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0e0fffd59e0804a3e5303e085c3a05988b73ce123792e14f878990661cf2b3ba": {
      "address": "0xA5F7ac88605eE2556407a9ec36759acF2c3E0a31",
      "txHash": "0x9ef1c03396dee9da8dd40fa5036153c985cb76ba5149355bf82f626b98aae476",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "PriceFeed",
            "label": "aggregators",
            "type": "t_mapping(t_bytes32,t_contract(AggregatorV2V3Interface)141)",
            "src": "contracts/PriceFeed/PriceFeed.sol:24"
          },
          {
            "contract": "PriceFeed",
            "label": "currencyKeyDecimals",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "src": "contracts/PriceFeed/PriceFeed.sol:26"
          },
          {
            "contract": "PriceFeed",
            "label": "aggregatorKeys",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/PriceFeed/PriceFeed.sol:28"
          },
          {
            "contract": "PriceFeed",
            "label": "currencyKeys",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/PriceFeed/PriceFeed.sol:31"
          },
          {
            "contract": "PriceFeed",
            "label": "pools",
            "type": "t_mapping(t_bytes32,t_contract(IUniswapV3Pool)840)",
            "src": "contracts/PriceFeed/PriceFeed.sol:32"
          },
          {
            "contract": "PriceFeed",
            "label": "twapInterval",
            "type": "t_int56",
            "src": "contracts/PriceFeed/PriceFeed.sol:34"
          },
          {
            "contract": "PriceFeed",
            "label": "_ETH",
            "type": "t_address",
            "src": "contracts/PriceFeed/PriceFeed.sol:41"
          },
          {
            "contract": "PriceFeed",
            "label": "_wETH",
            "type": "t_address",
            "src": "contracts/PriceFeed/PriceFeed.sol:42"
          },
          {
            "contract": "PriceFeed",
            "label": "useLastTickForTWAP",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/PriceFeed/PriceFeed.sol:44"
          },
          {
            "contract": "PriceFeed",
            "label": "staticPricePerAsset",
            "type": "t_mapping(t_bytes32,t_struct(RateAndUpdatedTime)1305_storage)",
            "src": "contracts/PriceFeed/PriceFeed.sol:46"
          },
          {
            "contract": "PriceFeed",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/PriceFeed/PriceFeed.sol:48"
          },
          {
            "contract": "PriceFeed",
            "label": "allowedRateUpdatePercentage",
            "type": "t_uint256",
            "src": "contracts/PriceFeed/PriceFeed.sol:50"
          },
          {
            "contract": "PriceFeed",
            "label": "rateUpdateInterval",
            "type": "t_uint256",
            "src": "contracts/PriceFeed/PriceFeed.sol:52"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_contract(AggregatorV2V3Interface)141)": {
            "label": "mapping(bytes32 => contract AggregatorV2V3Interface)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(AggregatorV2V3Interface)141": {
            "label": "contract AggregatorV2V3Interface"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_contract(IUniswapV3Pool)840)": {
            "label": "mapping(bytes32 => contract IUniswapV3Pool)"
          },
          "t_contract(IUniswapV3Pool)840": {
            "label": "contract IUniswapV3Pool"
          },
          "t_int56": {
            "label": "int56"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RateAndUpdatedTime)1305_storage)": {
            "label": "mapping(bytes32 => struct PriceFeed.RateAndUpdatedTime)"
          },
          "t_struct(RateAndUpdatedTime)1305_storage": {
            "label": "struct PriceFeed.RateAndUpdatedTime",
            "members": [
              {
                "label": "rate",
                "type": "t_uint216"
              },
              {
                "label": "time",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint216": {
            "label": "uint216"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "85bd210f86542be922b48710520310ac6b37fca2f7177e918c0fec9fb3b8b543": {
      "address": "0xE1c1e5D6584134Bc3Cd58b7c2835e23155738C8e",
      "txHash": "0x40260688ffb3f85d0d20ce365b1cc04ba7d1eb7718db3dde9e003a1d379412d8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "Referrals",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/AMM/Referrals.sol:23"
          },
          {
            "contract": "Referrals",
            "label": "referrals",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/AMM/Referrals.sol:24"
          },
          {
            "contract": "Referrals",
            "label": "referralStarted",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/AMM/Referrals.sol:25"
          },
          {
            "contract": "Referrals",
            "label": "tradedBefore",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/AMM/Referrals.sol:27"
          },
          {
            "contract": "Referrals",
            "label": "sportReferrals",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/AMM/Referrals.sol:29"
          },
          {
            "contract": "Referrals",
            "label": "sportReferralStarted",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/AMM/Referrals.sol:30"
          },
          {
            "contract": "Referrals",
            "label": "sportTradedBefore",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/AMM/Referrals.sol:31"
          },
          {
            "contract": "Referrals",
            "label": "sportsAMM",
            "type": "t_address",
            "src": "contracts/AMM/Referrals.sol:32"
          },
          {
            "contract": "Referrals",
            "label": "parlayAMM",
            "type": "t_address",
            "src": "contracts/AMM/Referrals.sol:33"
          },
          {
            "contract": "Referrals",
            "label": "referrerFeeDefault",
            "type": "t_uint256",
            "src": "contracts/AMM/Referrals.sol:35"
          },
          {
            "contract": "Referrals",
            "label": "referrerFeeSilver",
            "type": "t_uint256",
            "src": "contracts/AMM/Referrals.sol:36"
          },
          {
            "contract": "Referrals",
            "label": "referrerFeeGold",
            "type": "t_uint256",
            "src": "contracts/AMM/Referrals.sol:37"
          },
          {
            "contract": "Referrals",
            "label": "silverAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/AMM/Referrals.sol:39"
          },
          {
            "contract": "Referrals",
            "label": "goldAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/AMM/Referrals.sol:40"
          },
          {
            "contract": "Referrals",
            "label": "sportsAMMV2",
            "type": "t_address",
            "src": "contracts/AMM/Referrals.sol:42"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "98bb1b5d2056200395ecf8c97683a3e1a9134a3f04b3c96c37162174d20eac2c": {
      "address": "0x47Da40be6B617d0199ADF1Ec3550f3875b246124",
      "txHash": "0x3e08a81db3a712c8a2bc925546cf431a1869101ed9f17729bec0e97824f67a84",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)117747_storage",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:38"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)117747_storage",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:39"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)8368",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:44"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:46"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:48"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFee",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:49"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:51"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "supportedAsset",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:53"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minimalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:55"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:56"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:58"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:59"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:61"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:62"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "assetToPythId",
            "type": "t_mapping(t_bytes32,t_bytes32)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:64"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "pyth",
            "type": "t_contract(IPyth)12196",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:66"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelay",
            "type": "t_uint64",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:68"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)111437",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:70"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)117747_storage)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:72"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)117747_storage)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:73"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:75"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)109350",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:76"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:77"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)47754,t_uint256))",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:79"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)47754,t_uint256))",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:80"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelayForResolving",
            "type": "t_uint64",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:82"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "marketHasCreatedAtAttribute",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:84"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:86"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "timeThresholdsForFees",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:88"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFees",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:89"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketsAMMUtils",
            "type": "t_contract(SpeedMarketsAMMUtils)55233",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:91"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "marketHasFeeAttribute",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:93"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)108529",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:96"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxSkewImpact",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:98"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "skewSlippage",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:99"
          }
        ],
        "types": {
          "t_struct(AddressSet)117747_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)8368": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_contract(IPyth)12196": {
            "label": "contract IPyth"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(IStakingThales)111437": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_struct(AddressSet)117747_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(IMultiCollateralOnOffRamp)109350": {
            "label": "contract IMultiCollateralOnOffRamp"
          },
          "t_mapping(t_bytes32,t_mapping(t_enum(Direction)47754,t_uint256))": {
            "label": "mapping(bytes32 => mapping(enum SpeedMarket.Direction => uint256))"
          },
          "t_mapping(t_enum(Direction)47754,t_uint256)": {
            "label": "mapping(enum SpeedMarket.Direction => uint256)"
          },
          "t_enum(Direction)47754": {
            "label": "enum SpeedMarket.Direction",
            "members": [
              "Up",
              "Down"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(SpeedMarketsAMMUtils)55233": {
            "label": "contract SpeedMarketsAMMUtils"
          },
          "t_contract(IAddressManager)108529": {
            "label": "contract IAddressManager"
          }
        }
      }
    },
    "5fb8edf611373e49c2006eaab9dbcd2c6b317255b5ce86d488e8bd7ff31e056b": {
      "address": "0xE7f346cEB3765B664c7896701fF1BC42b936f596",
      "txHash": "0x6851c1821c906768d3e134805ae4855607c4fe350e156d962354c774e129345d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)470",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:41"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)7099_storage",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:43"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)7099_storage",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:44"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)7099_storage)",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:46"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)7099_storage)",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:47"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minChainedMarkets",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:49"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxChainedMarkets",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:50"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minTimeFrame",
            "type": "t_uint64",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:52"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxTimeFrame",
            "type": "t_uint64",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:53"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:55"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:56"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxProfitPerIndividualMarket",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:58"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "payoutMultiplier",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:60"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxRisk",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:62"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "currentRisk",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:63"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "chainedSpeedMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:65"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:67"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)6615",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:70"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "payoutMultipliers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:74"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)470": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(AddressSet)7099_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(AddressSet)7099_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IAddressManager)6615": {
            "label": "contract IAddressManager"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "b4d9c6ff417f307c4bafa9e580ae964adc01e615a7db7c6437c798e03d51449b": {
      "address": "0xA31B33a2C95Ed6E2354E185B16Bc2175cdfa939f",
      "txHash": "0x279eabaf44565683c62d8e6eb7c353386f3afd574b28c1313ea4edb0bd9127ec",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SpeedMarketsAMMResolver",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)8033",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMMResolver.sol:43"
          },
          {
            "contract": "SpeedMarketsAMMResolver",
            "label": "speedMarketsAMM",
            "type": "t_contract(ISpeedMarketsAMM)8474",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMMResolver.sol:44"
          },
          {
            "contract": "SpeedMarketsAMMResolver",
            "label": "chainedSpeedMarketsAMM",
            "type": "t_contract(IChainedSpeedMarketsAMM)8142",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMMResolver.sol:45"
          }
        ],
        "types": {
          "t_contract(IAddressManager)8033": {
            "label": "contract IAddressManager"
          },
          "t_contract(ISpeedMarketsAMM)8474": {
            "label": "contract ISpeedMarketsAMM"
          },
          "t_contract(IChainedSpeedMarketsAMM)8142": {
            "label": "contract IChainedSpeedMarketsAMM"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "586bd985aa746e6738824c6b31545a489e9dbc7cd63fba9ae09ff544c69826f5": {
      "address": "0x91244D1924Db9B301473f395be8075eAD9C7a66C",
      "txHash": "0xa522a16739dea983d54a2722f692c1c7e3c8c0ca2c42dadad91996b5388232a1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SpeedMarketsAMMUtils",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)110544",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMMUtils.sol:27"
          },
          {
            "contract": "SpeedMarketsAMMUtils",
            "label": "collateralKey",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMMUtils.sol:30"
          }
        ],
        "types": {
          "t_contract(IAddressManager)110544": {
            "label": "contract IAddressManager"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "2d514394dc19157a5a5f1a96c6744fd55309a3f6fe2bbdf428ca63f7f512bb38": {
      "address": "0x0caeac5dC4afAAa8993e16C2EafE3C0B176c7C79",
      "txHash": "0xe11bfd16e0b9ed52aaab51c3c09f9c798c5930d29971ff22df78dbdcf7f89864",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)7181_storage",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:38"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)7181_storage",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:39"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)470",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:67"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:69"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:71"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFee",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:72"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:74"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "supportedAsset",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:76"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minimalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:78"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:79"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:81"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:82"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:84"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:85"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "assetToPythId",
            "type": "t_mapping(t_bytes32,t_bytes32)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:87"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "pyth",
            "type": "t_contract(IPyth)1502",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:89"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelay",
            "type": "t_uint64",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:91"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)7171",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:93"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)7181_storage)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:95"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)7181_storage)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:96"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:98"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)6769",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:99"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:100"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)3868,t_uint256))",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:102"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)3868,t_uint256))",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:103"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelayForResolving",
            "type": "t_uint64",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:105"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "marketHasCreatedAtAttribute",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:107"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:109"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "timeThresholdsForFees",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:111"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFees",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:112"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketsAMMUtils",
            "type": "t_contract(ISpeedMarketsAMMUtils)7062",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:114"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "marketHasFeeAttribute",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:116"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)6577",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:119"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxSkewImpact",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:121"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "skewSlippage",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:122"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "supportedNativeCollateral",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:124"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "bonusPerCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:127"
          }
        ],
        "types": {
          "t_struct(AddressSet)7181_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)470": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_contract(IPyth)1502": {
            "label": "contract IPyth"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(IStakingThales)7171": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_struct(AddressSet)7181_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(IMultiCollateralOnOffRamp)6769": {
            "label": "contract IMultiCollateralOnOffRamp"
          },
          "t_mapping(t_bytes32,t_mapping(t_enum(Direction)3868,t_uint256))": {
            "label": "mapping(bytes32 => mapping(enum SpeedMarket.Direction => uint256))"
          },
          "t_mapping(t_enum(Direction)3868,t_uint256)": {
            "label": "mapping(enum SpeedMarket.Direction => uint256)"
          },
          "t_enum(Direction)3868": {
            "label": "enum SpeedMarket.Direction",
            "members": [
              "Up",
              "Down"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(ISpeedMarketsAMMUtils)7062": {
            "label": "contract ISpeedMarketsAMMUtils"
          },
          "t_contract(IAddressManager)6577": {
            "label": "contract IAddressManager"
          }
        }
      }
    },
    "a4efaa80b5e857a409b641ec796b236827670fe75f62e644cf52aec6a7837c99": {
      "address": "0x95606b6A41D1BE6772899EBD77e90cAb6aeBBed6",
      "txHash": "0x890aa5a2cd3ed4b4e6f678e41406e776fd51992e88b513e16c1326bcb436e817",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)470",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:55"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)7167_storage",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:57"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)7167_storage",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:58"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)7167_storage)",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:60"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)7167_storage)",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:61"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minChainedMarkets",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:63"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxChainedMarkets",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:64"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minTimeFrame",
            "type": "t_uint64",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:66"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxTimeFrame",
            "type": "t_uint64",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:67"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:69"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:70"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxProfitPerIndividualMarket",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:72"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "payoutMultiplier",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:74"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxRisk",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:76"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "currentRisk",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:77"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "chainedSpeedMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:79"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:81"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)6563",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:84"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "payoutMultipliers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:88"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)470": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(AddressSet)7167_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(AddressSet)7167_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IAddressManager)6563": {
            "label": "contract IAddressManager"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "dd400da1baa7c67b074b88552be80bb8717c84bbde01ec0a0dbfcaed4cfea6fc": {
      "address": "0x95E8C849FA22012d88f40180A1524Ef31BE11a14",
      "txHash": "0x13a18b178c8b1195623e1848c4d5fdfd61af6a9e490efdb8a2b0fb82295f2d5a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SpeedMarketsAMMData",
            "label": "speedMarketsAMM",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMMData.sol:19"
          },
          {
            "contract": "SpeedMarketsAMMData",
            "label": "chainedSpeedMarketsAMM",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMMData.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8112a83e40d0a9d961bb4cc93c6c8d1b3f04540e9838df4269f9d773fd1f7538": {
      "address": "0x5868a89f80AF6f01C75Bf77C90E28048E62e7980",
      "txHash": "0x1120b08837bff6d881e74c14f92abc838b7273aace417b7b266b513ceda663b5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)4785_storage",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:38"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)4785_storage",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:39"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)470",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:66"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:68"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBoxImpact",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:70"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFee",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:71"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "safeBox",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:73"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "supportedAsset",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:75"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minimalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:77"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximalTimeToMaturity",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:78"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:80"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:81"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:83"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAsset",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:84"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "assetToPythId",
            "type": "t_mapping(t_bytes32,t_bytes32)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:86"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "pyth",
            "type": "t_contract(IPyth)1502",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:88"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelay",
            "type": "t_uint64",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:90"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "stakingThales",
            "type": "t_contract(IStakingThales)4775",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:92"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)4785_storage)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:94"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)4785_storage)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:95"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "whitelistedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:97"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multiCollateralOnOffRamp",
            "type": "t_contract(IMultiCollateralOnOffRamp)4373",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:98"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:99"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)1583,t_uint256))",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:101"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "currentRiskPerAssetAndDirection",
            "type": "t_mapping(t_bytes32,t_mapping(t_enum(Direction)1583,t_uint256))",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:102"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maximumPriceDelayForResolving",
            "type": "t_uint64",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:104"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "marketHasCreatedAtAttribute",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:106"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "referrals",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:108"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "timeThresholdsForFees",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:110"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "lpFees",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:111"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "speedMarketsAMMUtils",
            "type": "t_contract(ISpeedMarketsAMMUtils)4666",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:113"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "marketHasFeeAttribute",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:115"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)4290",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:118"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "maxSkewImpact",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:120"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "skewSlippage",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:121"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "supportedNativeCollateral",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:123"
          },
          {
            "contract": "SpeedMarketsAMM",
            "label": "bonusPerCollateral",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMM.sol:126"
          }
        ],
        "types": {
          "t_struct(AddressSet)4785_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)470": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_contract(IPyth)1502": {
            "label": "contract IPyth"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(IStakingThales)4775": {
            "label": "contract IStakingThales"
          },
          "t_mapping(t_address,t_struct(AddressSet)4785_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_contract(IMultiCollateralOnOffRamp)4373": {
            "label": "contract IMultiCollateralOnOffRamp"
          },
          "t_mapping(t_bytes32,t_mapping(t_enum(Direction)1583,t_uint256))": {
            "label": "mapping(bytes32 => mapping(enum SpeedMarket.Direction => uint256))"
          },
          "t_mapping(t_enum(Direction)1583,t_uint256)": {
            "label": "mapping(enum SpeedMarket.Direction => uint256)"
          },
          "t_enum(Direction)1583": {
            "label": "enum SpeedMarket.Direction",
            "members": [
              "Up",
              "Down"
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(ISpeedMarketsAMMUtils)4666": {
            "label": "contract ISpeedMarketsAMMUtils"
          },
          "t_contract(IAddressManager)4290": {
            "label": "contract IAddressManager"
          }
        }
      }
    },
    "fafecf686ab56e11166cadebdd430d93884b950c00b4810487082d49daeabc9a": {
      "address": "0x5e994AB690e4397eBb174d567807A62a780f4b4C",
      "txHash": "0xa840f1f2b2ee61acd6c934f5a5e9eac3a17b03d063cf9b272d8f62383cd4148a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_guardCounter",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:19"
          },
          {
            "contract": "ProxyReentrancyGuard",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyReentrancyGuard.sol:20"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "sUSD",
            "type": "t_contract(IERC20Upgradeable)470",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:55"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_activeMarkets",
            "type": "t_struct(AddressSet)7165_storage",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:57"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_maturedMarkets",
            "type": "t_struct(AddressSet)7165_storage",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:58"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_activeMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)7165_storage)",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:60"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "_maturedMarketsPerUser",
            "type": "t_mapping(t_address,t_struct(AddressSet)7165_storage)",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:61"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minChainedMarkets",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:63"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxChainedMarkets",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:64"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minTimeFrame",
            "type": "t_uint64",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:66"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxTimeFrame",
            "type": "t_uint64",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:67"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "minBuyinAmount",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:69"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxBuyinAmount",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:70"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxProfitPerIndividualMarket",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:72"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "payoutMultiplier",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:74"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "maxRisk",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:76"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "currentRisk",
            "type": "t_uint256",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:77"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "chainedSpeedMarketMastercopy",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:79"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "multicollateralEnabled",
            "type": "t_bool",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:81"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "addressManager",
            "type": "t_contract(IAddressManager)6561",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:84"
          },
          {
            "contract": "ChainedSpeedMarketsAMM",
            "label": "payoutMultipliers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/SpeedMarkets/ChainedSpeedMarketsAMM.sol:88"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)470": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(AddressSet)7165_storage": {
            "label": "struct AddressSetLib.AddressSet",
            "members": [
              {
                "label": "elements",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "indices",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(AddressSet)7165_storage)": {
            "label": "mapping(address => struct AddressSetLib.AddressSet)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IAddressManager)6561": {
            "label": "contract IAddressManager"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "23bd87a1428cf01aa6a1ccadecb87f65697b75a7b0b4c7daa8b1fd3e6902727c": {
      "address": "0xAB9c017d4eF9b2f1B82A5f4468EDF374ede5d912",
      "txHash": "0x1de42f2c06295dd2d814f97ac8234ff6d5a5ec869a5e9147d5485102b69aa5f7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ProxyOwned",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:7"
          },
          {
            "contract": "ProxyOwned",
            "label": "nominatedOwner",
            "type": "t_address",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:8"
          },
          {
            "contract": "ProxyOwned",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:9"
          },
          {
            "contract": "ProxyOwned",
            "label": "_transferredAtInit",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyOwned.sol:10"
          },
          {
            "contract": "ProxyPausable",
            "label": "lastPauseTime",
            "type": "t_uint256",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:11"
          },
          {
            "contract": "ProxyPausable",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/utils/proxy/solidity-0.8.0/ProxyPausable.sol:12"
          },
          {
            "contract": "SpeedMarketsAMMData",
            "label": "speedMarketsAMM",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMMData.sol:21"
          },
          {
            "contract": "SpeedMarketsAMMData",
            "label": "chainedSpeedMarketsAMM",
            "type": "t_address",
            "src": "contracts/SpeedMarkets/SpeedMarketsAMMData.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
